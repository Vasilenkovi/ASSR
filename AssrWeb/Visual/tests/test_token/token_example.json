{
  "_id": {
    "$oid": "67ef9f38b5355bf09474194c"
  },
  "processing_id": 1,
  "error_message": null,
  "files": [
    {
      "file_id": 1,
      "type": "PDF",
      "samples": [
        {
          "sentence": 0,
          "input": "1  Лекция 7  7.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5914095640182495,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.9812078475952148,
              "index": 2,
              "word": "Ле",
              "start": 3,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.614206075668335,
              "index": 3,
              "word": "##кция",
              "start": 5,
              "end": 9
            }
          ]
        },
        {
          "sentence": 1,
          "input": "ТИПЫ ДАННЫХ В PROLOG: СПИСКИ (ПРОДОЛЖЕНИЕ) ................................................................................... 1  7.1.1.",
          "output": []
        },
        {
          "sentence": 2,
          "input": "ОПЕРАЦИИ НАД СПИСКАМИ В PROLOG .................................................................................................................... 1  7.1.1.1.",
          "output": [
            {
              "entity": "I-ORG",
              "score": 0.45951151847839355,
              "index": 8,
              "word": "Н",
              "start": 9,
              "end": 10
            },
            {
              "entity": "I-ORG",
              "score": 0.4702574610710144,
              "index": 9,
              "word": "##А",
              "start": 10,
              "end": 11
            },
            {
              "entity": "I-ORG",
              "score": 0.5552956461906433,
              "index": 10,
              "word": "##Д",
              "start": 11,
              "end": 12
            },
            {
              "entity": "I-ORG",
              "score": 0.6787851452827454,
              "index": 11,
              "word": "С",
              "start": 13,
              "end": 14
            },
            {
              "entity": "I-ORG",
              "score": 0.6959424018859863,
              "index": 12,
              "word": "##П",
              "start": 14,
              "end": 15
            },
            {
              "entity": "I-ORG",
              "score": 0.6393265128135681,
              "index": 13,
              "word": "##И",
              "start": 15,
              "end": 16
            },
            {
              "entity": "I-ORG",
              "score": 0.5880533456802368,
              "index": 14,
              "word": "##С",
              "start": 16,
              "end": 17
            },
            {
              "entity": "I-ORG",
              "score": 0.5198091864585876,
              "index": 15,
              "word": "##КА",
              "start": 17,
              "end": 19
            },
            {
              "entity": "I-ORG",
              "score": 0.47951656579971313,
              "index": 16,
              "word": "##М",
              "start": 19,
              "end": 20
            }
          ]
        },
        {
          "sentence": 3,
          "input": "Объединение двух списков ........................................................................................................................ 1  7.1.1.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8286295533180237,
              "index": 7,
              "word": ".",
              "start": 25,
              "end": 26
            }
          ]
        },
        {
          "sentence": 4,
          "input": "Поиск элемента в списке .......................................................................................................................... 2  7.1.1.3.",
          "output": []
        },
        {
          "sentence": 5,
          "input": "Сортировка списка .................................................................................................................................... 4  7.2.",
          "output": []
        },
        {
          "sentence": 6,
          "input": "ДВУСВЯЗНЫЕ СПИСКИ В PROLOG .................................................................................................................... 6  7.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.46499156951904297,
              "index": 1,
              "word": "Д",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.7800329923629761,
              "index": 18,
              "word": "PR",
              "start": 20,
              "end": 22
            },
            {
              "entity": "I-MISC",
              "score": 0.7013167142868042,
              "index": 19,
              "word": "##OL",
              "start": 22,
              "end": 24
            },
            {
              "entity": "I-MISC",
              "score": 0.5772280097007751,
              "index": 20,
              "word": "##O",
              "start": 24,
              "end": 25
            },
            {
              "entity": "I-MISC",
              "score": 0.47265729308128357,
              "index": 21,
              "word": "##G",
              "start": 25,
              "end": 26
            }
          ]
        },
        {
          "sentence": 7,
          "input": "ДЕРЕВЬЯ В PROLOG .......................................................................................................................................... 7  7.3.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6734035611152649,
              "index": 1,
              "word": "Д",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.8612391352653503,
              "index": 9,
              "word": "PR",
              "start": 10,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.7915349006652832,
              "index": 10,
              "word": "##OL",
              "start": 12,
              "end": 14
            },
            {
              "entity": "I-MISC",
              "score": 0.7098209261894226,
              "index": 11,
              "word": "##O",
              "start": 14,
              "end": 15
            },
            {
              "entity": "I-MISC",
              "score": 0.5780546069145203,
              "index": 12,
              "word": "##G",
              "start": 15,
              "end": 16
            }
          ]
        },
        {
          "sentence": 8,
          "input": "ПРИМЕР 7.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9541078805923462,
              "index": 1,
              "word": "П",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.7907965183258057,
              "index": 2,
              "word": "##Р",
              "start": 1,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.7275282144546509,
              "index": 3,
              "word": "##И",
              "start": 2,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.4817817211151123,
              "index": 4,
              "word": "##М",
              "start": 3,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.6723973751068115,
              "index": 5,
              "word": "##Е",
              "start": 4,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.42212143540382385,
              "index": 6,
              "word": "##Р",
              "start": 5,
              "end": 6
            }
          ]
        },
        {
          "sentence": 9,
          "input": "ПОИСК В ДЕРЕВЕ ............................................................................................................................... 8  7.3.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.4812358617782593,
              "index": 7,
              "word": "Д",
              "start": 8,
              "end": 9
            }
          ]
        },
        {
          "sentence": 10,
          "input": "ПРИМЕР 7.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9460415244102478,
              "index": 1,
              "word": "П",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.7927496433258057,
              "index": 2,
              "word": "##Р",
              "start": 1,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.7327579259872437,
              "index": 3,
              "word": "##И",
              "start": 2,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.4643874168395996,
              "index": 4,
              "word": "##М",
              "start": 3,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.6628962755203247,
              "index": 5,
              "word": "##Е",
              "start": 4,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.39507877826690674,
              "index": 6,
              "word": "##Р",
              "start": 5,
              "end": 6
            }
          ]
        },
        {
          "sentence": 11,
          "input": "ОБХОД ДЕРЕВА В ПОРЯДКЕ ПРЯМОГО ОБХОДА ...................................................................................... 9  7.3.3.",
          "output": []
        },
        {
          "sentence": 12,
          "input": "ПРИМЕР 7.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9491626024246216,
              "index": 1,
              "word": "П",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.7982866168022156,
              "index": 2,
              "word": "##Р",
              "start": 1,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.7420966029167175,
              "index": 3,
              "word": "##И",
              "start": 2,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.45216500759124756,
              "index": 4,
              "word": "##М",
              "start": 3,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.6596277952194214,
              "index": 5,
              "word": "##Е",
              "start": 4,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.40368905663490295,
              "index": 6,
              "word": "##Р",
              "start": 5,
              "end": 6
            }
          ]
        },
        {
          "sentence": 13,
          "input": "ВСТАВКА ЭЛЕМЕНТА В БИНАРНОЕ ДЕРЕВО .......................................................................................... 10    7.1.",
          "output": []
        },
        {
          "sentence": 14,
          "input": "Типы данных в Prolog: списки (продолжение)  7.1.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9984132051467896,
              "index": 5,
              "word": "Pro",
              "start": 14,
              "end": 17
            },
            {
              "entity": "I-MISC",
              "score": 0.9918559789657593,
              "index": 6,
              "word": "##log",
              "start": 17,
              "end": 20
            }
          ]
        },
        {
          "sentence": 15,
          "input": "Операции над списками в Prolog  7.1.1.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.998389720916748,
              "index": 9,
              "word": "Pro",
              "start": 24,
              "end": 27
            },
            {
              "entity": "I-MISC",
              "score": 0.992719292640686,
              "index": 10,
              "word": "##log",
              "start": 27,
              "end": 30
            }
          ]
        },
        {
          "sentence": 16,
          "input": "Объединение двух списков  Слияние двух списков и получение таким образом третьего спис ка принадлежит к  числу наиболее полезных при работе со списками операций.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9084528088569641,
              "index": 7,
              "word": "С",
              "start": 26,
              "end": 27
            }
          ]
        },
        {
          "sentence": 17,
          "input": "Рассмотрим пример вызова append_lists([1, 2], [3, 4], Result):  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9909535646438599,
              "index": 26,
              "word": "Res",
              "start": 54,
              "end": 57
            },
            {
              "entity": "I-MISC",
              "score": 0.9707660675048828,
              "index": 27,
              "word": "##ult",
              "start": 57,
              "end": 60
            }
          ]
        },
        {
          "sentence": 18,
          "input": "Первый вызов: append_lists([1, 2], [3, 4], Result).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9947590231895447,
              "index": 22,
              "word": "Res",
              "start": 43,
              "end": 46
            },
            {
              "entity": "I-MISC",
              "score": 0.978371262550354,
              "index": 23,
              "word": "##ult",
              "start": 46,
              "end": 49
            }
          ]
        },
        {
          "sentence": 19,
          "input": " Список [1, 2] раскладывается на Head = 1 и Tail = [2].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9096041917800903,
              "index": 12,
              "word": "Head",
              "start": 34,
              "end": 38
            },
            {
              "entity": "B-MISC",
              "score": 0.8695888519287109,
              "index": 16,
              "word": "Tail",
              "start": 45,
              "end": 49
            }
          ]
        },
        {
          "sentence": 20,
          "input": " Программа вызывает себя рекурсивно для хвоста: append_lists([2], [3, 4], SubResult).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9958516359329224,
              "index": 29,
              "word": "Sub",
              "start": 75,
              "end": 78
            },
            {
              "entity": "I-MISC",
              "score": 0.930928111076355,
              "index": 30,
              "word": "##R",
              "start": 78,
              "end": 79
            },
            {
              "entity": "I-MISC",
              "score": 0.9863948822021484,
              "index": 31,
              "word": "##esu",
              "start": 79,
              "end": 82
            },
            {
              "entity": "I-MISC",
              "score": 0.9858319759368896,
              "index": 32,
              "word": "##lt",
              "start": 82,
              "end": 84
            }
          ]
        },
        {
          "sentence": 21,
          "input": " Result будет собираться как [1 | SubResult].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9962764382362366,
              "index": 11,
              "word": "Sub",
              "start": 35,
              "end": 38
            },
            {
              "entity": "I-MISC",
              "score": 0.8492667078971863,
              "index": 12,
              "word": "##R",
              "start": 38,
              "end": 39
            },
            {
              "entity": "I-MISC",
              "score": 0.9788967967033386,
              "index": 13,
              "word": "##esu",
              "start": 39,
              "end": 42
            },
            {
              "entity": "I-MISC",
              "score": 0.9818763732910156,
              "index": 14,
              "word": "##lt",
              "start": 42,
              "end": 44
            }
          ]
        },
        {
          "sentence": 22,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 23,
          "input": "Второй вызов (рекурсия для [2]): append_lists([2], [3, 4], SubResult).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9939283132553101,
              "index": 29,
              "word": "Sub",
              "start": 59,
              "end": 62
            },
            {
              "entity": "I-MISC",
              "score": 0.8751755952835083,
              "index": 30,
              "word": "##R",
              "start": 62,
              "end": 63
            },
            {
              "entity": "I-MISC",
              "score": 0.9797184467315674,
              "index": 31,
              "word": "##esu",
              "start": 63,
              "end": 66
            },
            {
              "entity": "I-MISC",
              "score": 0.9767149090766907,
              "index": 32,
              "word": "##lt",
              "start": 66,
              "end": 68
            }
          ]
        },
        {
          "sentence": 24,
          "input": " Список [2] раскладывается на Head = 2 и Tail = [ ].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9420309066772461,
              "index": 10,
              "word": "Head",
              "start": 31,
              "end": 35
            },
            {
              "entity": "B-MISC",
              "score": 0.8935912251472473,
              "index": 14,
              "word": "Tail",
              "start": 42,
              "end": 46
            }
          ]
        },
        {
          "sentence": 25,
          "input": " Программа вызывает себя рекурсивно для хвоста: append_lists([], [3, 4], SubSubResult).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9954132437705994,
              "index": 28,
              "word": "Sub",
              "start": 74,
              "end": 77
            },
            {
              "entity": "I-MISC",
              "score": 0.9136573672294617,
              "index": 29,
              "word": "##S",
              "start": 77,
              "end": 78
            },
            {
              "entity": "I-MISC",
              "score": 0.9870010614395142,
              "index": 30,
              "word": "##ub",
              "start": 78,
              "end": 80
            },
            {
              "entity": "I-MISC",
              "score": 0.9704303741455078,
              "index": 31,
              "word": "##R",
              "start": 80,
              "end": 81
            },
            {
              "entity": "I-MISC",
              "score": 0.9839895367622375,
              "index": 32,
              "word": "##esu",
              "start": 81,
              "end": 84
            },
            {
              "entity": "I-MISC",
              "score": 0.9809561371803284,
              "index": 33,
              "word": "##lt",
              "start": 84,
              "end": 86
            }
          ]
        },
        {
          "sentence": 26,
          "input": " SubResult будет собираться как [2 | SubSubResult].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.952019214630127,
              "index": 1,
              "word": "Sub",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.5766737461090088,
              "index": 3,
              "word": "##esu",
              "start": 6,
              "end": 9
            },
            {
              "entity": "I-MISC",
              "score": 0.6497603058815002,
              "index": 4,
              "word": "##lt",
              "start": 9,
              "end": 11
            },
            {
              "entity": "B-MISC",
              "score": 0.9785587787628174,
              "index": 13,
              "word": "Sub",
              "start": 38,
              "end": 41
            },
            {
              "entity": "I-MISC",
              "score": 0.5936816334724426,
              "index": 14,
              "word": "##S",
              "start": 41,
              "end": 42
            },
            {
              "entity": "I-MISC",
              "score": 0.8142175078392029,
              "index": 15,
              "word": "##ub",
              "start": 42,
              "end": 44
            },
            {
              "entity": "I-MISC",
              "score": 0.743449330329895,
              "index": 16,
              "word": "##R",
              "start": 44,
              "end": 45
            },
            {
              "entity": "I-MISC",
              "score": 0.8769245743751526,
              "index": 17,
              "word": "##esu",
              "start": 45,
              "end": 48
            },
            {
              "entity": "I-MISC",
              "score": 0.8554896116256714,
              "index": 18,
              "word": "##lt",
              "start": 48,
              "end": 50
            }
          ]
        },
        {
          "sentence": 27,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 28,
          "input": "Третий вызов (базовый случай): append_lists([], [3, 4], SubSubResult).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.995578944683075,
              "index": 26,
              "word": "Sub",
              "start": 56,
              "end": 59
            },
            {
              "entity": "I-MISC",
              "score": 0.8746005892753601,
              "index": 27,
              "word": "##S",
              "start": 59,
              "end": 60
            },
            {
              "entity": "I-MISC",
              "score": 0.9813862442970276,
              "index": 28,
              "word": "##ub",
              "start": 60,
              "end": 62
            },
            {
              "entity": "I-MISC",
              "score": 0.9605066776275635,
              "index": 29,
              "word": "##R",
              "start": 62,
              "end": 63
            },
            {
              "entity": "I-MISC",
              "score": 0.9801920652389526,
              "index": 30,
              "word": "##esu",
              "start": 63,
              "end": 66
            },
            {
              "entity": "I-MISC",
              "score": 0.9786776304244995,
              "index": 31,
              "word": "##lt",
              "start": 66,
              "end": 68
            }
          ]
        },
        {
          "sentence": 29,
          "input": " Список пустой ([ ]).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8150827884674072,
              "index": 2,
              "word": "п",
              "start": 9,
              "end": 10
            },
            {
              "entity": "B-MISC",
              "score": 0.456127405166626,
              "index": 3,
              "word": "##ус",
              "start": 10,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.4991213083267212,
              "index": 4,
              "word": "##той",
              "start": 12,
              "end": 15
            }
          ]
        },
        {
          "sentence": 30,
          "input": "2   По базовому случаю, результат объединения равен второму списку: SubSubResult = [3,  4].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9969822764396667,
              "index": 18,
              "word": "Sub",
              "start": 69,
              "end": 72
            },
            {
              "entity": "I-MISC",
              "score": 0.8487842679023743,
              "index": 19,
              "word": "##S",
              "start": 72,
              "end": 73
            },
            {
              "entity": "I-MISC",
              "score": 0.9530364871025085,
              "index": 20,
              "word": "##ub",
              "start": 73,
              "end": 75
            },
            {
              "entity": "I-MISC",
              "score": 0.8984944820404053,
              "index": 21,
              "word": "##R",
              "start": 75,
              "end": 76
            },
            {
              "entity": "I-MISC",
              "score": 0.9348374605178833,
              "index": 22,
              "word": "##esu",
              "start": 76,
              "end": 79
            },
            {
              "entity": "I-MISC",
              "score": 0.9338776469230652,
              "index": 23,
              "word": "##lt",
              "start": 79,
              "end": 81
            }
          ]
        },
        {
          "sentence": 31,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 32,
          "input": "Обратный ход рекурсии (возврат результатов):   Из вызова append_lists([2], [3, 4], SubResult): SubResult = [2 | [3, 4]] = [2, 3, 4].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8820026516914368,
              "index": 34,
              "word": "Sub",
              "start": 84,
              "end": 87
            },
            {
              "entity": "I-MISC",
              "score": 0.6425024271011353,
              "index": 35,
              "word": "##R",
              "start": 87,
              "end": 88
            },
            {
              "entity": "I-MISC",
              "score": 0.7402888536453247,
              "index": 36,
              "word": "##esu",
              "start": 88,
              "end": 91
            },
            {
              "entity": "I-MISC",
              "score": 0.7423426508903503,
              "index": 37,
              "word": "##lt",
              "start": 91,
              "end": 93
            },
            {
              "entity": "B-MISC",
              "score": 0.7461038827896118,
              "index": 40,
              "word": "Sub",
              "start": 96,
              "end": 99
            },
            {
              "entity": "I-MISC",
              "score": 0.45972609519958496,
              "index": 41,
              "word": "##R",
              "start": 99,
              "end": 100
            },
            {
              "entity": "I-MISC",
              "score": 0.5530393123626709,
              "index": 42,
              "word": "##esu",
              "start": 100,
              "end": 103
            },
            {
              "entity": "I-MISC",
              "score": 0.5736987590789795,
              "index": 43,
              "word": "##lt",
              "start": 103,
              "end": 105
            }
          ]
        },
        {
          "sentence": 33,
          "input": " Из вызова append_lists([1, 2], [3, 4], Result): SubResult = [1 | [2, 3, 4]] = [1, 2, 3, 4].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8262781500816345,
              "index": 21,
              "word": "Res",
              "start": 41,
              "end": 44
            },
            {
              "entity": "I-MISC",
              "score": 0.6100280284881592,
              "index": 22,
              "word": "##ult",
              "start": 44,
              "end": 47
            },
            {
              "entity": "B-MISC",
              "score": 0.6777020692825317,
              "index": 25,
              "word": "Sub",
              "start": 50,
              "end": 53
            }
          ]
        },
        {
          "sentence": 34,
          "input": "Ответ: Result = [1, 2, 3, 4].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9811195135116577,
              "index": 4,
              "word": "Res",
              "start": 7,
              "end": 10
            },
            {
              "entity": "I-MISC",
              "score": 0.9823785424232483,
              "index": 5,
              "word": "##ult",
              "start": 10,
              "end": 13
            }
          ]
        },
        {
          "sentence": 35,
          "input": "→ Вызов: append_lists([1, 2], [3, 4], Result)   → Вызов: append_lists([2], [3, 4], SubResult)    → Вызов: append_lists([], [3, 4], SubSubResult)    ← Возврат: SubSubResult = [3, 4]   ← Возврат: SubResult = [2, 3, 4]  ← Возврат: Result = [1, 2, 3, 4].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5275949239730835,
              "index": 22,
              "word": "Res",
              "start": 38,
              "end": 41
            },
            {
              "entity": "B-MISC",
              "score": 0.777927577495575,
              "index": 44,
              "word": "Sub",
              "start": 83,
              "end": 86
            },
            {
              "entity": "I-MISC",
              "score": 0.4728977382183075,
              "index": 45,
              "word": "##R",
              "start": 86,
              "end": 87
            },
            {
              "entity": "I-MISC",
              "score": 0.6895966529846191,
              "index": 46,
              "word": "##esu",
              "start": 87,
              "end": 90
            },
            {
              "entity": "I-MISC",
              "score": 0.6849387884140015,
              "index": 47,
              "word": "##lt",
              "start": 90,
              "end": 92
            },
            {
              "entity": "B-MISC",
              "score": 0.7713375687599182,
              "index": 67,
              "word": "Sub",
              "start": 131,
              "end": 134
            },
            {
              "entity": "I-MISC",
              "score": 0.551430344581604,
              "index": 68,
              "word": "##S",
              "start": 134,
              "end": 135
            },
            {
              "entity": "I-MISC",
              "score": 0.7648402452468872,
              "index": 69,
              "word": "##ub",
              "start": 135,
              "end": 137
            },
            {
              "entity": "I-MISC",
              "score": 0.6083114743232727,
              "index": 70,
              "word": "##R",
              "start": 137,
              "end": 138
            },
            {
              "entity": "I-MISC",
              "score": 0.6362406611442566,
              "index": 71,
              "word": "##esu",
              "start": 138,
              "end": 141
            },
            {
              "entity": "I-MISC",
              "score": 0.665180504322052,
              "index": 72,
              "word": "##lt",
              "start": 141,
              "end": 143
            },
            {
              "entity": "B-MISC",
              "score": 0.6701856851577759,
              "index": 79,
              "word": "Sub",
              "start": 159,
              "end": 162
            },
            {
              "entity": "I-MISC",
              "score": 0.5472658276557922,
              "index": 80,
              "word": "##S",
              "start": 162,
              "end": 163
            },
            {
              "entity": "I-MISC",
              "score": 0.7098789811134338,
              "index": 81,
              "word": "##ub",
              "start": 163,
              "end": 165
            },
            {
              "entity": "I-MISC",
              "score": 0.5035701990127563,
              "index": 82,
              "word": "##R",
              "start": 165,
              "end": 166
            },
            {
              "entity": "I-MISC",
              "score": 0.5377514362335205,
              "index": 83,
              "word": "##esu",
              "start": 166,
              "end": 169
            },
            {
              "entity": "I-MISC",
              "score": 0.5350373983383179,
              "index": 84,
              "word": "##lt",
              "start": 169,
              "end": 171
            },
            {
              "entity": "B-MISC",
              "score": 0.6249238848686218,
              "index": 96,
              "word": "Sub",
              "start": 194,
              "end": 197
            },
            {
              "entity": "I-MISC",
              "score": 0.4521811604499817,
              "index": 97,
              "word": "##R",
              "start": 197,
              "end": 198
            },
            {
              "entity": "I-MISC",
              "score": 0.5545787215232849,
              "index": 98,
              "word": "##esu",
              "start": 198,
              "end": 201
            },
            {
              "entity": "I-MISC",
              "score": 0.5290585160255432,
              "index": 99,
              "word": "##lt",
              "start": 201,
              "end": 203
            }
          ]
        },
        {
          "sentence": 36,
          "input": "Программа обрабатывает список рекурсивно, добавляя элементы первого списка ([1, 2])  по одному к второму списку ([3, 4]) до тех пор, пока не дойдет до базового случая, где первый  список пустой ([]).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9736826419830322,
              "index": 1,
              "word": "Про",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.683932900428772,
              "index": 2,
              "word": "##грамма",
              "start": 3,
              "end": 9
            }
          ]
        },
        {
          "sentence": 37,
          "input": "Затем она возвращает объединенный список.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9794010519981384,
              "index": 7,
              "word": "об",
              "start": 21,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.7222971320152283,
              "index": 8,
              "word": "##ъ",
              "start": 23,
              "end": 24
            },
            {
              "entity": "I-MISC",
              "score": 0.8309328556060791,
              "index": 9,
              "word": "##еди",
              "start": 24,
              "end": 27
            },
            {
              "entity": "I-MISC",
              "score": 0.876930296421051,
              "index": 10,
              "word": "##нен",
              "start": 27,
              "end": 30
            },
            {
              "entity": "I-MISC",
              "score": 0.7513960599899292,
              "index": 11,
              "word": "##ный",
              "start": 30,
              "end": 33
            },
            {
              "entity": "I-MISC",
              "score": 0.7226025462150574,
              "index": 12,
              "word": "список",
              "start": 34,
              "end": 40
            }
          ]
        },
        {
          "sentence": 38,
          "input": "В SWI-Prolog существует встроенный предикат append/3, который делает то же  самое:      7.1.1.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9532856941223145,
              "index": 2,
              "word": "SW",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.7862335443496704,
              "index": 3,
              "word": "##I",
              "start": 4,
              "end": 5
            },
            {
              "entity": "B-MISC",
              "score": 0.8497398495674133,
              "index": 5,
              "word": "Pro",
              "start": 6,
              "end": 9
            },
            {
              "entity": "I-MISC",
              "score": 0.9535412788391113,
              "index": 6,
              "word": "##log",
              "start": 9,
              "end": 12
            }
          ]
        },
        {
          "sentence": 39,
          "input": "Поиск элемента в списке  Поиск элемента в списке является очень распространенной операцией.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7275591492652893,
              "index": 1,
              "word": "По",
              "start": 0,
              "end": 2
            },
            {
              "entity": "I-MISC",
              "score": 0.6445389986038208,
              "index": 2,
              "word": "##иск",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.5068569779396057,
              "index": 3,
              "word": "элемент",
              "start": 6,
              "end": 13
            },
            {
              "entity": "B-MISC",
              "score": 0.8230128884315491,
              "index": 7,
              "word": "По",
              "start": 25,
              "end": 27
            },
            {
              "entity": "I-MISC",
              "score": 0.6531878709793091,
              "index": 8,
              "word": "##иск",
              "start": 27,
              "end": 30
            },
            {
              "entity": "I-MISC",
              "score": 0.5721442103385925,
              "index": 9,
              "word": "элемент",
              "start": 31,
              "end": 38
            }
          ]
        },
        {
          "sentence": 40,
          "input": "Поиск  представляет собой просмотр списка на предмет в ыявления соответствия между объектом  поиска и элементом списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9953711628913879,
              "index": 1,
              "word": "По",
              "start": 0,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.8183096647262573,
              "index": 2,
              "word": "##иск",
              "start": 2,
              "end": 5
            }
          ]
        },
        {
          "sentence": 41,
          "input": "Если такое соответствие найдено, то поиск заканчивается  успехом, в противном случае поиск заканчивается неуспехом.",
          "output": []
        },
        {
          "sentence": 42,
          "input": "Стратегия поиска при этом  будет состоять в рекурсивном выделении головы списка и сравнении ее с объектом поиска.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.4991074204444885,
              "index": 1,
              "word": "С",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.7832905650138855,
              "index": 4,
              "word": "по",
              "start": 10,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.6568484306335449,
              "index": 5,
              "word": "##иска",
              "start": 12,
              "end": 16
            }
          ]
        },
        {
          "sentence": 43,
          "input": "3   Базовый случай: Если элемент X совпадает с первым элементом списка (головой  списка), то он принадлежит списку.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8956567049026489,
              "index": 8,
              "word": "X",
              "start": 34,
              "end": 35
            }
          ]
        },
        {
          "sentence": 44,
          "input": " Рекурсивный случай: Если элемент X не является головой списка, проверяем хвост  списка рекурсивно.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9069047570228577,
              "index": 9,
              "word": "X",
              "start": 35,
              "end": 36
            }
          ]
        },
        {
          "sentence": 45,
          "input": "Запуск программы дает такой результат:    Почему выдается два решения?",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8293652534484863,
              "index": 9,
              "word": "По",
              "start": 42,
              "end": 44
            }
          ]
        },
        {
          "sentence": 46,
          "input": "Этот результат подробно отображает, как Prolog  выполняет запрос с использованием поиска с возвратом  (backtracking).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9960741996765137,
              "index": 12,
              "word": "Pro",
              "start": 40,
              "end": 43
            },
            {
              "entity": "I-MISC",
              "score": 0.9875152111053467,
              "index": 13,
              "word": "##log",
              "start": 43,
              "end": 46
            }
          ]
        },
        {
          "sentence": 47,
          "input": "После нахождения  первого результата Prolog пытается найти другие пути решения.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9912219047546387,
              "index": 7,
              "word": "Pro",
              "start": 37,
              "end": 40
            },
            {
              "entity": "I-MISC",
              "score": 0.9679917693138123,
              "index": 8,
              "word": "##log",
              "start": 40,
              "end": 43
            }
          ]
        },
        {
          "sentence": 48,
          "input": "Однако, так как больше нет  элементов для проверки, рекурсия завершается и возвращается false.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.970350444316864,
              "index": 21,
              "word": "false",
              "start": 88,
              "end": 93
            }
          ]
        },
        {
          "sentence": 49,
          "input": "Рассмотрим подробнее.",
          "output": []
        },
        {
          "sentence": 50,
          "input": "1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9720537662506104,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 51,
          "input": "Первичная последовательность вызовов и успешное завершение:   Запрос: ?- member_list(3, [1, 2, 3, 4]).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7512930631637573,
              "index": 18,
              "word": "За",
              "start": 63,
              "end": 65
            },
            {
              "entity": "I-MISC",
              "score": 0.5033056139945984,
              "index": 19,
              "word": "##прос",
              "start": 65,
              "end": 69
            },
            {
              "entity": "B-MISC",
              "score": 0.8144122958183289,
              "index": 21,
              "word": "?",
              "start": 71,
              "end": 72
            },
            {
              "entity": "I-MISC",
              "score": 0.6296505928039551,
              "index": 25,
              "word": "list",
              "start": 81,
              "end": 85
            }
          ]
        },
        {
          "sentence": 52,
          "input": " Prolog начинает с первого элемента списка:   Проверка: 1 ≠ 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9944620728492737,
              "index": 1,
              "word": "Pro",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.9561485648155212,
              "index": 2,
              "word": "##log",
              "start": 5,
              "end": 8
            }
          ]
        },
        {
          "sentence": 53,
          "input": "Рекурсивный вызов с [2, 3, 4].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9275273084640503,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.697837233543396,
              "index": 2,
              "word": "##еку",
              "start": 1,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.46154338121414185,
              "index": 3,
              "word": "##рс",
              "start": 4,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.44463837146759033,
              "index": 4,
              "word": "##ивный",
              "start": 6,
              "end": 11
            }
          ]
        },
        {
          "sentence": 54,
          "input": " Проверка: 2 ≠ 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6994866132736206,
              "index": 5,
              "word": "2",
              "start": 12,
              "end": 13
            }
          ]
        },
        {
          "sentence": 55,
          "input": "Рекурсивный вызов с [3, 4].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9470472931861877,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.6643643379211426,
              "index": 2,
              "word": "##еку",
              "start": 1,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.546584963798523,
              "index": 3,
              "word": "##рс",
              "start": 4,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.5532125234603882,
              "index": 4,
              "word": "##ивный",
              "start": 6,
              "end": 11
            }
          ]
        },
        {
          "sentence": 56,
          "input": " Проверка: 3 = 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8909366726875305,
              "index": 5,
              "word": "3",
              "start": 12,
              "end": 13
            }
          ]
        },
        {
          "sentence": 57,
          "input": "Базовый случай выполнен.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9818406701087952,
              "index": 1,
              "word": "Ба",
              "start": 0,
              "end": 2
            },
            {
              "entity": "I-MISC",
              "score": 0.807088315486908,
              "index": 2,
              "word": "##зовый",
              "start": 2,
              "end": 7
            },
            {
              "entity": "I-MISC",
              "score": 0.792477548122406,
              "index": 3,
              "word": "случай",
              "start": 8,
              "end": 14
            }
          ]
        },
        {
          "sentence": 58,
          "input": "Выход с результатом true.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943066239356995,
              "index": 5,
              "word": "true",
              "start": 20,
              "end": 24
            }
          ]
        },
        {
          "sentence": 59,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 60,
          "input": "Поиск с возвратом (Redo):   После первого успешного результата Prolog продолжает искать другие возможные  решения:    Возврат к последнему успешному вызову: Redo: member_list(3, [3, 4]).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.734984278678894,
              "index": 9,
              "word": "Red",
              "start": 19,
              "end": 22
            },
            {
              "entity": "I-MISC",
              "score": 0.6250825524330139,
              "index": 10,
              "word": "##o",
              "start": 22,
              "end": 23
            },
            {
              "entity": "B-MISC",
              "score": 0.9799812436103821,
              "index": 19,
              "word": "Pro",
              "start": 64,
              "end": 67
            },
            {
              "entity": "I-MISC",
              "score": 0.9600156545639038,
              "index": 20,
              "word": "##log",
              "start": 67,
              "end": 70
            },
            {
              "entity": "B-MISC",
              "score": 0.5901788473129272,
              "index": 47,
              "word": "Red",
              "start": 159,
              "end": 162
            },
            {
              "entity": "I-MISC",
              "score": 0.5514509677886963,
              "index": 48,
              "word": "##o",
              "start": 162,
              "end": 163
            }
          ]
        },
        {
          "sentence": 61,
          "input": " Пропускает текущий элемент (3) и начинает проверку оставшегося списка [4].",
          "output": []
        },
        {
          "sentence": 62,
          "input": "Проверка: 4 ≠ 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8909210562705994,
              "index": 5,
              "word": "4",
              "start": 10,
              "end": 11
            }
          ]
        },
        {
          "sentence": 63,
          "input": "Рекурсивный вызов с [].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9777281284332275,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.6648630499839783,
              "index": 2,
              "word": "##еку",
              "start": 1,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.6299084424972534,
              "index": 3,
              "word": "##рс",
              "start": 4,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.6467649340629578,
              "index": 4,
              "word": "##ивный",
              "start": 6,
              "end": 11
            },
            {
              "entity": "I-MISC",
              "score": 0.6892150640487671,
              "index": 6,
              "word": "##зов",
              "start": 14,
              "end": 17
            }
          ]
        },
        {
          "sentence": 64,
          "input": " Базовый случай для пустого списка (нет элементов).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8809215426445007,
              "index": 1,
              "word": "Ба",
              "start": 2,
              "end": 4
            },
            {
              "entity": "B-MISC",
              "score": 0.5033402442932129,
              "index": 5,
              "word": "п",
              "start": 21,
              "end": 22
            }
          ]
        },
        {
          "sentence": 65,
          "input": "Программа завершает  работу с неудачей (fail).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6332591772079468,
              "index": 1,
              "word": "Про",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.9810853004455566,
              "index": 12,
              "word": "fail",
              "start": 40,
              "end": 44
            }
          ]
        },
        {
          "sentence": 66,
          "input": "4   После проверки всех элементов Prolog «откатывает» все вызовы, завершая их с  результатом fail:      После проверки всех элементов без нахождения новых решений программа возвращает  false.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9971277117729187,
              "index": 8,
              "word": "Pro",
              "start": 35,
              "end": 38
            },
            {
              "entity": "I-MISC",
              "score": 0.9872539639472961,
              "index": 9,
              "word": "##log",
              "start": 38,
              "end": 41
            }
          ]
        },
        {
          "sentence": 67,
          "input": "Чтобы исключить ненужный поиск после первого успешного результата, используйте  отсечение (!)",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7589880228042603,
              "index": 27,
              "word": "!",
              "start": 91,
              "end": 92
            }
          ]
        },
        {
          "sentence": 68,
          "input": "в базовом случае.",
          "output": []
        },
        {
          "sentence": 69,
          "input": "Отсечение (cut, обозначается символом ! )",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9632685780525208,
              "index": 13,
              "word": "!",
              "start": 38,
              "end": 39
            }
          ]
        },
        {
          "sentence": 70,
          "input": "– это специальный встроенный предикат в  Prolog, который используется для управления процессом поиска решений.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9984843134880066,
              "index": 12,
              "word": "Pro",
              "start": 41,
              "end": 44
            },
            {
              "entity": "I-MISC",
              "score": 0.993614912033081,
              "index": 13,
              "word": "##log",
              "start": 44,
              "end": 47
            }
          ]
        },
        {
          "sentence": 71,
          "input": "Он пре рывает  стандартный механизм поиска с возвратом  (backtracking), тем самым предотвращая Prolog от  рассмотрения других альтернативных решений.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9958277344703674,
              "index": 30,
              "word": "Pro",
              "start": 95,
              "end": 98
            },
            {
              "entity": "I-MISC",
              "score": 0.9905765056610107,
              "index": 31,
              "word": "##log",
              "start": 98,
              "end": 101
            }
          ]
        },
        {
          "sentence": 72,
          "input": "После того как !",
          "output": []
        },
        {
          "sentence": 73,
          "input": "выполняется, все альтернативные пути, ведущие к точке отсечения,  удаляются из дерева поиска .",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5041701197624207,
              "index": 7,
              "word": "аль",
              "start": 17,
              "end": 20
            },
            {
              "entity": "B-MISC",
              "score": 0.581949770450592,
              "index": 28,
              "word": "дерева",
              "start": 79,
              "end": 85
            }
          ]
        },
        {
          "sentence": 74,
          "input": "Это оп тимизирует выполнение программы, но требует  осторожного использования, так как может нарушить ее логическую корректность.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5124596953392029,
              "index": 1,
              "word": "Это",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.9410319328308105,
              "index": 2,
              "word": "о",
              "start": 4,
              "end": 5
            }
          ]
        },
        {
          "sentence": 75,
          "input": "В SWI-Prolog существует встроенный предикат member/2, который выполняет поиск  элемента в списке:      7.1.1.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9690566658973694,
              "index": 2,
              "word": "SW",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.7937150597572327,
              "index": 3,
              "word": "##I",
              "start": 4,
              "end": 5
            },
            {
              "entity": "B-MISC",
              "score": 0.8671295046806335,
              "index": 5,
              "word": "Pro",
              "start": 6,
              "end": 9
            },
            {
              "entity": "I-MISC",
              "score": 0.9635897874832153,
              "index": 6,
              "word": "##log",
              "start": 9,
              "end": 12
            }
          ]
        },
        {
          "sentence": 76,
          "input": "Сортировка списка  Сортировка пр едставляет собой переупорядочение элементов списка определенным  образом.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9656197428703308,
              "index": 10,
              "word": "пр",
              "start": 30,
              "end": 32
            }
          ]
        },
        {
          "sentence": 77,
          "input": "Назначением сортировки является упрощение доступа к нужным элементам.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9622135758399963,
              "index": 4,
              "word": "со",
              "start": 12,
              "end": 14
            }
          ]
        },
        {
          "sentence": 78,
          "input": "Для сортировки списков обычно применяются три метода:   • метод перестановки  – заключается в перестановке элементов  списка до тех пор,  пока он не будет упорядочен.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7618114948272705,
              "index": 21,
              "word": "–",
              "start": 78,
              "end": 79
            }
          ]
        },
        {
          "sentence": 79,
          "input": "5  • метод вставки – осуществляется при помощи неоднократной вставки элементов в  список до тех пор, пока он не будет упорядочен,   • метод выборки  – включает в себя многократную выборку и перемещение  элементов списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7886594533920288,
              "index": 6,
              "word": "–",
              "start": 19,
              "end": 20
            },
            {
              "entity": "B-MISC",
              "score": 0.6254377961158752,
              "index": 36,
              "word": "–",
              "start": 149,
              "end": 150
            }
          ]
        },
        {
          "sentence": 80,
          "input": "Второй из методов, метод вставки, особенно удобен для реализации на Prolog.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9991567134857178,
              "index": 16,
              "word": "Pro",
              "start": 68,
              "end": 71
            },
            {
              "entity": "I-MISC",
              "score": 0.9917431473731995,
              "index": 17,
              "word": "##log",
              "start": 71,
              "end": 74
            }
          ]
        },
        {
          "sentence": 81,
          "input": "Шаги:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7878910303115845,
              "index": 1,
              "word": "Ш",
              "start": 0,
              "end": 1
            },
            {
              "entity": "I-MISC",
              "score": 0.6641705632209778,
              "index": 2,
              "word": "##аг",
              "start": 1,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.6409027576446533,
              "index": 3,
              "word": "##и",
              "start": 3,
              "end": 4
            }
          ]
        },
        {
          "sentence": 82,
          "input": "Рекурсивная сортировка хвоста [7, 3, 9].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9014744162559509,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.6381305456161499,
              "index": 2,
              "word": "##еку",
              "start": 1,
              "end": 4
            }
          ]
        },
        {
          "sentence": 83,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 84,
          "input": "Сортировка хвоста [3, 9].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5165501236915588,
              "index": 1,
              "word": "Со",
              "start": 0,
              "end": 2
            },
            {
              "entity": "B-LOC",
              "score": 0.3657852113246918,
              "index": 4,
              "word": "х",
              "start": 11,
              "end": 12
            }
          ]
        },
        {
          "sentence": 85,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 86,
          "input": "Сортировка хвоста [9] (возвращает [9]).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6637182235717773,
              "index": 1,
              "word": "Со",
              "start": 0,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.33745276927948,
              "index": 4,
              "word": "х",
              "start": 11,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.3241589367389679,
              "index": 6,
              "word": "##ста",
              "start": 14,
              "end": 17
            }
          ]
        },
        {
          "sentence": 87,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 88,
          "input": "Вставляем 3 → [3, 9].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9355254769325256,
              "index": 5,
              "word": "3",
              "start": 10,
              "end": 11
            }
          ]
        },
        {
          "sentence": 89,
          "input": "5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9932518601417542,
              "index": 1,
              "word": "5",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 90,
          "input": "Вставляем 7 → [3, 7, 9].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8590167760848999,
              "index": 5,
              "word": "7",
              "start": 10,
              "end": 11
            }
          ]
        },
        {
          "sentence": 91,
          "input": "6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.983711302280426,
              "index": 1,
              "word": "6",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 92,
          "input": "Вставляем 4 → [3, 4, 7, 9].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7544721364974976,
              "index": 5,
              "word": "4",
              "start": 10,
              "end": 11
            }
          ]
        },
        {
          "sentence": 93,
          "input": "6  В SWI-Prolog существует встроенный предикат для сортировки списков – это  предикат sort/2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9656287431716919,
              "index": 3,
              "word": "SW",
              "start": 5,
              "end": 7
            },
            {
              "entity": "I-MISC",
              "score": 0.8518120050430298,
              "index": 4,
              "word": "##I",
              "start": 7,
              "end": 8
            },
            {
              "entity": "B-MISC",
              "score": 0.8944588303565979,
              "index": 6,
              "word": "Pro",
              "start": 9,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.9758122563362122,
              "index": 7,
              "word": "##log",
              "start": 12,
              "end": 15
            }
          ]
        },
        {
          "sentence": 94,
          "input": "Он сортирует список по возрастанию, удаляя все дубликаты:      7.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.848889172077179,
              "index": 5,
              "word": "список",
              "start": 13,
              "end": 19
            }
          ]
        },
        {
          "sentence": 95,
          "input": "Двусвязные списки в Prolog  Двусвязные списки  в Prolog – это структур ы данных, в которых каждый элемент  списка содержит два указателя : один на следующий элемент и один на предыдущий.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9915900826454163,
              "index": 9,
              "word": "Pro",
              "start": 20,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.9781176447868347,
              "index": 10,
              "word": "##log",
              "start": 23,
              "end": 26
            },
            {
              "entity": "B-MISC",
              "score": 0.9884500503540039,
              "index": 19,
              "word": "Pro",
              "start": 49,
              "end": 52
            },
            {
              "entity": "I-MISC",
              "score": 0.9730361700057983,
              "index": 20,
              "word": "##log",
              "start": 52,
              "end": 55
            }
          ]
        },
        {
          "sentence": 96,
          "input": "Это  позволяет эффективно перемещаться как в прямом, так и в обратном направлении, что делает  такие списки удобными для определённых типов задач.",
          "output": []
        },
        {
          "sentence": 97,
          "input": "Каждый элемент в двусвязном списке может быть представлен как пара:  node(Prev, Value, Next)   Prev: указатель на предыдущий элемент списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.942177951335907,
              "index": 21,
              "word": "Pre",
              "start": 74,
              "end": 77
            },
            {
              "entity": "I-MISC",
              "score": 0.8074548244476318,
              "index": 22,
              "word": "##v",
              "start": 77,
              "end": 78
            },
            {
              "entity": "B-MISC",
              "score": 0.8960801959037781,
              "index": 24,
              "word": "Value",
              "start": 80,
              "end": 85
            },
            {
              "entity": "B-MISC",
              "score": 0.8585662841796875,
              "index": 26,
              "word": "Next",
              "start": 87,
              "end": 91
            },
            {
              "entity": "B-MISC",
              "score": 0.8955894708633423,
              "index": 28,
              "word": "Pre",
              "start": 96,
              "end": 99
            },
            {
              "entity": "I-MISC",
              "score": 0.7517917156219482,
              "index": 29,
              "word": "##v",
              "start": 99,
              "end": 100
            }
          ]
        },
        {
          "sentence": 98,
          "input": " Value: значение элемента списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9934418201446533,
              "index": 1,
              "word": "Value",
              "start": 2,
              "end": 7
            }
          ]
        },
        {
          "sentence": 99,
          "input": " Next: указатель на следующий элемент списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9955456256866455,
              "index": 1,
              "word": "Next",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 100,
          "input": "Предположим, у нас есть двусвязный список: [1, 2, 3, 4].",
          "output": []
        },
        {
          "sentence": 101,
          "input": "Представление этого списка с использованием двусвязных узлов:  node(nil, 1, node(nil, 2, node(nil, 3, node(nil, 4, nil)))).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8961407542228699,
              "index": 18,
              "word": "node",
              "start": 63,
              "end": 67
            }
          ]
        },
        {
          "sentence": 102,
          "input": " nil указывает на отсутствие элемента (конец списка).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9881414175033569,
              "index": 1,
              "word": "ni",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.957146942615509,
              "index": 2,
              "word": "##l",
              "start": 4,
              "end": 5
            }
          ]
        },
        {
          "sentence": 103,
          "input": " Каждый элемент node(Prev, Value, Next) содержит ссылку на предыдущий и  следующий элементы.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9635562300682068,
              "index": 7,
              "word": "Pre",
              "start": 22,
              "end": 25
            },
            {
              "entity": "I-MISC",
              "score": 0.7920634150505066,
              "index": 8,
              "word": "##v",
              "start": 25,
              "end": 26
            },
            {
              "entity": "B-MISC",
              "score": 0.9649421572685242,
              "index": 10,
              "word": "Value",
              "start": 28,
              "end": 33
            },
            {
              "entity": "B-MISC",
              "score": 0.9509519934654236,
              "index": 12,
              "word": "Next",
              "start": 35,
              "end": 39
            }
          ]
        },
        {
          "sentence": 104,
          "input": "Пример 7.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6707002520561218,
              "index": 1,
              "word": "При",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.506031334400177,
              "index": 3,
              "word": "7",
              "start": 7,
              "end": 8
            }
          ]
        },
        {
          "sentence": 105,
          "input": "Реализация стека с использованием двусвязного списка (будем  использовать двусвязный список для хранения элементов стека).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6181012988090515,
              "index": 3,
              "word": "ст",
              "start": 11,
              "end": 13
            }
          ]
        },
        {
          "sentence": 106,
          "input": "Здесь node/3 – это терм, который создается и сопоставляется во время выполнения  программы.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9986417889595032,
              "index": 2,
              "word": "node",
              "start": 6,
              "end": 10
            }
          ]
        },
        {
          "sentence": 107,
          "input": "Он не имеет какого -либо особого поведения, пока вы не напишете правила,  которые объясняют, как его использовать.",
          "output": []
        },
        {
          "sentence": 108,
          "input": "7  Выведем результат работы программы:      1.",
          "output": []
        },
        {
          "sentence": 109,
          "input": "Добавление первого элемента: push(1, nil, Stack1).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9918293356895447,
              "index": 15,
              "word": "St",
              "start": 42,
              "end": 44
            },
            {
              "entity": "I-MISC",
              "score": 0.960035502910614,
              "index": 16,
              "word": "##ack",
              "start": 44,
              "end": 47
            },
            {
              "entity": "I-MISC",
              "score": 0.8092529773712158,
              "index": 17,
              "word": "##1",
              "start": 47,
              "end": 48
            }
          ]
        },
        {
          "sentence": 110,
          "input": " создает новую структуру: Stack1 = node(nil, 1, nil).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.996929943561554,
              "index": 7,
              "word": "St",
              "start": 27,
              "end": 29
            },
            {
              "entity": "I-MISC",
              "score": 0.9683383703231812,
              "index": 8,
              "word": "##ack",
              "start": 29,
              "end": 32
            },
            {
              "entity": "I-MISC",
              "score": 0.4582959711551666,
              "index": 9,
              "word": "##1",
              "start": 32,
              "end": 33
            }
          ]
        },
        {
          "sentence": 111,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 112,
          "input": "Добавление второго элемента в стек: push(2, Stack1, Stack2).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.987586259841919,
              "index": 15,
              "word": "St",
              "start": 44,
              "end": 46
            },
            {
              "entity": "I-MISC",
              "score": 0.9678773880004883,
              "index": 16,
              "word": "##ack",
              "start": 46,
              "end": 49
            },
            {
              "entity": "I-MISC",
              "score": 0.64234459400177,
              "index": 17,
              "word": "##1",
              "start": 49,
              "end": 50
            },
            {
              "entity": "B-MISC",
              "score": 0.9857057332992554,
              "index": 19,
              "word": "St",
              "start": 52,
              "end": 54
            },
            {
              "entity": "I-MISC",
              "score": 0.969369113445282,
              "index": 20,
              "word": "##ack",
              "start": 54,
              "end": 57
            },
            {
              "entity": "I-MISC",
              "score": 0.7414851188659668,
              "index": 21,
              "word": "##2",
              "start": 57,
              "end": 58
            }
          ]
        },
        {
          "sentence": 113,
          "input": " push/3 берет Stack1 как Prev и создает новую структуру node:   Stack2 = node(node(nil, 1, nil), 2, nil).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9148614406585693,
              "index": 6,
              "word": "St",
              "start": 15,
              "end": 17
            },
            {
              "entity": "I-MISC",
              "score": 0.8212214708328247,
              "index": 7,
              "word": "##ack",
              "start": 17,
              "end": 20
            },
            {
              "entity": "B-MISC",
              "score": 0.8865875601768494,
              "index": 10,
              "word": "Pre",
              "start": 26,
              "end": 29
            },
            {
              "entity": "I-MISC",
              "score": 0.7360880374908447,
              "index": 11,
              "word": "##v",
              "start": 29,
              "end": 30
            },
            {
              "entity": "B-MISC",
              "score": 0.7706664800643921,
              "index": 20,
              "word": "St",
              "start": 65,
              "end": 67
            },
            {
              "entity": "I-MISC",
              "score": 0.8076257109642029,
              "index": 21,
              "word": "##ack",
              "start": 67,
              "end": 70
            }
          ]
        },
        {
          "sentence": 114,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 115,
          "input": "Получение верхнего элемента стека: top(Stack2, Top).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9928922653198242,
              "index": 13,
              "word": "St",
              "start": 39,
              "end": 41
            },
            {
              "entity": "I-MISC",
              "score": 0.9818399548530579,
              "index": 14,
              "word": "##ack",
              "start": 41,
              "end": 44
            },
            {
              "entity": "I-MISC",
              "score": 0.9035646915435791,
              "index": 15,
              "word": "##2",
              "start": 44,
              "end": 45
            },
            {
              "entity": "B-MISC",
              "score": 0.9275273084640503,
              "index": 17,
              "word": "Top",
              "start": 47,
              "end": 50
            }
          ]
        },
        {
          "sentence": 116,
          "input": " top/2 сопоставляет Stack2 с шаблоном node(_, Value, _) и извлекает значение 2:  Top = 2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9840123653411865,
              "index": 8,
              "word": "St",
              "start": 21,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.935763418674469,
              "index": 9,
              "word": "##ack",
              "start": 23,
              "end": 26
            },
            {
              "entity": "I-MISC",
              "score": 0.5110036730766296,
              "index": 10,
              "word": "##2",
              "start": 26,
              "end": 27
            },
            {
              "entity": "B-MISC",
              "score": 0.5627678632736206,
              "index": 19,
              "word": "Value",
              "start": 47,
              "end": 52
            }
          ]
        },
        {
          "sentence": 117,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 118,
          "input": "Удаление верхнего элемента в списке: pop(Stack2, StackAfterPop).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.954213559627533,
              "index": 14,
              "word": "St",
              "start": 41,
              "end": 43
            },
            {
              "entity": "I-MISC",
              "score": 0.956796407699585,
              "index": 15,
              "word": "##ack",
              "start": 43,
              "end": 46
            },
            {
              "entity": "I-MISC",
              "score": 0.9179095029830933,
              "index": 16,
              "word": "##2",
              "start": 46,
              "end": 47
            },
            {
              "entity": "B-MISC",
              "score": 0.958507776260376,
              "index": 18,
              "word": "St",
              "start": 49,
              "end": 51
            },
            {
              "entity": "I-MISC",
              "score": 0.9654231667518616,
              "index": 19,
              "word": "##ack",
              "start": 51,
              "end": 54
            },
            {
              "entity": "I-MISC",
              "score": 0.9709352850914001,
              "index": 20,
              "word": "##A",
              "start": 54,
              "end": 55
            },
            {
              "entity": "I-MISC",
              "score": 0.9772665500640869,
              "index": 21,
              "word": "##fter",
              "start": 55,
              "end": 59
            },
            {
              "entity": "I-MISC",
              "score": 0.9726876616477966,
              "index": 22,
              "word": "##P",
              "start": 59,
              "end": 60
            },
            {
              "entity": "I-MISC",
              "score": 0.9682735800743103,
              "index": 23,
              "word": "##op",
              "start": 60,
              "end": 62
            }
          ]
        },
        {
          "sentence": 119,
          "input": " pop/2 сопоставляет Stack2 с шаблоном  node(Prev, _, nil)  и возвращает Prev,  который является Stack1: StackAfterPop = node(nil, 1, nil).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9258164167404175,
              "index": 8,
              "word": "St",
              "start": 21,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.914647102355957,
              "index": 9,
              "word": "##ack",
              "start": 23,
              "end": 26
            },
            {
              "entity": "I-MISC",
              "score": 0.5670332312583923,
              "index": 10,
              "word": "##2",
              "start": 26,
              "end": 27
            },
            {
              "entity": "B-MISC",
              "score": 0.4259963631629944,
              "index": 17,
              "word": "Pre",
              "start": 45,
              "end": 48
            },
            {
              "entity": "B-MISC",
              "score": 0.5311479568481445,
              "index": 30,
              "word": "Pre",
              "start": 73,
              "end": 76
            },
            {
              "entity": "I-MISC",
              "score": 0.7118281722068787,
              "index": 31,
              "word": "##v",
              "start": 76,
              "end": 77
            },
            {
              "entity": "B-MISC",
              "score": 0.5449845790863037,
              "index": 35,
              "word": "St",
              "start": 97,
              "end": 99
            },
            {
              "entity": "I-MISC",
              "score": 0.9088227152824402,
              "index": 36,
              "word": "##ack",
              "start": 99,
              "end": 102
            },
            {
              "entity": "I-MISC",
              "score": 0.621470034122467,
              "index": 37,
              "word": "##1",
              "start": 102,
              "end": 103
            },
            {
              "entity": "I-MISC",
              "score": 0.6123301386833191,
              "index": 39,
              "word": "St",
              "start": 105,
              "end": 107
            },
            {
              "entity": "I-MISC",
              "score": 0.9325510263442993,
              "index": 40,
              "word": "##ack",
              "start": 107,
              "end": 110
            },
            {
              "entity": "I-MISC",
              "score": 0.8410444855690002,
              "index": 41,
              "word": "##A",
              "start": 110,
              "end": 111
            },
            {
              "entity": "I-MISC",
              "score": 0.8288684487342834,
              "index": 42,
              "word": "##fter",
              "start": 111,
              "end": 115
            },
            {
              "entity": "I-MISC",
              "score": 0.7064650058746338,
              "index": 43,
              "word": "##P",
              "start": 115,
              "end": 116
            },
            {
              "entity": "I-MISC",
              "score": 0.6473386883735657,
              "index": 44,
              "word": "##op",
              "start": 116,
              "end": 118
            }
          ]
        },
        {
          "sentence": 120,
          "input": "7.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9927846193313599,
              "index": 1,
              "word": "7",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 121,
          "input": "Деревья в Prolog  Деревья – это одна из ключевых структур данных в Prolog.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9900928139686584,
              "index": 5,
              "word": "Pro",
              "start": 10,
              "end": 13
            },
            {
              "entity": "I-MISC",
              "score": 0.9882996082305908,
              "index": 6,
              "word": "##log",
              "start": 13,
              "end": 16
            },
            {
              "entity": "B-MISC",
              "score": 0.9850113987922668,
              "index": 23,
              "word": "Pro",
              "start": 67,
              "end": 70
            },
            {
              "entity": "I-MISC",
              "score": 0.9905955791473389,
              "index": 24,
              "word": "##log",
              "start": 70,
              "end": 73
            }
          ]
        },
        {
          "sentence": 122,
          "input": "Они представляют собой  рекурсивную структуру, где каждый « узел» (node) имеет значение и может содержать ссылки  на дочерние узлы (ветви).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8186702728271484,
              "index": 4,
              "word": "реку",
              "start": 24,
              "end": 28
            },
            {
              "entity": "B-MISC",
              "score": 0.8576219081878662,
              "index": 16,
              "word": "node",
              "start": 67,
              "end": 71
            }
          ]
        },
        {
          "sentence": 123,
          "input": "Чаще всего деревья реализуются с использованием структур термов.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.4733208119869232,
              "index": 5,
              "word": "дерев",
              "start": 11,
              "end": 16
            },
            {
              "entity": "B-MISC",
              "score": 0.660651683807373,
              "index": 17,
              "word": "те",
              "start": 57,
              "end": 59
            }
          ]
        },
        {
          "sentence": 124,
          "input": "Например:  tree(Value, Left, Right).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8720853328704834,
              "index": 5,
              "word": "Value",
              "start": 16,
              "end": 21
            },
            {
              "entity": "B-MISC",
              "score": 0.8864143490791321,
              "index": 7,
              "word": "Left",
              "start": 23,
              "end": 27
            },
            {
              "entity": "B-MISC",
              "score": 0.8380575180053711,
              "index": 9,
              "word": "Right",
              "start": 29,
              "end": 34
            }
          ]
        },
        {
          "sentence": 125,
          "input": " Value – значение в текущем узле.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9957157969474792,
              "index": 1,
              "word": "Value",
              "start": 2,
              "end": 7
            }
          ]
        },
        {
          "sentence": 126,
          "input": " Left – левое поддерево.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.948603630065918,
              "index": 1,
              "word": "Left",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 127,
          "input": " Right – правое поддерево.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9502201676368713,
              "index": 1,
              "word": "Right",
              "start": 2,
              "end": 7
            }
          ]
        },
        {
          "sentence": 128,
          "input": "8  7.3.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.992579996585846,
              "index": 1,
              "word": "8",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 129,
          "input": "Пример 7.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6353679895401001,
              "index": 1,
              "word": "При",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.5125977993011475,
              "index": 3,
              "word": "7",
              "start": 7,
              "end": 8
            }
          ]
        },
        {
          "sentence": 130,
          "input": "Поиск в дереве  Пусть дана следующая структура:      Посмотрим подробно выполнение программы поиска числа 4 в дереве:       5  3   8  1   4  9  Первый этап: Обход дерева  1.",
          "output": []
        },
        {
          "sentence": 131,
          "input": "Шаг 1: Начинаем с корня (значение 5):   Корень не равен 4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.38948896527290344,
              "index": 16,
              "word": "К",
              "start": 41,
              "end": 42
            }
          ]
        },
        {
          "sentence": 132,
          "input": "Программа переходит к левому поддереву.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9866330623626709,
              "index": 1,
              "word": "Про",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.756883978843689,
              "index": 2,
              "word": "##грамма",
              "start": 3,
              "end": 9
            }
          ]
        },
        {
          "sentence": 133,
          "input": " Запрос: search_tree(4, tree(3, tree(1, nil, nil), tree(4, nil, nil))).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.940764844417572,
              "index": 4,
              "word": "search",
              "start": 10,
              "end": 16
            }
          ]
        },
        {
          "sentence": 134,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 135,
          "input": "Шаг 2: Левое поддерево (значение 3):   Значение не равно 4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7596282362937927,
              "index": 5,
              "word": "Лев",
              "start": 7,
              "end": 10
            },
            {
              "entity": "I-MISC",
              "score": 0.7696844935417175,
              "index": 6,
              "word": "##ое",
              "start": 10,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.6199126839637756,
              "index": 7,
              "word": "под",
              "start": 13,
              "end": 16
            },
            {
              "entity": "I-MISC",
              "score": 0.7093856930732727,
              "index": 8,
              "word": "##дер",
              "start": 16,
              "end": 19
            },
            {
              "entity": "I-MISC",
              "score": 0.7799363732337952,
              "index": 9,
              "word": "##ево",
              "start": 19,
              "end": 22
            }
          ]
        },
        {
          "sentence": 136,
          "input": "Программа переходит к левому поддереву.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9866330623626709,
              "index": 1,
              "word": "Про",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.756883978843689,
              "index": 2,
              "word": "##грамма",
              "start": 3,
              "end": 9
            }
          ]
        },
        {
          "sentence": 137,
          "input": " Запрос: search_tree(4, tree(1, nil, nil)).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9805867671966553,
              "index": 4,
              "word": "search",
              "start": 10,
              "end": 16
            },
            {
              "entity": "I-MISC",
              "score": 0.5710403919219971,
              "index": 5,
              "word": "_",
              "start": 16,
              "end": 17
            },
            {
              "entity": "I-MISC",
              "score": 0.8408339619636536,
              "index": 6,
              "word": "tree",
              "start": 17,
              "end": 21
            }
          ]
        },
        {
          "sentence": 138,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 139,
          "input": "Шаг 3: Узел со значением 1:   Значение не равно 4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5500872731208801,
              "index": 5,
              "word": "У",
              "start": 7,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.5152034759521484,
              "index": 6,
              "word": "##зел",
              "start": 8,
              "end": 11
            }
          ]
        },
        {
          "sentence": 140,
          "input": "Программа проверяет левое и правое поддеревья, которые  равны nil.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9940097332000732,
              "index": 20,
              "word": "ni",
              "start": 62,
              "end": 64
            },
            {
              "entity": "I-MISC",
              "score": 0.9353965520858765,
              "index": 21,
              "word": "##l",
              "start": 64,
              "end": 65
            }
          ]
        },
        {
          "sentence": 141,
          "input": " Левое и правое поддеревья возвращают false.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5451585650444031,
              "index": 14,
              "word": "false",
              "start": 39,
              "end": 44
            }
          ]
        },
        {
          "sentence": 142,
          "input": " Результат: Программа возвращается к узлу 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9964067339897156,
              "index": 6,
              "word": "Про",
              "start": 13,
              "end": 16
            },
            {
              "entity": "I-MISC",
              "score": 0.9576598405838013,
              "index": 7,
              "word": "##грамма",
              "start": 16,
              "end": 22
            }
          ]
        },
        {
          "sentence": 143,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 144,
          "input": "Шаг 4: Узел со значением 3:   Теперь программа проверяет правое поддерево узла 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7762214541435242,
              "index": 1,
              "word": "Ш",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.5842642784118652,
              "index": 5,
              "word": "У",
              "start": 7,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.6694045066833496,
              "index": 6,
              "word": "##зел",
              "start": 8,
              "end": 11
            }
          ]
        },
        {
          "sentence": 145,
          "input": " Запрос: search_tree(4, tree(4, nil, nil)).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9844033718109131,
              "index": 4,
              "word": "search",
              "start": 10,
              "end": 16
            },
            {
              "entity": "I-MISC",
              "score": 0.6352792382240295,
              "index": 5,
              "word": "_",
              "start": 16,
              "end": 17
            },
            {
              "entity": "I-MISC",
              "score": 0.8626017570495605,
              "index": 6,
              "word": "tree",
              "start": 17,
              "end": 21
            }
          ]
        },
        {
          "sentence": 146,
          "input": "5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9932518601417542,
              "index": 1,
              "word": "5",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 147,
          "input": "Шаг 5: Узел со значением 4:   Значение совпадает!",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7474209070205688,
              "index": 5,
              "word": "У",
              "start": 7,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.667133629322052,
              "index": 6,
              "word": "##зел",
              "start": 8,
              "end": 11
            }
          ]
        },
        {
          "sentence": 148,
          "input": "Программа завершает текущую ветвь с результатом true.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9720630049705505,
              "index": 15,
              "word": "true",
              "start": 48,
              "end": 52
            }
          ]
        },
        {
          "sentence": 149,
          "input": "Второй этап: Обратные вызовы  После нахождения true, Prolog пытается найти альтернативные решения:   Программа возвращается на уровень узла 5 и начинает проверять правое  поддерево (значение 8).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9880500435829163,
              "index": 15,
              "word": "Pro",
              "start": 53,
              "end": 56
            },
            {
              "entity": "I-MISC",
              "score": 0.9598226547241211,
              "index": 16,
              "word": "##log",
              "start": 56,
              "end": 59
            }
          ]
        },
        {
          "sentence": 150,
          "input": " Значение 4 не найдено в правом поддереве.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8789539337158203,
              "index": 1,
              "word": "З",
              "start": 2,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.8255630135536194,
              "index": 4,
              "word": "4",
              "start": 11,
              "end": 12
            }
          ]
        },
        {
          "sentence": 151,
          "input": "Программа завершает проверку с  результатом false.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9864040613174438,
              "index": 11,
              "word": "false",
              "start": 44,
              "end": 49
            }
          ]
        },
        {
          "sentence": 152,
          "input": "Итог   Первое решение: true (значение найдено в левом поддереве).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6826983094215393,
              "index": 1,
              "word": "И",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.7782582640647888,
              "index": 7,
              "word": "true",
              "start": 24,
              "end": 28
            }
          ]
        },
        {
          "sentence": 153,
          "input": " Второе решение: false (альтернативная ветвь поиска, где значение отсутствует).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9949371814727783,
              "index": 6,
              "word": "false",
              "start": 18,
              "end": 23
            }
          ]
        },
        {
          "sentence": 154,
          "input": "7.3.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9938867688179016,
              "index": 1,
              "word": "7",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 155,
          "input": "Пример 7.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6795971393585205,
              "index": 1,
              "word": "При",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.5329134464263916,
              "index": 3,
              "word": "7",
              "start": 7,
              "end": 8
            }
          ]
        },
        {
          "sentence": 156,
          "input": "Обход дерева в порядке прямого обхода  Данная програм ма реализует обход дерева в порядке прямого обхода  (preorder  traversal).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8466214537620544,
              "index": 13,
              "word": "ма",
              "start": 54,
              "end": 56
            }
          ]
        },
        {
          "sentence": 157,
          "input": "В этом типе обхода сначала обрабатывается корень, затем левое поддерево, а потом  правое поддерево.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5714760422706604,
              "index": 12,
              "word": "кор",
              "start": 42,
              "end": 45
            }
          ]
        },
        {
          "sentence": 158,
          "input": "  Базовый случай: Если дерево пустое (nil), возвращаем пустой список:    Рекурсивный случай: Если дерево непустое (tree(Value, Left, Right)):   10   Добавляем значение корня Value в начало результирующего списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8045509457588196,
              "index": 56,
              "word": "Value",
              "start": 177,
              "end": 182
            }
          ]
        },
        {
          "sentence": 159,
          "input": " Рекурсивно обходим левое поддерево и сохраняем результат в LeftTraversal.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9988669157028198,
              "index": 21,
              "word": "Left",
              "start": 61,
              "end": 65
            },
            {
              "entity": "I-MISC",
              "score": 0.9813375473022461,
              "index": 22,
              "word": "##T",
              "start": 65,
              "end": 66
            },
            {
              "entity": "I-MISC",
              "score": 0.9951907396316528,
              "index": 23,
              "word": "##rave",
              "start": 66,
              "end": 70
            },
            {
              "entity": "I-MISC",
              "score": 0.9956451654434204,
              "index": 24,
              "word": "##rsa",
              "start": 70,
              "end": 73
            },
            {
              "entity": "I-MISC",
              "score": 0.9959104061126709,
              "index": 25,
              "word": "##l",
              "start": 73,
              "end": 74
            }
          ]
        },
        {
          "sentence": 160,
          "input": " Рекурсивно обходим правое поддерево и сохраняем результат в RightTraversal.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9979321956634521,
              "index": 21,
              "word": "Right",
              "start": 62,
              "end": 67
            },
            {
              "entity": "I-MISC",
              "score": 0.9855374693870544,
              "index": 22,
              "word": "##T",
              "start": 67,
              "end": 68
            },
            {
              "entity": "I-MISC",
              "score": 0.9954034090042114,
              "index": 23,
              "word": "##rave",
              "start": 68,
              "end": 72
            },
            {
              "entity": "I-MISC",
              "score": 0.9966356158256531,
              "index": 24,
              "word": "##rsa",
              "start": 72,
              "end": 75
            },
            {
              "entity": "I-MISC",
              "score": 0.9969298243522644,
              "index": 25,
              "word": "##l",
              "start": 75,
              "end": 76
            }
          ]
        },
        {
          "sentence": 161,
          "input": " Объединяем результаты обхода левого и правого поддеревьев с помощью append и  сохраняем в Traversal:    7.3.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9885691404342651,
              "index": 29,
              "word": "Tra",
              "start": 92,
              "end": 95
            },
            {
              "entity": "I-MISC",
              "score": 0.9859053492546082,
              "index": 30,
              "word": "##versa",
              "start": 95,
              "end": 100
            },
            {
              "entity": "I-MISC",
              "score": 0.9855418801307678,
              "index": 31,
              "word": "##l",
              "start": 100,
              "end": 101
            }
          ]
        },
        {
          "sentence": 162,
          "input": "Пример 7.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6425862312316895,
              "index": 1,
              "word": "При",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.7194226980209351,
              "index": 3,
              "word": "7",
              "start": 7,
              "end": 8
            }
          ]
        },
        {
          "sentence": 163,
          "input": "Вставка элемента в бинарное дерево  Вставка элемента в бинарное дерево поиска (Binary Search Tree, BST) осуществляется  так, чтобы дерево оставалось корректным:   Каждый узел левого поддерева меньше или равен корню.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8436077237129211,
              "index": 22,
              "word": "Bin",
              "start": 79,
              "end": 82
            },
            {
              "entity": "I-MISC",
              "score": 0.9967742562294006,
              "index": 23,
              "word": "##ary",
              "start": 82,
              "end": 85
            },
            {
              "entity": "I-MISC",
              "score": 0.9962265491485596,
              "index": 24,
              "word": "Search",
              "start": 86,
              "end": 92
            },
            {
              "entity": "I-MISC",
              "score": 0.991876482963562,
              "index": 25,
              "word": "Tree",
              "start": 93,
              "end": 97
            },
            {
              "entity": "B-MISC",
              "score": 0.5732252597808838,
              "index": 27,
              "word": "BS",
              "start": 99,
              "end": 101
            },
            {
              "entity": "I-MISC",
              "score": 0.5181818008422852,
              "index": 28,
              "word": "##T",
              "start": 101,
              "end": 102
            }
          ]
        },
        {
          "sentence": 164,
          "input": " Каждый узел правого поддерева больше корня    Пусть имеется элемент 6, который нужно вставить в дерево.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.912154495716095,
              "index": 14,
              "word": "П",
              "start": 48,
              "end": 49
            }
          ]
        },
        {
          "sentence": 165,
          "input": "Вставка элемента должна  учитывать правила:  1.",
          "output": []
        },
        {
          "sentence": 166,
          "input": "Если значение элемента меньше текущего узла, вставляем его в левое поддерево.",
          "output": []
        },
        {
          "sentence": 167,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 168,
          "input": "Если значение элемента больше текущего узла, вставляем его в правое поддерево.",
          "output": []
        },
        {
          "sentence": 169,
          "input": "Требуется: Написать программу, которая вставляет элемент 6 в дерево, и определить  новое дерево NewTree, полученное в результате вставки.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9977185726165771,
              "index": 26,
              "word": "New",
              "start": 96,
              "end": 99
            },
            {
              "entity": "I-MISC",
              "score": 0.9905903339385986,
              "index": 27,
              "word": "##T",
              "start": 99,
              "end": 100
            },
            {
              "entity": "I-MISC",
              "score": 0.9968804121017456,
              "index": 28,
              "word": "##ree",
              "start": 100,
              "end": 103
            }
          ]
        },
        {
          "sentence": 170,
          "input": "Результат:  1.",
          "output": []
        },
        {
          "sentence": 171,
          "input": "Сравниваем 6 с корневым значением 5: Так как 6 > 5, идем в правое поддерево.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.776875376701355,
              "index": 6,
              "word": "6",
              "start": 11,
              "end": 12
            }
          ]
        },
        {
          "sentence": 172,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 173,
          "input": "Сравниваем 6 с узлом 8 (правое поддерево от 5): Так как 6 < 8, вставляем элемент 6 в  левое поддерево узла 8.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5700275897979736,
              "index": 6,
              "word": "6",
              "start": 11,
              "end": 12
            }
          ]
        },
        {
          "sentence": 174,
          "input": "11  3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9907724857330322,
              "index": 1,
              "word": "11",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 175,
          "input": "Узел 8 не имеет левого поддерева (текущее значение там nil), поэтому создаем новый  узел:  4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5416447520256042,
              "index": 1,
              "word": "У",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.5750666856765747,
              "index": 3,
              "word": "8",
              "start": 5,
              "end": 6
            }
          ]
        },
        {
          "sentence": 176,
          "input": "Обновляем дерево, добавляя новый узел в качестве левого поддерева узла 8.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8752493858337402,
              "index": 5,
              "word": "дерево",
              "start": 10,
              "end": 16
            },
            {
              "entity": "B-MISC",
              "score": 0.845004677772522,
              "index": 22,
              "word": "8",
              "start": 71,
              "end": 72
            }
          ]
        },
        {
          "sentence": 177,
          "input": "5  3   8  1   4   6",
          "output": []
        }
      ]
    },
    {
      "file_id": 2,
      "type": "PDF",
      "samples": [
        {
          "sentence": 0,
          "input": "1  Лекция 6  6.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5025036931037903,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.9827713370323181,
              "index": 2,
              "word": "Ле",
              "start": 3,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.674755334854126,
              "index": 3,
              "word": "##кция",
              "start": 5,
              "end": 9
            }
          ]
        },
        {
          "sentence": 1,
          "input": "ИСПОЛЬЗОВАНИЕ РЕКУРСИЙ В PROLOG ......................................................................................................... 1  6.1.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7967588901519775,
              "index": 21,
              "word": "PR",
              "start": 25,
              "end": 27
            },
            {
              "entity": "I-MISC",
              "score": 0.8379059433937073,
              "index": 22,
              "word": "##OL",
              "start": 27,
              "end": 29
            },
            {
              "entity": "I-MISC",
              "score": 0.7663585543632507,
              "index": 23,
              "word": "##O",
              "start": 29,
              "end": 30
            },
            {
              "entity": "I-MISC",
              "score": 0.6281548142433167,
              "index": 24,
              "word": "##G",
              "start": 30,
              "end": 31
            }
          ]
        },
        {
          "sentence": 2,
          "input": "ЛЕВОСТОРОННЯЯ И ПРАВОСТОРОННЯЯ РЕКУРСИИ В PROLOG ...................................................................................... 2  6.2.",
          "output": []
        },
        {
          "sentence": 3,
          "input": "СТРУКТУРЫ ДАННЫХ В PROLOG: СПИСКИ ....................................................................................................... 6  6.2.1.",
          "output": []
        },
        {
          "sentence": 4,
          "input": "ОСНОВНЫЕ ОПЕРАЦИИ СО СПИСКАМИ .................................................................................................................... 8  6.2.1.1.",
          "output": [
            {
              "entity": "I-ORG",
              "score": 0.35219255089759827,
              "index": 17,
              "word": "С",
              "start": 21,
              "end": 22
            },
            {
              "entity": "I-ORG",
              "score": 0.41879692673683167,
              "index": 18,
              "word": "##П",
              "start": 22,
              "end": 23
            }
          ]
        },
        {
          "sentence": 5,
          "input": "Добавление элемента в список ............................................................................................................... 8  6.2.1.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5949073433876038,
              "index": 8,
              "word": ".",
              "start": 29,
              "end": 30
            }
          ]
        },
        {
          "sentence": 6,
          "input": "Разделение списка на голову и хвост...................................................................................................... 8  6.2.1.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6827492117881775,
              "index": 13,
              "word": ".",
              "start": 35,
              "end": 36
            }
          ]
        },
        {
          "sentence": 7,
          "input": "Проверка на пустой список ...................................................................................................................... 8  6.2.1.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7730833888053894,
              "index": 9,
              "word": ".",
              "start": 26,
              "end": 27
            }
          ]
        },
        {
          "sentence": 8,
          "input": "Длина списка .............................................................................................................................................. 9    6.1.",
          "output": []
        },
        {
          "sentence": 9,
          "input": "Использование рекурсий в Prolog  Мощным средством программирования в Прологе является рекурсия.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9862074851989746,
              "index": 10,
              "word": "Pro",
              "start": 25,
              "end": 28
            },
            {
              "entity": "I-MISC",
              "score": 0.9569445848464966,
              "index": 11,
              "word": "##log",
              "start": 28,
              "end": 31
            },
            {
              "entity": "B-MISC",
              "score": 0.8991652131080627,
              "index": 21,
              "word": "Про",
              "start": 69,
              "end": 72
            },
            {
              "entity": "I-MISC",
              "score": 0.7032703757286072,
              "index": 22,
              "word": "##лог",
              "start": 72,
              "end": 75
            }
          ]
        },
        {
          "sentence": 10,
          "input": "Рекурсия – это  определение некоторого отношения через самого себя.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8342431783676147,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.8094377517700195,
              "index": 2,
              "word": "##еку",
              "start": 1,
              "end": 4
            },
            {
              "entity": "B-MISC",
              "score": 0.6540651321411133,
              "index": 3,
              "word": "##рс",
              "start": 4,
              "end": 6
            }
          ]
        },
        {
          "sentence": 11,
          "input": "В отличие от императивны х языков, где используются циклы (for, while), Prolog  обрабатывает повторяющиеся задачи с помощью рекурсии.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9939326643943787,
              "index": 21,
              "word": "Pro",
              "start": 72,
              "end": 75
            },
            {
              "entity": "I-MISC",
              "score": 0.9701517224311829,
              "index": 22,
              "word": "##log",
              "start": 75,
              "end": 78
            }
          ]
        },
        {
          "sentence": 12,
          "input": "Каждый реку рсивный вызов  вызывает новый «уровень» обработки задачи.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8971067070960999,
              "index": 4,
              "word": "реку",
              "start": 7,
              "end": 11
            },
            {
              "entity": "B-MISC",
              "score": 0.6590368151664734,
              "index": 5,
              "word": "р",
              "start": 12,
              "end": 13
            }
          ]
        },
        {
          "sentence": 13,
          "input": "Классическим примером рекурсии является вычисление факториала.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5262227654457092,
              "index": 15,
              "word": "фактор",
              "start": 51,
              "end": 57
            },
            {
              "entity": "B-MISC",
              "score": 0.3080410957336426,
              "index": 16,
              "word": "##иа",
              "start": 57,
              "end": 59
            }
          ]
        },
        {
          "sentence": 14,
          "input": "𝐹!",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.48162487149238586,
              "index": 1,
              "word": "𝐹",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 15,
          "input": "= 𝑁!",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.4818372428417206,
              "index": 2,
              "word": "𝑁",
              "start": 2,
              "end": 3
            }
          ]
        },
        {
          "sentence": 16,
          "input": "= 1∙2∙3∙…∙(𝑁−1)∙𝑁.",
          "output": []
        },
        {
          "sentence": 17,
          "input": "𝑁!",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.48162487149238586,
              "index": 1,
              "word": "𝑁",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 18,
          "input": "= (𝑁−1)!∙𝑁.",
          "output": []
        },
        {
          "sentence": 19,
          "input": "Последнее выражение – пример рекурсивных вычислений, т.е.",
          "output": []
        },
        {
          "sentence": 20,
          "input": "каждый последующий  результат получается путем использования предыдущего результата.",
          "output": []
        },
        {
          "sentence": 21,
          "input": "Рекурсивная программа обычно состоит из двух частей:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9935965538024902,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.9298297762870789,
              "index": 2,
              "word": "##еку",
              "start": 1,
              "end": 4
            },
            {
              "entity": "B-MISC",
              "score": 0.5953868627548218,
              "index": 3,
              "word": "##рс",
              "start": 4,
              "end": 6
            },
            {
              "entity": "B-MISC",
              "score": 0.42972344160079956,
              "index": 4,
              "word": "##ивна",
              "start": 6,
              "end": 10
            }
          ]
        },
        {
          "sentence": 22,
          "input": "Базовый случай  (базис рекурсии ) – это простое условие, при достижении  которого рекурсия прекращается, и начинается возврат значений.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9803231954574585,
              "index": 1,
              "word": "Ба",
              "start": 0,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.5022874474525452,
              "index": 2,
              "word": "##зовый",
              "start": 2,
              "end": 7
            },
            {
              "entity": "I-MISC",
              "score": 0.4093058109283447,
              "index": 3,
              "word": "случай",
              "start": 8,
              "end": 14
            }
          ]
        },
        {
          "sentence": 23,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 24,
          "input": "Рекурсивный случай  (шаг рекурсии ) – это часть программы, которая вызывает  саму себя с изменёнными параметрами, приближая программу к базовому случаю.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9855387210845947,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.7086526155471802,
              "index": 2,
              "word": "##еку",
              "start": 1,
              "end": 4
            }
          ]
        },
        {
          "sentence": 25,
          "input": "При ре курсивном вызове новые копии используемых значений переменных  помещаются в стек.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9932228326797485,
              "index": 2,
              "word": "р",
              "start": 4,
              "end": 5
            },
            {
              "entity": "B-MISC",
              "score": 0.9257562756538391,
              "index": 3,
              "word": "##е",
              "start": 5,
              "end": 6
            }
          ]
        },
        {
          "sentence": 26,
          "input": "Стек – область памяти, которая используется для передачи значений  переменных между правилами.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9893714189529419,
              "index": 1,
              "word": "С",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.9793342351913452,
              "index": 2,
              "word": "##те",
              "start": 1,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.813358724117279,
              "index": 3,
              "word": "##к",
              "start": 3,
              "end": 4
            }
          ]
        },
        {
          "sentence": 27,
          "input": "В стеке данные хранятся до тех пор, пока правило не  завершится успешно или нет.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.991396963596344,
              "index": 2,
              "word": "ст",
              "start": 2,
              "end": 4
            },
            {
              "entity": "B-MISC",
              "score": 0.535976767539978,
              "index": 3,
              "word": "##еке",
              "start": 4,
              "end": 7
            }
          ]
        },
        {
          "sentence": 28,
          "input": "В случае отсутствия условия выхода из рекурсии возникает бесконечная рекурсия ,  непрерывно растет число значений переменных, помещаемых в стек.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.49770843982696533,
              "index": 20,
              "word": "реку",
              "start": 69,
              "end": 73
            }
          ]
        },
        {
          "sentence": 29,
          "input": "Возникает переполнение  стека и в результате могут быть утерянными необходимые значения переменных.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7089636325836182,
              "index": 7,
              "word": "ст",
              "start": 24,
              "end": 26
            },
            {
              "entity": "I-MISC",
              "score": 0.42089539766311646,
              "index": 8,
              "word": "##ека",
              "start": 26,
              "end": 29
            }
          ]
        },
        {
          "sentence": 30,
          "input": "Для того чтобы  рекурсивный метод решения был результативным, он должен в конце  концов привести к задаче, решаемой непосредственно.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9652410745620728,
              "index": 4,
              "word": "реку",
              "start": 16,
              "end": 20
            }
          ]
        },
        {
          "sentence": 31,
          "input": "Решить ее позволяют утверждения,  называемые граничными условиями (для нашего случая граничным условием является 0!=1).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6301052570343018,
              "index": 38,
              "word": "0",
              "start": 113,
              "end": 114
            }
          ]
        },
        {
          "sentence": 32,
          "input": "2  6.1.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9897972345352173,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 33,
          "input": "Левосторонняя и правосторонняя рекурсии в Prolog  В SWI -Prolog, как и в других языках программирования, рекурсия может быть  левосторонней или правосторонней, в зависимости от порядка вызова рекурсивного  предиката относительно других операций в теле правила.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9722276926040649,
              "index": 15,
              "word": "Pro",
              "start": 42,
              "end": 45
            },
            {
              "entity": "I-MISC",
              "score": 0.9559507369995117,
              "index": 16,
              "word": "##log",
              "start": 45,
              "end": 48
            },
            {
              "entity": "B-MISC",
              "score": 0.8603597283363342,
              "index": 18,
              "word": "SW",
              "start": 52,
              "end": 54
            },
            {
              "entity": "I-MISC",
              "score": 0.840072751045227,
              "index": 19,
              "word": "##I",
              "start": 54,
              "end": 55
            },
            {
              "entity": "B-MISC",
              "score": 0.7485299706459045,
              "index": 21,
              "word": "Pro",
              "start": 57,
              "end": 60
            },
            {
              "entity": "I-MISC",
              "score": 0.9414952993392944,
              "index": 22,
              "word": "##log",
              "start": 60,
              "end": 63
            }
          ]
        },
        {
          "sentence": 34,
          "input": "Эти подходы определяют, как Prolog  обрабатывает стек вызовов, что может влиять на производительность и работу программы.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9881997108459473,
              "index": 10,
              "word": "Pro",
              "start": 28,
              "end": 31
            },
            {
              "entity": "I-MISC",
              "score": 0.9712122678756714,
              "index": 11,
              "word": "##log",
              "start": 31,
              "end": 34
            }
          ]
        },
        {
          "sentence": 35,
          "input": "В левосторонней рекурсии рекурсивный вызов находится в левой части правила .",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8451975584030151,
              "index": 2,
              "word": "ле",
              "start": 2,
              "end": 4
            },
            {
              "entity": "B-MISC",
              "score": 0.6253209114074707,
              "index": 7,
              "word": "реку",
              "start": 16,
              "end": 20
            }
          ]
        },
        {
          "sentence": 36,
          "input": "Prolog выполняет вызовы слева направо.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9733729362487793,
              "index": 1,
              "word": "Pro",
              "start": 0,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.9469882845878601,
              "index": 2,
              "word": "##log",
              "start": 3,
              "end": 6
            }
          ]
        },
        {
          "sentence": 37,
          "input": "Левосторонняя рекурсия вычисляет результат при « раскручивании» стека вызовов, что  требует значительных ресурсов памяти, но проста в реализации.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9916422367095947,
              "index": 1,
              "word": "Лев",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.4213463366031647,
              "index": 2,
              "word": "##ост",
              "start": 3,
              "end": 6
            }
          ]
        },
        {
          "sentence": 38,
          "input": "Напишем программу для вычисления факториала целого положительного числа,  введенного с клавиатуры, с использованием левосторонней рекурсии:      В приведенной выше процедуре вычисления факториала тело правила начинается с  рекурсивного вызова определяемого предиката.",
          "output": []
        },
        {
          "sentence": 39,
          "input": "Такая рекурсия называется левосторонней  (нисходящей).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.4860500693321228,
              "index": 3,
              "word": "реку",
              "start": 6,
              "end": 10
            },
            {
              "entity": "B-MISC",
              "score": 0.7613470554351807,
              "index": 7,
              "word": "ле",
              "start": 26,
              "end": 28
            }
          ]
        },
        {
          "sentence": 40,
          "input": "3  Рассмотрим вычисление 3!",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8787827491760254,
              "index": 11,
              "word": "3",
              "start": 25,
              "end": 26
            }
          ]
        },
        {
          "sentence": 41,
          "input": "по шагам:  Прямой ход рекурсии:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9625410437583923,
              "index": 5,
              "word": "П",
              "start": 11,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.8925144076347351,
              "index": 6,
              "word": "##ря",
              "start": 12,
              "end": 14
            },
            {
              "entity": "I-MISC",
              "score": 0.9313046336174011,
              "index": 7,
              "word": "##мой",
              "start": 14,
              "end": 17
            },
            {
              "entity": "I-MISC",
              "score": 0.8919573426246643,
              "index": 8,
              "word": "ход",
              "start": 18,
              "end": 21
            },
            {
              "entity": "I-MISC",
              "score": 0.5954263210296631,
              "index": 9,
              "word": "реку",
              "start": 22,
              "end": 26
            },
            {
              "entity": "I-MISC",
              "score": 0.6207116842269897,
              "index": 10,
              "word": "##рс",
              "start": 26,
              "end": 28
            },
            {
              "entity": "I-MISC",
              "score": 0.6664703488349915,
              "index": 11,
              "word": "##ии",
              "start": 28,
              "end": 30
            }
          ]
        },
        {
          "sentence": 42,
          "input": "Первый вызов:   N = 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9303680658340454,
              "index": 5,
              "word": "N",
              "start": 17,
              "end": 18
            }
          ]
        },
        {
          "sentence": 43,
          "input": " Проверяется, что N > 0 (истина).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9372193217277527,
              "index": 6,
              "word": "N",
              "start": 19,
              "end": 20
            }
          ]
        },
        {
          "sentence": 44,
          "input": " N1 = 3 - 1 = 2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8229230046272278,
              "index": 1,
              "word": "N",
              "start": 2,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.5984337329864502,
              "index": 2,
              "word": "##1",
              "start": 3,
              "end": 4
            }
          ]
        },
        {
          "sentence": 45,
          "input": " Выполняется рекурсивный вызов factorial(2, Fact1).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8720021843910217,
              "index": 14,
              "word": "Fact",
              "start": 45,
              "end": 49
            }
          ]
        },
        {
          "sentence": 46,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 47,
          "input": "Второй вызов:   N = 2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9394558668136597,
              "index": 5,
              "word": "N",
              "start": 17,
              "end": 18
            }
          ]
        },
        {
          "sentence": 48,
          "input": " Проверяется, что N > 0 (истина).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9372193217277527,
              "index": 6,
              "word": "N",
              "start": 19,
              "end": 20
            }
          ]
        },
        {
          "sentence": 49,
          "input": " N1 = 2 - 1 = 1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8471514582633972,
              "index": 1,
              "word": "N",
              "start": 2,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.5463017225265503,
              "index": 2,
              "word": "##1",
              "start": 3,
              "end": 4
            }
          ]
        },
        {
          "sentence": 50,
          "input": " Выполняется рекурсивный вызов factorial(1, Fact1).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8985907435417175,
              "index": 14,
              "word": "Fact",
              "start": 45,
              "end": 49
            }
          ]
        },
        {
          "sentence": 51,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 52,
          "input": "Третий вызов:   N = 1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9050130248069763,
              "index": 7,
              "word": "N",
              "start": 17,
              "end": 18
            }
          ]
        },
        {
          "sentence": 53,
          "input": " Проверяется, что N > 0 (истина).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9372193217277527,
              "index": 6,
              "word": "N",
              "start": 19,
              "end": 20
            }
          ]
        },
        {
          "sentence": 54,
          "input": " N1 = 1 - 1 = 0.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9238907098770142,
              "index": 1,
              "word": "N",
              "start": 2,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.8122298717498779,
              "index": 2,
              "word": "##1",
              "start": 3,
              "end": 4
            }
          ]
        },
        {
          "sentence": 55,
          "input": " Выполняется рекурсивный вызов factorial(0, Fact1).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8984447717666626,
              "index": 14,
              "word": "Fact",
              "start": 45,
              "end": 49
            }
          ]
        },
        {
          "sentence": 56,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 57,
          "input": "Четвертый вызов (базовый случай):   N = 0.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9731541275978088,
              "index": 13,
              "word": "N",
              "start": 37,
              "end": 38
            }
          ]
        },
        {
          "sentence": 58,
          "input": " Применяется базовое правило factorial(0, 1).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9858230352401733,
              "index": 7,
              "word": "factor",
              "start": 30,
              "end": 36
            },
            {
              "entity": "I-MISC",
              "score": 0.9228980541229248,
              "index": 8,
              "word": "##ial",
              "start": 36,
              "end": 39
            }
          ]
        },
        {
          "sentence": 59,
          "input": " Возвращается результат Fact1 = 1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9910359382629395,
              "index": 6,
              "word": "Fact",
              "start": 25,
              "end": 29
            },
            {
              "entity": "I-MISC",
              "score": 0.6544617414474487,
              "index": 7,
              "word": "##1",
              "start": 29,
              "end": 30
            }
          ]
        },
        {
          "sentence": 60,
          "input": "Раскручивание стека вызовов (обратный ход рекурсии):  После достижения базового случая, стек вызовов начинает «разворачиваться», и  каждый вызов завершает вычисления, используя результаты предыдущих вызовов:  1.",
          "output": []
        },
        {
          "sentence": 61,
          "input": "Третий вызов (для N = 1):   Fact1 = 1 (результат из предыдущего вызова).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7179743647575378,
              "index": 8,
              "word": "N",
              "start": 18,
              "end": 19
            },
            {
              "entity": "B-MISC",
              "score": 0.8971980810165405,
              "index": 13,
              "word": "Fact",
              "start": 29,
              "end": 33
            }
          ]
        },
        {
          "sentence": 62,
          "input": " Fact = 1 * 1 = 1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9785529375076294,
              "index": 1,
              "word": "Fact",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 63,
          "input": " Возвращается Fact = 1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943243265151978,
              "index": 5,
              "word": "Fact",
              "start": 15,
              "end": 19
            }
          ]
        },
        {
          "sentence": 64,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 65,
          "input": "Второй вызов (для N = 2):   Fact1 = 1 (результат из предыдущего вызова).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5152794122695923,
              "index": 6,
              "word": "N",
              "start": 18,
              "end": 19
            },
            {
              "entity": "B-MISC",
              "score": 0.9077646732330322,
              "index": 11,
              "word": "Fact",
              "start": 29,
              "end": 33
            }
          ]
        },
        {
          "sentence": 66,
          "input": " Fact = 2 * 1 = 2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9774060845375061,
              "index": 1,
              "word": "Fact",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 67,
          "input": " Возвращается Fact = 2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9956228137016296,
              "index": 5,
              "word": "Fact",
              "start": 15,
              "end": 19
            }
          ]
        },
        {
          "sentence": 68,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 69,
          "input": "Первый вызов (для N = 3):   Fact1 = 2 (результат из предыдущего вызова).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5875589847564697,
              "index": 6,
              "word": "N",
              "start": 18,
              "end": 19
            },
            {
              "entity": "B-MISC",
              "score": 0.925422191619873,
              "index": 11,
              "word": "Fact",
              "start": 29,
              "end": 33
            }
          ]
        },
        {
          "sentence": 70,
          "input": " Fact = 3 * 2 = 6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9701985120773315,
              "index": 1,
              "word": "Fact",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 71,
          "input": " Возвращается Fact = 6.    !",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.995083212852478,
              "index": 5,
              "word": "Fact",
              "start": 15,
              "end": 19
            }
          ]
        },
        {
          "sentence": 72,
          "input": "Важные моменты  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7618353366851807,
              "index": 1,
              "word": "В",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 73,
          "input": "Рекурсивный вызов до вычисления:  В каждом шаге сначала вызывается factorial(N1, Fact1), и только после завершения  этого вызова выполняется операция умножения Fact is N * Fact1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5545973181724548,
              "index": 25,
              "word": "Fact",
              "start": 81,
              "end": 85
            },
            {
              "entity": "B-MISC",
              "score": 0.5284493565559387,
              "index": 46,
              "word": "Fact",
              "start": 160,
              "end": 164
            }
          ]
        },
        {
          "sentence": 74,
          "input": "4  2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9892846941947937,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 75,
          "input": "Использование стека:  Prolog сохраняет контекст каждого вызова в стеке до достижения базового случая.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.996504545211792,
              "index": 9,
              "word": "Pro",
              "start": 22,
              "end": 25
            },
            {
              "entity": "I-MISC",
              "score": 0.9916489124298096,
              "index": 10,
              "word": "##log",
              "start": 25,
              "end": 28
            }
          ]
        },
        {
          "sentence": 76,
          "input": "Например, Для factorial(3, Fact) стек будет выглядеть так:  factorial(3, Fact)  factorial(2, Fact1)  factorial(1, Fact1)  factorial(0, 1)  % Базовый случай  3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7989682555198669,
              "index": 9,
              "word": "Fact",
              "start": 27,
              "end": 31
            },
            {
              "entity": "B-MISC",
              "score": 0.6554028391838074,
              "index": 24,
              "word": "Fact",
              "start": 73,
              "end": 77
            },
            {
              "entity": "B-MISC",
              "score": 0.49047043919563293,
              "index": 31,
              "word": "Fact",
              "start": 93,
              "end": 97
            }
          ]
        },
        {
          "sentence": 77,
          "input": "Риск переполнения стека:  Если N слишком велико, программа может зав ершиться с ошибкой из -за нехватки  памяти для хранения всех вызовов.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9979413151741028,
              "index": 10,
              "word": "N",
              "start": 31,
              "end": 32
            }
          ]
        },
        {
          "sentence": 78,
          "input": "В Prolog конструкция условия записывается в форме if-then-else, используя символ ->  для «then» и ; для «else».",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9986503720283508,
              "index": 2,
              "word": "Pro",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.9767444133758545,
              "index": 3,
              "word": "##log",
              "start": 5,
              "end": 8
            }
          ]
        },
        {
          "sentence": 79,
          "input": "1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9720537662506104,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 80,
          "input": "Левая часть условия (if): integer(N), N >= 0  Здесь проверяется, что введённое значение N является целым числом ( integer(N)) и  что оно неотрицательное ( N >= 0 ).",
          "output": []
        },
        {
          "sentence": 81,
          "input": "В Prolog условия объединяются через запятую,  что  означает «логическое И».",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9982584118843079,
              "index": 2,
              "word": "Pro",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.9755936861038208,
              "index": 3,
              "word": "##log",
              "start": 5,
              "end": 8
            }
          ]
        },
        {
          "sentence": 82,
          "input": "Оба условия должны быть истинными.",
          "output": []
        },
        {
          "sentence": 83,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 84,
          "input": "Правая часть условия:   Если истина ( then): Если проверка прошла успешно, программа вычисляет  факториал с помощью предиката factorial(N, Fact) , выводит результат и  завершает выполнение текущего ветвления с помощью отсечения (!).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8061423897743225,
              "index": 37,
              "word": "N",
              "start": 137,
              "end": 138
            },
            {
              "entity": "B-MISC",
              "score": 0.8246384263038635,
              "index": 39,
              "word": "Fact",
              "start": 140,
              "end": 144
            }
          ]
        },
        {
          "sentence": 85,
          "input": " Если ложь ( else): Если хотя бы одно из условий не выполнено, программа   выводит сообщение об ошибке.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6885087490081787,
              "index": 6,
              "word": "else",
              "start": 14,
              "end": 18
            }
          ]
        },
        {
          "sentence": 86,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 87,
          "input": "Символы конструкции:   ->:  Указывает на действие, выполняемое при выполнении условия (часть «then»).",
          "output": []
        },
        {
          "sentence": 88,
          "input": " ;:  Отделяет часть «else» от «then».",
          "output": []
        },
        {
          "sentence": 89,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 90,
          "input": "Внешние скобки:   Скобки ( ... ) охватывают всю конструкцию условия.",
          "output": [
            {
              "entity": "I-MISC",
              "score": 0.5141657590866089,
              "index": 7,
              "word": "##бки",
              "start": 11,
              "end": 14
            },
            {
              "entity": "B-MISC",
              "score": 0.9461883902549744,
              "index": 9,
              "word": "С",
              "start": 19,
              "end": 20
            },
            {
              "entity": "B-MISC",
              "score": 0.8053882122039795,
              "index": 10,
              "word": "##ко",
              "start": 20,
              "end": 22
            },
            {
              "entity": "I-MISC",
              "score": 0.4733065068721771,
              "index": 11,
              "word": "##бки",
              "start": 22,
              "end": 25
            }
          ]
        },
        {
          "sentence": 91,
          "input": "Это необходимо, чтобы  корректно обработать связку -> и ;.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5069728493690491,
              "index": 15,
              "word": "-",
              "start": 51,
              "end": 52
            }
          ]
        },
        {
          "sentence": 92,
          "input": "Правосторонняя рекурсия  – это рекурсия, где рекурсивный вызов происходит  последним действием  в теле правила.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9857681393623352,
              "index": 1,
              "word": "П",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.9238225221633911,
              "index": 2,
              "word": "##раво",
              "start": 1,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.4543246626853943,
              "index": 3,
              "word": "##стор",
              "start": 5,
              "end": 9
            },
            {
              "entity": "I-MISC",
              "score": 0.5458278059959412,
              "index": 4,
              "word": "##он",
              "start": 9,
              "end": 11
            },
            {
              "entity": "I-MISC",
              "score": 0.4059434235095978,
              "index": 5,
              "word": "##няя",
              "start": 11,
              "end": 14
            },
            {
              "entity": "B-MISC",
              "score": 0.7012874484062195,
              "index": 6,
              "word": "реку",
              "start": 15,
              "end": 19
            }
          ]
        },
        {
          "sentence": 93,
          "input": "Это позволяет Prolog оптимизировать выполнение и  избежать роста стека вызовов.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9897078275680542,
              "index": 3,
              "word": "Pro",
              "start": 14,
              "end": 17
            },
            {
              "entity": "I-MISC",
              "score": 0.9541317224502563,
              "index": 4,
              "word": "##log",
              "start": 17,
              "end": 20
            }
          ]
        },
        {
          "sentence": 94,
          "input": "В реализации факториала для правосторонней рекурсии обычно  используется аккумулятор.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5550551414489746,
              "index": 16,
              "word": "а",
              "start": 73,
              "end": 74
            }
          ]
        },
        {
          "sentence": 95,
          "input": "Аккумулятор – это дополнительный аргумент, который используется для сохранения  промежуточного результата в процессе выполнения рекурсии .",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9975197911262512,
              "index": 1,
              "word": "Ак",
              "start": 0,
              "end": 2
            },
            {
              "entity": "I-MISC",
              "score": 0.5858218669891357,
              "index": 2,
              "word": "##ку",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.7577351331710815,
              "index": 3,
              "word": "##му",
              "start": 4,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.7840213179588318,
              "index": 4,
              "word": "##лят",
              "start": 6,
              "end": 9
            },
            {
              "entity": "I-MISC",
              "score": 0.7894493937492371,
              "index": 5,
              "word": "##ор",
              "start": 9,
              "end": 11
            },
            {
              "entity": "B-MISC",
              "score": 0.6116140484809875,
              "index": 6,
              "word": "–",
              "start": 12,
              "end": 13
            }
          ]
        },
        {
          "sentence": 96,
          "input": "Вместо того чтобы « ждать»  завершения рекурсии для вычислений, все необходимые операции выполняются на этапе  рекурсивного вызова, а результат передаётся в следующую итерацию.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8051943182945251,
              "index": 12,
              "word": "реку",
              "start": 39,
              "end": 43
            }
          ]
        },
        {
          "sentence": 97,
          "input": "5      Рассмотрим вычисление 3!",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8582776188850403,
              "index": 11,
              "word": "3",
              "start": 29,
              "end": 30
            }
          ]
        },
        {
          "sentence": 98,
          "input": "по шагам:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8998759984970093,
              "index": 2,
              "word": "ша",
              "start": 3,
              "end": 5
            }
          ]
        },
        {
          "sentence": 99,
          "input": "Первый вызов: factorial(3, Fact).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9930762052536011,
              "index": 10,
              "word": "Fact",
              "start": 27,
              "end": 31
            }
          ]
        },
        {
          "sentence": 100,
          "input": "Инициализация: factorial(3, 1, Fact).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.983242928981781,
              "index": 13,
              "word": "Fact",
              "start": 31,
              "end": 35
            }
          ]
        },
        {
          "sentence": 101,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 102,
          "input": "Рекурсивный случай 1: factorial(3, 1, Fact).",
          "output": []
        },
        {
          "sentence": 103,
          "input": "N = 3, Acc = 1.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.46395403146743774,
              "index": 5,
              "word": "A",
              "start": 7,
              "end": 8
            }
          ]
        },
        {
          "sentence": 104,
          "input": "NewAcc = 1 * 3 = 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8113614320755005,
              "index": 1,
              "word": "New",
              "start": 0,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.5352974534034729,
              "index": 2,
              "word": "##A",
              "start": 3,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.765606164932251,
              "index": 3,
              "word": "##cc",
              "start": 4,
              "end": 6
            }
          ]
        },
        {
          "sentence": 105,
          "input": "Следующий вызов: factorial(2, 3, Fact).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9827014803886414,
              "index": 14,
              "word": "Fact",
              "start": 33,
              "end": 37
            }
          ]
        },
        {
          "sentence": 106,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 107,
          "input": "Рекурсивный случай 2: factorial(2, 3, Fact).",
          "output": []
        },
        {
          "sentence": 108,
          "input": "N = 2, Acc = 3.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.49178841710090637,
              "index": 5,
              "word": "A",
              "start": 7,
              "end": 8
            }
          ]
        },
        {
          "sentence": 109,
          "input": "NewAcc = 3 * 2 = 6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8150801062583923,
              "index": 1,
              "word": "New",
              "start": 0,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.5323184728622437,
              "index": 2,
              "word": "##A",
              "start": 3,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.8028583526611328,
              "index": 3,
              "word": "##cc",
              "start": 4,
              "end": 6
            }
          ]
        },
        {
          "sentence": 110,
          "input": "Следующий вызов: factorial(1, 6, Fact).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9882861971855164,
              "index": 14,
              "word": "Fact",
              "start": 33,
              "end": 37
            }
          ]
        },
        {
          "sentence": 111,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 112,
          "input": "Рекурсивный случай 3: factorial(1, 6, Fact).",
          "output": []
        },
        {
          "sentence": 113,
          "input": "N = 1, Acc = 6.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.4395086169242859,
              "index": 5,
              "word": "A",
              "start": 7,
              "end": 8
            }
          ]
        },
        {
          "sentence": 114,
          "input": "NewAcc = 6 * 1 = 6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8277732729911804,
              "index": 1,
              "word": "New",
              "start": 0,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.5574021339416504,
              "index": 2,
              "word": "##A",
              "start": 3,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.8230252861976624,
              "index": 3,
              "word": "##cc",
              "start": 4,
              "end": 6
            }
          ]
        },
        {
          "sentence": 115,
          "input": "Следующий вызов: factorial(0, 6, Fact).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9901236891746521,
              "index": 14,
              "word": "Fact",
              "start": 33,
              "end": 37
            }
          ]
        },
        {
          "sentence": 116,
          "input": "5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9932518601417542,
              "index": 1,
              "word": "5",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 117,
          "input": "Базовый случай: factorial(0, 6, Fact).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9733311533927917,
              "index": 12,
              "word": "Fact",
              "start": 32,
              "end": 36
            }
          ]
        },
        {
          "sentence": 118,
          "input": "N = 0, Acc = 6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.4365845024585724,
              "index": 5,
              "word": "A",
              "start": 7,
              "end": 8
            }
          ]
        },
        {
          "sentence": 119,
          "input": "Возвращаем результат: Fact = 6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9957312941551208,
              "index": 8,
              "word": "Fact",
              "start": 22,
              "end": 26
            }
          ]
        },
        {
          "sentence": 120,
          "input": "6  Отличия от левосторонней рекурсии:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.48962774872779846,
              "index": 10,
              "word": "реку",
              "start": 28,
              "end": 32
            }
          ]
        },
        {
          "sentence": 121,
          "input": "Аккумулятор вместо стека:   В правосторонней рекурсии используется аккумулятор для хранения  промежуточного результата.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.843368411064148,
              "index": 1,
              "word": "Ак",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 122,
          "input": " В левосторонней рекурсии стек сохраняет вызовы до достижения базового  случая.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5399675369262695,
              "index": 2,
              "word": "ле",
              "start": 4,
              "end": 6
            },
            {
              "entity": "B-MISC",
              "score": 0.9488129615783691,
              "index": 10,
              "word": "ст",
              "start": 27,
              "end": 29
            },
            {
              "entity": "B-MISC",
              "score": 0.7106055021286011,
              "index": 11,
              "word": "##ек",
              "start": 29,
              "end": 31
            }
          ]
        },
        {
          "sentence": 123,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 124,
          "input": "Хвостовая оптимизация:   В правосторонней рекурс ии последний вызов в предикате – рекурсивный  (factorial(N1, NewAcc, Fact) ), поэтому Prolog может оптимизировать выполнение,  освобождая память.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8410385847091675,
              "index": 37,
              "word": "New",
              "start": 111,
              "end": 114
            },
            {
              "entity": "I-MISC",
              "score": 0.8805598616600037,
              "index": 38,
              "word": "##A",
              "start": 114,
              "end": 115
            },
            {
              "entity": "I-MISC",
              "score": 0.9096195697784424,
              "index": 39,
              "word": "##cc",
              "start": 115,
              "end": 117
            },
            {
              "entity": "B-MISC",
              "score": 0.711158812046051,
              "index": 41,
              "word": "Fact",
              "start": 119,
              "end": 123
            },
            {
              "entity": "B-MISC",
              "score": 0.9581398367881775,
              "index": 46,
              "word": "Pro",
              "start": 136,
              "end": 139
            },
            {
              "entity": "I-MISC",
              "score": 0.9656509757041931,
              "index": 47,
              "word": "##log",
              "start": 139,
              "end": 142
            }
          ]
        },
        {
          "sentence": 125,
          "input": " В левосторонней рекурсии Prolog сохраня ет вызовы в стеке, что требует больше  памяти.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9945928454399109,
              "index": 10,
              "word": "Pro",
              "start": 27,
              "end": 30
            },
            {
              "entity": "I-MISC",
              "score": 0.9819814562797546,
              "index": 11,
              "word": "##log",
              "start": 30,
              "end": 33
            }
          ]
        },
        {
          "sentence": 126,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 127,
          "input": "Производительность:   Правосторонняя рекурсия лучше масштабируется для больших значений N.    Сравнение левосторонней и правосторонней рекурсий:  Характеристика Левосторонняя рекурсия Правосторонняя рекурсия  Вызов рекурсивного  предиката  Перед выполнением  остальных операций  После выполнения всех  операций  Использование стека Увеличивается с каждым  вызовом    Сохраняется на одном уровне  Оптимизация (хвостовая  рекурсия) – рекурсивный  вызов является последней  операцией в предикате или  функции  нет ",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.526702880859375,
              "index": 26,
              "word": "N",
              "start": 89,
              "end": 90
            }
          ]
        },
        {
          "sentence": 128,
          "input": "да  Применение Удобно для вычислений \"с  конца\"  Удобно для итеративных  задач    6.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6983494758605957,
              "index": 1,
              "word": "да",
              "start": 0,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.5269887447357178,
              "index": 2,
              "word": "При",
              "start": 4,
              "end": 7
            }
          ]
        },
        {
          "sentence": 129,
          "input": "Структуры данных в Prolog: списки  В языке SWI-Prolog списки являются одной из важнейших структур данных и широко  используются для представления и обработки коллекций данных.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9806702136993408,
              "index": 7,
              "word": "Pro",
              "start": 19,
              "end": 22
            },
            {
              "entity": "I-MISC",
              "score": 0.9389869570732117,
              "index": 8,
              "word": "##log",
              "start": 22,
              "end": 25
            },
            {
              "entity": "B-MISC",
              "score": 0.7399751543998718,
              "index": 14,
              "word": "SW",
              "start": 43,
              "end": 45
            },
            {
              "entity": "I-MISC",
              "score": 0.6068624258041382,
              "index": 15,
              "word": "##I",
              "start": 45,
              "end": 46
            },
            {
              "entity": "B-MISC",
              "score": 0.8935326933860779,
              "index": 17,
              "word": "Pro",
              "start": 47,
              "end": 50
            },
            {
              "entity": "I-MISC",
              "score": 0.8916736245155334,
              "index": 18,
              "word": "##log",
              "start": 50,
              "end": 53
            }
          ]
        },
        {
          "sentence": 130,
          "input": "Списки в Prolog  представлены как последовательность элементов, где каждый элемент может быть атомом,  числом, другим списком или любым другим объектом.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9983865022659302,
              "index": 4,
              "word": "Pro",
              "start": 9,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.9867440462112427,
              "index": 5,
              "word": "##log",
              "start": 12,
              "end": 15
            }
          ]
        },
        {
          "sentence": 131,
          "input": "Количество элементов в списке называется его длиной.",
          "output": []
        },
        {
          "sentence": 132,
          "input": "Список может содержать один  элемент и даже не содержать ни одного элемента.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9986883997917175,
              "index": 1,
              "word": "Список",
              "start": 0,
              "end": 6
            }
          ]
        },
        {
          "sentence": 133,
          "input": "Список, не содержащий элементов,  называется пустым, или нулевым списком.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8961186408996582,
              "index": 1,
              "word": "Список",
              "start": 0,
              "end": 6
            }
          ]
        },
        {
          "sentence": 134,
          "input": "Список в Prolog – это рекурсивная структура данных (структура, которая может быть  определена через саму себя, то есть элемент этой структуры может содержать экземпляр этой  же структуры.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9984927177429199,
              "index": 3,
              "word": "Pro",
              "start": 9,
              "end": 12
            },
            {
              "entity": "I-MISC",
              "score": 0.9847116470336914,
              "index": 4,
              "word": "##log",
              "start": 12,
              "end": 15
            }
          ]
        },
        {
          "sentence": 135,
          "input": "), которая может быть представлена в виде:  [Head | Tail]   Head – это первый элемент списка (голова).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7647335529327393,
              "index": 11,
              "word": "Head",
              "start": 45,
              "end": 49
            },
            {
              "entity": "B-MISC",
              "score": 0.4348623752593994,
              "index": 13,
              "word": "Tail",
              "start": 52,
              "end": 56
            },
            {
              "entity": "B-MISC",
              "score": 0.7263436317443848,
              "index": 15,
              "word": "Head",
              "start": 61,
              "end": 65
            }
          ]
        },
        {
          "sentence": 136,
          "input": " Tail – это оставшаяся часть списка, которая также является списком (хвост).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9895716905593872,
              "index": 1,
              "word": "Tail",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 137,
          "input": "7  Связный список  – структура данных, состоящая из узлов.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9507618546485901,
              "index": 2,
              "word": "Св",
              "start": 3,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.5765249133110046,
              "index": 3,
              "word": "##яз",
              "start": 5,
              "end": 7
            },
            {
              "entity": "I-MISC",
              "score": 0.9724565744400024,
              "index": 4,
              "word": "##ный",
              "start": 7,
              "end": 10
            },
            {
              "entity": "I-MISC",
              "score": 0.9750369191169739,
              "index": 5,
              "word": "список",
              "start": 11,
              "end": 17
            }
          ]
        },
        {
          "sentence": 138,
          "input": "Узел содержит данные и  ссылку (указатель, связку) на о дин или два соседних узла.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9909056425094604,
              "index": 1,
              "word": "У",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.882806122303009,
              "index": 2,
              "word": "##зел",
              "start": 1,
              "end": 4
            }
          ]
        },
        {
          "sentence": 139,
          "input": "На рис.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9713976979255676,
              "index": 2,
              "word": "р",
              "start": 3,
              "end": 4
            }
          ]
        },
        {
          "sentence": 140,
          "input": "6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.983711302280426,
              "index": 1,
              "word": "6",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 141,
          "input": "1. представлен  односвязный список, т.е.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8369640707969666,
              "index": 4,
              "word": "однос",
              "start": 16,
              "end": 21
            }
          ]
        },
        {
          "sentence": 142,
          "input": "каждый узел содержит лишь одну ссылку.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6206310391426086,
              "index": 2,
              "word": "уз",
              "start": 7,
              "end": 9
            }
          ]
        },
        {
          "sentence": 143,
          "input": "Рис.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6195117831230164,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.6940648555755615,
              "index": 2,
              "word": "##ис",
              "start": 1,
              "end": 3
            }
          ]
        },
        {
          "sentence": 144,
          "input": "6.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9899609088897705,
              "index": 1,
              "word": "6",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 145,
          "input": "Односвязный список  Пример 6.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9859920144081116,
              "index": 7,
              "word": "При",
              "start": 20,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.9298602938652039,
              "index": 8,
              "word": "##мер",
              "start": 23,
              "end": 26
            }
          ]
        },
        {
          "sentence": 146,
          "input": "Дан список: [1, 2, 3, 4, 5].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8964584469795227,
              "index": 1,
              "word": "Да",
              "start": 0,
              "end": 2
            },
            {
              "entity": "I-MISC",
              "score": 0.4674054682254791,
              "index": 2,
              "word": "##н",
              "start": 2,
              "end": 3
            }
          ]
        },
        {
          "sentence": 147,
          "input": "Здесь: Head = 1, а Tail = [2, 3, 4, 5].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7467314004898071,
              "index": 3,
              "word": "Head",
              "start": 7,
              "end": 11
            },
            {
              "entity": "B-MISC",
              "score": 0.7458324432373047,
              "index": 8,
              "word": "Tail",
              "start": 19,
              "end": 23
            }
          ]
        },
        {
          "sentence": 148,
          "input": "8  6.2.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9923505187034607,
              "index": 1,
              "word": "8",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 149,
          "input": "Основные операции со списками  6.2.1.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5333436131477356,
              "index": 2,
              "word": "операции",
              "start": 9,
              "end": 17
            },
            {
              "entity": "B-MISC",
              "score": 0.852410614490509,
              "index": 7,
              "word": "6",
              "start": 31,
              "end": 32
            }
          ]
        },
        {
          "sentence": 150,
          "input": "Добавление элемента в список  Для добавления элемента в начало списка используется конструкция [Element | List] ,  где Element – это новый элемент, который будет добавлен в начало, а List  – существующий  список.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6393248438835144,
              "index": 23,
              "word": "Element",
              "start": 96,
              "end": 103
            },
            {
              "entity": "B-MISC",
              "score": 0.6929153203964233,
              "index": 25,
              "word": "List",
              "start": 106,
              "end": 110
            },
            {
              "entity": "B-MISC",
              "score": 0.6743190288543701,
              "index": 29,
              "word": "Element",
              "start": 119,
              "end": 126
            },
            {
              "entity": "B-MISC",
              "score": 0.8052924871444702,
              "index": 43,
              "word": "List",
              "start": 183,
              "end": 187
            }
          ]
        },
        {
          "sentence": 151,
          "input": "Создадим следующий предикат, который принимает три аргумента:     Element – элемент, который мы хотим добавить в список.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.997180700302124,
              "index": 16,
              "word": "Element",
              "start": 67,
              "end": 74
            }
          ]
        },
        {
          "sentence": 152,
          "input": " List – существующий список, в который добавляется новый элемент.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9991426467895508,
              "index": 1,
              "word": "List",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 153,
          "input": " [Element | List] – новый список, где Element стал первым элементом, а List –  хвостом.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5440042018890381,
              "index": 2,
              "word": "Element",
              "start": 3,
              "end": 10
            },
            {
              "entity": "B-MISC",
              "score": 0.7429104447364807,
              "index": 4,
              "word": "List",
              "start": 13,
              "end": 17
            },
            {
              "entity": "B-MISC",
              "score": 0.888493537902832,
              "index": 11,
              "word": "Element",
              "start": 39,
              "end": 46
            },
            {
              "entity": "B-MISC",
              "score": 0.8064714670181274,
              "index": 18,
              "word": "List",
              "start": 72,
              "end": 76
            }
          ]
        },
        {
          "sentence": 154,
          "input": "6.2.1.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9936536550521851,
              "index": 1,
              "word": "6",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 155,
          "input": "Разделение списка на голову и хвост  Вы можете разделить список на его Head (первый элемент) и Tail (оставшийся список).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9395434856414795,
              "index": 22,
              "word": "Head",
              "start": 71,
              "end": 75
            },
            {
              "entity": "B-MISC",
              "score": 0.9517425894737244,
              "index": 28,
              "word": "Tail",
              "start": 95,
              "end": 99
            }
          ]
        },
        {
          "sentence": 156,
          "input": "Так как пустой список не может быть разделен, результат будет false.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9820490479469299,
              "index": 16,
              "word": "false",
              "start": 62,
              "end": 67
            }
          ]
        },
        {
          "sentence": 157,
          "input": "6.2.1.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9935218691825867,
              "index": 1,
              "word": "6",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 158,
          "input": "Проверка на пустой список  Чтобы проверить, является ли список пустым, можно использовать 2 представленных  ниже варианта:     9            Проверка на пустой список является важной операцией при работе с рекурсией и  списками в Prolog, так как она помогает остановить рекурсию при достижении конца списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9881396293640137,
              "index": 55,
              "word": "Pro",
              "start": 229,
              "end": 232
            },
            {
              "entity": "I-MISC",
              "score": 0.9903959631919861,
              "index": 56,
              "word": "##log",
              "start": 232,
              "end": 235
            }
          ]
        },
        {
          "sentence": 159,
          "input": "6.2.1.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937501549720764,
              "index": 1,
              "word": "6",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 160,
          "input": "Длина списка  Для вычисления длины списка составим программу, использующую рекурсию:      Пример 6.2.: Найти длину списка [1, 2, 3, 4]    Каждый шаг рекурсии сводится к вычислению длины хвоста списка, а затем  прибавлению 1 для учета текущего элемента.",
          "output": []
        },
        {
          "sentence": 161,
          "input": "Это повторяется до тех пор, пока не дойдем до  пустого списка, которы й является базовым случаем с длиной 0.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7067886590957642,
              "index": 22,
              "word": "ко",
              "start": 63,
              "end": 65
            },
            {
              "entity": "B-MISC",
              "score": 0.6588769555091858,
              "index": 33,
              "word": "0",
              "start": 106,
              "end": 107
            }
          ]
        },
        {
          "sentence": 162,
          "input": "После этого значения длины   10  начинают возвращаться и суммироваться, пока не получим окончательную длину списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9494363069534302,
              "index": 6,
              "word": "10",
              "start": 29,
              "end": 31
            }
          ]
        },
        {
          "sentence": 163,
          "input": "Рассмотрим вывод по шагам:  Прямой ход рекурсии:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9702547192573547,
              "index": 12,
              "word": "П",
              "start": 28,
              "end": 29
            },
            {
              "entity": "I-MISC",
              "score": 0.9187782406806946,
              "index": 13,
              "word": "##ря",
              "start": 29,
              "end": 31
            },
            {
              "entity": "I-MISC",
              "score": 0.9402911067008972,
              "index": 14,
              "word": "##мой",
              "start": 31,
              "end": 34
            },
            {
              "entity": "I-MISC",
              "score": 0.891721248626709,
              "index": 15,
              "word": "ход",
              "start": 35,
              "end": 38
            },
            {
              "entity": "I-MISC",
              "score": 0.567105233669281,
              "index": 16,
              "word": "реку",
              "start": 39,
              "end": 43
            },
            {
              "entity": "I-MISC",
              "score": 0.5637051463127136,
              "index": 17,
              "word": "##рс",
              "start": 43,
              "end": 45
            },
            {
              "entity": "I-MISC",
              "score": 0.5851936936378479,
              "index": 18,
              "word": "##ии",
              "start": 45,
              "end": 47
            }
          ]
        },
        {
          "sentence": 164,
          "input": "Мы начинаем с вызова length_of_list([1, 2, 3, 4], Length):   Список не пустой, значит мы используем рекурсивное правило.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9887657165527344,
              "index": 24,
              "word": "Len",
              "start": 50,
              "end": 53
            },
            {
              "entity": "I-MISC",
              "score": 0.9785536527633667,
              "index": 25,
              "word": "##gth",
              "start": 53,
              "end": 56
            }
          ]
        },
        {
          "sentence": 165,
          "input": " Первый элемент – 1, хвост списка – [2, 3, 4].",
          "output": []
        },
        {
          "sentence": 166,
          "input": " Вызываем length_of_list([2, 3, 4], TailLength).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9950641989707947,
              "index": 19,
              "word": "Tail",
              "start": 37,
              "end": 41
            },
            {
              "entity": "I-MISC",
              "score": 0.9145722985267639,
              "index": 20,
              "word": "##L",
              "start": 41,
              "end": 42
            },
            {
              "entity": "I-MISC",
              "score": 0.9894375801086426,
              "index": 21,
              "word": "##engt",
              "start": 42,
              "end": 46
            },
            {
              "entity": "I-MISC",
              "score": 0.9863953590393066,
              "index": 22,
              "word": "##h",
              "start": 46,
              "end": 47
            }
          ]
        },
        {
          "sentence": 167,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 168,
          "input": "Вызов length_of_list([2, 3, 4], TailLength):   Список не пустой.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9964730143547058,
              "index": 17,
              "word": "Tail",
              "start": 32,
              "end": 36
            },
            {
              "entity": "I-MISC",
              "score": 0.9109582304954529,
              "index": 18,
              "word": "##L",
              "start": 36,
              "end": 37
            },
            {
              "entity": "I-MISC",
              "score": 0.9883109927177429,
              "index": 19,
              "word": "##engt",
              "start": 37,
              "end": 41
            },
            {
              "entity": "I-MISC",
              "score": 0.9841885566711426,
              "index": 20,
              "word": "##h",
              "start": 41,
              "end": 42
            }
          ]
        },
        {
          "sentence": 169,
          "input": " Первый элемент – 2, хвост списка – [3, 4].",
          "output": []
        },
        {
          "sentence": 170,
          "input": " Вызываем length_of_list([3, 4], TailLength).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9958166480064392,
              "index": 17,
              "word": "Tail",
              "start": 34,
              "end": 38
            },
            {
              "entity": "I-MISC",
              "score": 0.8979370594024658,
              "index": 18,
              "word": "##L",
              "start": 38,
              "end": 39
            },
            {
              "entity": "I-MISC",
              "score": 0.9904651641845703,
              "index": 19,
              "word": "##engt",
              "start": 39,
              "end": 43
            },
            {
              "entity": "I-MISC",
              "score": 0.9887760877609253,
              "index": 20,
              "word": "##h",
              "start": 43,
              "end": 44
            }
          ]
        },
        {
          "sentence": 171,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 172,
          "input": "Вызов length_of_list([3, 4], TailLength):   Список не пустой.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9968752861022949,
              "index": 15,
              "word": "Tail",
              "start": 29,
              "end": 33
            },
            {
              "entity": "I-MISC",
              "score": 0.9320309162139893,
              "index": 16,
              "word": "##L",
              "start": 33,
              "end": 34
            },
            {
              "entity": "I-MISC",
              "score": 0.9911975264549255,
              "index": 17,
              "word": "##engt",
              "start": 34,
              "end": 38
            },
            {
              "entity": "I-MISC",
              "score": 0.9888896942138672,
              "index": 18,
              "word": "##h",
              "start": 38,
              "end": 39
            }
          ]
        },
        {
          "sentence": 173,
          "input": " Первый элемент – 3, хвост списка – [4].",
          "output": []
        },
        {
          "sentence": 174,
          "input": " Вызываем length_of_list([4], TailLength).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9955428242683411,
              "index": 15,
              "word": "Tail",
              "start": 31,
              "end": 35
            },
            {
              "entity": "I-MISC",
              "score": 0.8947755694389343,
              "index": 16,
              "word": "##L",
              "start": 35,
              "end": 36
            },
            {
              "entity": "I-MISC",
              "score": 0.991306722164154,
              "index": 17,
              "word": "##engt",
              "start": 36,
              "end": 40
            },
            {
              "entity": "I-MISC",
              "score": 0.98914635181427,
              "index": 18,
              "word": "##h",
              "start": 40,
              "end": 41
            }
          ]
        },
        {
          "sentence": 175,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 176,
          "input": "Вызов length_of_list([4], TailLength):   Список не пустой.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9964674711227417,
              "index": 13,
              "word": "Tail",
              "start": 26,
              "end": 30
            },
            {
              "entity": "I-MISC",
              "score": 0.9215965867042542,
              "index": 14,
              "word": "##L",
              "start": 30,
              "end": 31
            },
            {
              "entity": "I-MISC",
              "score": 0.9911953210830688,
              "index": 15,
              "word": "##engt",
              "start": 31,
              "end": 35
            },
            {
              "entity": "I-MISC",
              "score": 0.9890478253364563,
              "index": 16,
              "word": "##h",
              "start": 35,
              "end": 36
            }
          ]
        },
        {
          "sentence": 177,
          "input": " Первый элемент – 4, хвост списка – [].",
          "output": []
        },
        {
          "sentence": 178,
          "input": " Вызываем length_of_list([], TailLength).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943429231643677,
              "index": 14,
              "word": "Tail",
              "start": 30,
              "end": 34
            },
            {
              "entity": "I-MISC",
              "score": 0.8290183544158936,
              "index": 15,
              "word": "##L",
              "start": 34,
              "end": 35
            },
            {
              "entity": "I-MISC",
              "score": 0.9891917109489441,
              "index": 16,
              "word": "##engt",
              "start": 35,
              "end": 39
            },
            {
              "entity": "I-MISC",
              "score": 0.9864213466644287,
              "index": 17,
              "word": "##h",
              "start": 39,
              "end": 40
            }
          ]
        },
        {
          "sentence": 179,
          "input": "5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9932518601417542,
              "index": 1,
              "word": "5",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 180,
          "input": "Вызов length_of_list([], TailLength):   Пустой список.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9885722398757935,
              "index": 12,
              "word": "Tail",
              "start": 25,
              "end": 29
            },
            {
              "entity": "I-MISC",
              "score": 0.857260525226593,
              "index": 13,
              "word": "##L",
              "start": 29,
              "end": 30
            },
            {
              "entity": "I-MISC",
              "score": 0.9722104668617249,
              "index": 14,
              "word": "##engt",
              "start": 30,
              "end": 34
            },
            {
              "entity": "I-MISC",
              "score": 0.9587640166282654,
              "index": 15,
              "word": "##h",
              "start": 34,
              "end": 35
            }
          ]
        },
        {
          "sentence": 181,
          "input": " Возвращаем 0 (длина пустого списка).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.973347008228302,
              "index": 6,
              "word": "0",
              "start": 13,
              "end": 14
            }
          ]
        },
        {
          "sentence": 182,
          "input": "Теперь Prolog возвращается по рекурсии (обратный ход):  6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9971242547035217,
              "index": 4,
              "word": "Pro",
              "start": 7,
              "end": 10
            },
            {
              "entity": "I-MISC",
              "score": 0.9795291423797607,
              "index": 5,
              "word": "##log",
              "start": 10,
              "end": 13
            }
          ]
        },
        {
          "sentence": 183,
          "input": "Возвращаемся из вызова length_of_list([4], TailLength):   Длина хвоста [] равна 0, так что TailLength = 0.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9847655296325684,
              "index": 20,
              "word": "Tail",
              "start": 43,
              "end": 47
            },
            {
              "entity": "I-MISC",
              "score": 0.7711878418922424,
              "index": 21,
              "word": "##L",
              "start": 47,
              "end": 48
            },
            {
              "entity": "I-MISC",
              "score": 0.9555584788322449,
              "index": 22,
              "word": "##engt",
              "start": 48,
              "end": 52
            },
            {
              "entity": "I-MISC",
              "score": 0.9168385863304138,
              "index": 23,
              "word": "##h",
              "start": 52,
              "end": 53
            },
            {
              "entity": "B-MISC",
              "score": 0.9692654609680176,
              "index": 38,
              "word": "Tail",
              "start": 92,
              "end": 96
            },
            {
              "entity": "I-MISC",
              "score": 0.7783675789833069,
              "index": 39,
              "word": "##L",
              "start": 96,
              "end": 97
            },
            {
              "entity": "I-MISC",
              "score": 0.9135124087333679,
              "index": 40,
              "word": "##engt",
              "start": 97,
              "end": 101
            },
            {
              "entity": "I-MISC",
              "score": 0.7448027729988098,
              "index": 41,
              "word": "##h",
              "start": 101,
              "end": 102
            }
          ]
        },
        {
          "sentence": 184,
          "input": " Длина списка [4] равна 0 + 1 = 1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.797866940498352,
              "index": 5,
              "word": "[",
              "start": 15,
              "end": 16
            }
          ]
        },
        {
          "sentence": 185,
          "input": "Возвращаем Length = 1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.894750714302063,
              "index": 6,
              "word": "Len",
              "start": 11,
              "end": 14
            },
            {
              "entity": "I-MISC",
              "score": 0.979123592376709,
              "index": 7,
              "word": "##gth",
              "start": 14,
              "end": 17
            }
          ]
        },
        {
          "sentence": 186,
          "input": "7.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9930568933486938,
              "index": 1,
              "word": "7",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 187,
          "input": "Возвращаемся из вызова length_of_list([3, 4], TailLength):   Длина хвоста [4] равна 1, так что TailLength = 1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9873600602149963,
              "index": 22,
              "word": "Tail",
              "start": 46,
              "end": 50
            },
            {
              "entity": "I-MISC",
              "score": 0.8220179080963135,
              "index": 23,
              "word": "##L",
              "start": 50,
              "end": 51
            },
            {
              "entity": "I-MISC",
              "score": 0.9624050259590149,
              "index": 24,
              "word": "##engt",
              "start": 51,
              "end": 55
            },
            {
              "entity": "I-MISC",
              "score": 0.9230866432189941,
              "index": 25,
              "word": "##h",
              "start": 55,
              "end": 56
            },
            {
              "entity": "B-MISC",
              "score": 0.9704896807670593,
              "index": 41,
              "word": "Tail",
              "start": 96,
              "end": 100
            },
            {
              "entity": "I-MISC",
              "score": 0.788798451423645,
              "index": 42,
              "word": "##L",
              "start": 100,
              "end": 101
            },
            {
              "entity": "I-MISC",
              "score": 0.9183312654495239,
              "index": 43,
              "word": "##engt",
              "start": 101,
              "end": 105
            },
            {
              "entity": "I-MISC",
              "score": 0.7523655295372009,
              "index": 44,
              "word": "##h",
              "start": 105,
              "end": 106
            }
          ]
        },
        {
          "sentence": 188,
          "input": " Длина списка [3, 4] равна 1 + 1 = 2.",
          "output": []
        },
        {
          "sentence": 189,
          "input": "Возвращаем Length = 2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8880199790000916,
              "index": 6,
              "word": "Len",
              "start": 11,
              "end": 14
            },
            {
              "entity": "I-MISC",
              "score": 0.978588342666626,
              "index": 7,
              "word": "##gth",
              "start": 14,
              "end": 17
            }
          ]
        },
        {
          "sentence": 190,
          "input": "8.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9933180809020996,
              "index": 1,
              "word": "8",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 191,
          "input": "Возвращаемся из вызова length_of_list([2, 3, 4], TailLength):   Длина хвоста [3, 4] равна 2, так что TailLength = 2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9882160425186157,
              "index": 24,
              "word": "Tail",
              "start": 49,
              "end": 53
            },
            {
              "entity": "I-MISC",
              "score": 0.8148942589759827,
              "index": 25,
              "word": "##L",
              "start": 53,
              "end": 54
            },
            {
              "entity": "I-MISC",
              "score": 0.9595335721969604,
              "index": 26,
              "word": "##engt",
              "start": 54,
              "end": 58
            },
            {
              "entity": "I-MISC",
              "score": 0.9159038066864014,
              "index": 27,
              "word": "##h",
              "start": 58,
              "end": 59
            },
            {
              "entity": "B-MISC",
              "score": 0.9687288999557495,
              "index": 45,
              "word": "Tail",
              "start": 102,
              "end": 106
            },
            {
              "entity": "I-MISC",
              "score": 0.7805904150009155,
              "index": 46,
              "word": "##L",
              "start": 106,
              "end": 107
            },
            {
              "entity": "I-MISC",
              "score": 0.9121443033218384,
              "index": 47,
              "word": "##engt",
              "start": 107,
              "end": 111
            },
            {
              "entity": "I-MISC",
              "score": 0.7634731531143188,
              "index": 48,
              "word": "##h",
              "start": 111,
              "end": 112
            }
          ]
        },
        {
          "sentence": 192,
          "input": " Длина списка [2, 3, 4] равна 2 + 1 = 3.",
          "output": []
        },
        {
          "sentence": 193,
          "input": "Возвращаем Length = 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8689623475074768,
              "index": 6,
              "word": "Len",
              "start": 11,
              "end": 14
            },
            {
              "entity": "I-MISC",
              "score": 0.9751614332199097,
              "index": 7,
              "word": "##gth",
              "start": 14,
              "end": 17
            }
          ]
        },
        {
          "sentence": 194,
          "input": "9.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9885252118110657,
              "index": 1,
              "word": "9",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 195,
          "input": "Возвращаемся из вызова length_of_list([1, 2, 3, 4], Length):   Длина хвоста [2, 3, 4] равна 3, так что TailLength = 3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.621472954750061,
              "index": 26,
              "word": "Len",
              "start": 52,
              "end": 55
            },
            {
              "entity": "B-MISC",
              "score": 0.940709114074707,
              "index": 47,
              "word": "Tail",
              "start": 104,
              "end": 108
            },
            {
              "entity": "I-MISC",
              "score": 0.7709056735038757,
              "index": 48,
              "word": "##L",
              "start": 108,
              "end": 109
            },
            {
              "entity": "I-MISC",
              "score": 0.8211098313331604,
              "index": 49,
              "word": "##engt",
              "start": 109,
              "end": 113
            },
            {
              "entity": "I-MISC",
              "score": 0.6617677211761475,
              "index": 50,
              "word": "##h",
              "start": 113,
              "end": 114
            }
          ]
        },
        {
          "sentence": 196,
          "input": " Длина списка [1, 2, 3, 4] равна 3 + 1 = 4.",
          "output": []
        },
        {
          "sentence": 197,
          "input": "Возвращаем Length = 4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8893832564353943,
              "index": 6,
              "word": "Len",
              "start": 11,
              "end": 14
            },
            {
              "entity": "I-MISC",
              "score": 0.9802194237709045,
              "index": 7,
              "word": "##gth",
              "start": 14,
              "end": 17
            }
          ]
        },
        {
          "sentence": 198,
          "input": "В SWI-Prolog также есть встроенный предикат length/2, который делает то же самое:",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.967877209186554,
              "index": 2,
              "word": "SW",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.7944260239601135,
              "index": 3,
              "word": "##I",
              "start": 4,
              "end": 5
            },
            {
              "entity": "B-MISC",
              "score": 0.8606356382369995,
              "index": 5,
              "word": "Pro",
              "start": 6,
              "end": 9
            },
            {
              "entity": "I-MISC",
              "score": 0.9450319409370422,
              "index": 6,
              "word": "##log",
              "start": 9,
              "end": 12
            }
          ]
        }
      ]
    },
    {
      "file_id": 3,
      "type": "PDF",
      "samples": [
        {
          "sentence": 0,
          "input": "1  Лекция 9  9.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.666511595249176,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.9761508703231812,
              "index": 2,
              "word": "Ле",
              "start": 3,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.5341469645500183,
              "index": 3,
              "word": "##кция",
              "start": 5,
              "end": 9
            }
          ]
        },
        {
          "sentence": 1,
          "input": "РЕШЕНИЕ ЗАДАЧ ПОИСКА И ПРИНЯТИЯ РЕШЕНИЙ В PROLOG – РАБОТА С ГРАФАМИ .................................. 1  9.1.1.",
          "output": []
        },
        {
          "sentence": 2,
          "input": "ПОИСК ПУТИ В ГРАФЕ ............................................................................................................................................ 1  9.1.2.",
          "output": [
            {
              "entity": "B-ORG",
              "score": 0.5883584022521973,
              "index": 11,
              "word": "Г",
              "start": 13,
              "end": 14
            },
            {
              "entity": "I-ORG",
              "score": 0.39564186334609985,
              "index": 13,
              "word": "##А",
              "start": 15,
              "end": 16
            },
            {
              "entity": "I-ORG",
              "score": 0.6331725120544434,
              "index": 14,
              "word": "##Ф",
              "start": 16,
              "end": 17
            }
          ]
        },
        {
          "sentence": 3,
          "input": "ПОИСК КРАТЧАЙШЕГО ПУТИ В ГРАФЕ ....................................................................................................................... 2  9.1.3.",
          "output": [
            {
              "entity": "B-ORG",
              "score": 0.2612007260322571,
              "index": 21,
              "word": "Г",
              "start": 25,
              "end": 26
            }
          ]
        },
        {
          "sentence": 4,
          "input": "МИНИМАЛЬНЫЙ ПУТЬ В ГРАФЕ С УЧЁТОМ ВЕСОВ РЁБЕР.",
          "output": []
        },
        {
          "sentence": 5,
          "input": "АЛГОРИТМ ДЕЙКСТРЫ ............................................................ 5  9.1.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8389841914176941,
              "index": 1,
              "word": "А",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.5416820645332336,
              "index": 2,
              "word": "##Л",
              "start": 1,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.5981613993644714,
              "index": 9,
              "word": "Д",
              "start": 9,
              "end": 10
            },
            {
              "entity": "B-MISC",
              "score": 0.2885156273841858,
              "index": 10,
              "word": "##Е",
              "start": 10,
              "end": 11
            },
            {
              "entity": "I-MISC",
              "score": 0.35084205865859985,
              "index": 12,
              "word": "##КС",
              "start": 12,
              "end": 14
            }
          ]
        },
        {
          "sentence": 6,
          "input": "ОПРЕДЕЛЕНИЕ СВЯЗНОСТИ ГРАФА ......................................................................................................................... 10  9.1.5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.442869633436203,
              "index": 21,
              "word": "Г",
              "start": 22,
              "end": 23
            }
          ]
        },
        {
          "sentence": 7,
          "input": "РЕШЕНИЕ ЗАДАЧ МАРШРУТИЗАЦИИ ...................................................................................................................... 10    9.1.",
          "output": []
        },
        {
          "sentence": 8,
          "input": "Решение задач поиска и принятия решений в Prolog – работа с  графами  Решение задач поиска и принятия решений в контексте графов в SWI-Prolog обычно  включает использование различных методов  поиска и анализа структуры графа.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9738487005233765,
              "index": 12,
              "word": "Pro",
              "start": 42,
              "end": 45
            },
            {
              "entity": "I-MISC",
              "score": 0.9295840263366699,
              "index": 13,
              "word": "##log",
              "start": 45,
              "end": 48
            },
            {
              "entity": "B-MISC",
              "score": 0.628608226776123,
              "index": 37,
              "word": "SW",
              "start": 131,
              "end": 133
            },
            {
              "entity": "I-MISC",
              "score": 0.5658919215202332,
              "index": 38,
              "word": "##I",
              "start": 133,
              "end": 134
            },
            {
              "entity": "B-MISC",
              "score": 0.7937219738960266,
              "index": 40,
              "word": "Pro",
              "start": 135,
              "end": 138
            },
            {
              "entity": "I-MISC",
              "score": 0.9130381941795349,
              "index": 41,
              "word": "##log",
              "start": 138,
              "end": 141
            }
          ]
        },
        {
          "sentence": 9,
          "input": "Основные  задачи, которые можно решать с использованием графов, включают:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9666901230812073,
              "index": 11,
              "word": "граф",
              "start": 56,
              "end": 60
            }
          ]
        },
        {
          "sentence": 10,
          "input": "Поиск в графах (например, поиск пути между вершинами),  2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5073071122169495,
              "index": 4,
              "word": "графа",
              "start": 8,
              "end": 13
            }
          ]
        },
        {
          "sentence": 11,
          "input": "Нахождение кратчайшего пути  (например, с использованием алгоритма поиска в  ширину),  3.",
          "output": []
        },
        {
          "sentence": 12,
          "input": "Определение связности графа (например, поиск компоненты связности),  4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8575214743614197,
              "index": 6,
              "word": "графа",
              "start": 22,
              "end": 27
            }
          ]
        },
        {
          "sentence": 13,
          "input": "Решение задач маршрутизации  (например, нахождение оптимальных маршрутов в  сетях).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9833252429962158,
              "index": 3,
              "word": "маршрут",
              "start": 14,
              "end": 21
            },
            {
              "entity": "B-MISC",
              "score": 0.6002055406570435,
              "index": 4,
              "word": "##изации",
              "start": 21,
              "end": 27
            }
          ]
        },
        {
          "sentence": 14,
          "input": "Пролог идеально подходит для решения таких задач, поскольку он использует  обратный поиск  (backtracking), который естественным образом поддерживает перебор всех  возможных путей и решений.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.998457670211792,
              "index": 1,
              "word": "Про",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.9817191958427429,
              "index": 2,
              "word": "##лог",
              "start": 3,
              "end": 6
            }
          ]
        },
        {
          "sentence": 15,
          "input": "9.1.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9946788549423218,
              "index": 1,
              "word": "9",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 16,
          "input": "Поиск пути в графе  Пример 9.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9796648025512695,
              "index": 7,
              "word": "При",
              "start": 20,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.9729472398757935,
              "index": 8,
              "word": "##мер",
              "start": 23,
              "end": 26
            }
          ]
        },
        {
          "sentence": 17,
          "input": "Пусть дан граф:    Этот граф неориентированный (связи (ребра) между вершинами не имеют  направления) и невзвешенный (все пути между вершинами считаются равнозначными по  стоимости или расстоянию).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9164002537727356,
              "index": 5,
              "word": "граф",
              "start": 10,
              "end": 14
            }
          ]
        },
        {
          "sentence": 18,
          "input": "Представим граф набором фактов, определяющих наличие рёбер между вершинами.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9872475862503052,
              "index": 4,
              "word": "граф",
              "start": 11,
              "end": 15
            }
          ]
        },
        {
          "sentence": 19,
          "input": "a   b   c  d   e  2    path(X, Y, [X, Y]) : - edge(X, Y).",
          "output": []
        },
        {
          "sentence": 20,
          "input": "Это правило утверждает, что если существует ребро от вершины  X к вершине Y (то есть, факт edge(X, Y)), то путь между X и Y состоит из двух вершин: X и Y.  Затем мы определяем рекурсивную часть, которая ищет путь через промежуточные вершины:  path(X, Y, [X | Path]) :- edge(X, Z), path(Z, Y, Path).",
          "output": []
        },
        {
          "sentence": 21,
          "input": "Здесь X – начальная вершина, Y – конечная, а Z – промежуточная вершина, через которую  можно попасть в Y. Алгоритм работает так:  1.",
          "output": []
        },
        {
          "sentence": 22,
          "input": "Ищем ребро от X в Z (то есть, проверяем факт edge(X, Z)).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.49628788232803345,
              "index": 7,
              "word": "X",
              "start": 14,
              "end": 15
            },
            {
              "entity": "B-MISC",
              "score": 0.7627090215682983,
              "index": 9,
              "word": "Z",
              "start": 18,
              "end": 19
            },
            {
              "entity": "B-MISC",
              "score": 0.5148527026176453,
              "index": 23,
              "word": "Z",
              "start": 53,
              "end": 54
            }
          ]
        },
        {
          "sentence": 23,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 24,
          "input": "Рекурсивно ищем путь от Z до Y.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.46696749329566956,
              "index": 9,
              "word": "Z",
              "start": 24,
              "end": 25
            },
            {
              "entity": "B-LOC",
              "score": 0.41944748163223267,
              "index": 11,
              "word": "Y",
              "start": 29,
              "end": 30
            }
          ]
        },
        {
          "sentence": 25,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 26,
          "input": "Объединяем вершину X с найденным путём от Z до Y.  Спросим – есть ли путь между а и е?",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.7296875715255737,
              "index": 9,
              "word": "X",
              "start": 19,
              "end": 20
            }
          ]
        },
        {
          "sentence": 27,
          "input": "Перебрав все варианты – найдено 2 пути.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8958436250686646,
              "index": 7,
              "word": "–",
              "start": 22,
              "end": 23
            }
          ]
        },
        {
          "sentence": 28,
          "input": "9.1.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9933277368545532,
              "index": 1,
              "word": "9",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 29,
          "input": "Поиск кратчайшего пути в графе  Для нахождения кратчайшего пути, мы можем использовать поиск всех путей и выбор  минимального.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.657245934009552,
              "index": 9,
              "word": "граф",
              "start": 25,
              "end": 29
            }
          ]
        },
        {
          "sentence": 30,
          "input": "Кратчайший путь  для нашего графа  – это путь за минимальное количество  шагов.",
          "output": []
        },
        {
          "sentence": 31,
          "input": "Добавим в наш код следующие правила:     3    Чтобы найти все пути между двумя вершинами, используем findall/3:   findall(P, path(X, Y, P), Paths) создаёт список всех путей P от X до Y.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.4777858257293701,
              "index": 45,
              "word": "Path",
              "start": 141,
              "end": 145
            },
            {
              "entity": "I-MISC",
              "score": 0.5870096683502197,
              "index": 46,
              "word": "##s",
              "start": 145,
              "end": 146
            }
          ]
        },
        {
          "sentence": 32,
          "input": " Paths – это список всех путей, найденных с помощью правила path/3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9967760443687439,
              "index": 1,
              "word": "Path",
              "start": 2,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.9671311974525452,
              "index": 2,
              "word": "##s",
              "start": 6,
              "end": 7
            }
          ]
        },
        {
          "sentence": 33,
          "input": " Затем мы используем предикат min_list/2, чтобы выбрать кратчайший путь из списка  путей.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9964386224746704,
              "index": 9,
              "word": "min",
              "start": 31,
              "end": 34
            },
            {
              "entity": "I-MISC",
              "score": 0.7644916772842407,
              "index": 11,
              "word": "list",
              "start": 35,
              "end": 39
            }
          ]
        },
        {
          "sentence": 34,
          "input": " Если в списке путей только один путь, он и есть минимальный.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5206212997436523,
              "index": 4,
              "word": "пут",
              "start": 16,
              "end": 19
            }
          ]
        },
        {
          "sentence": 35,
          "input": " В случае нескольких путей сравниваются их длины с помощью length/2, который  возвращает количество элементов в пути.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.986730694770813,
              "index": 15,
              "word": "length",
              "start": 60,
              "end": 66
            }
          ]
        },
        {
          "sentence": 36,
          "input": " Если длина пути X меньше или равна длине пути Y, то минимальный путь продолжает  искать среди путей, начиная с X. В противном случае минимальный путь продолжает  искать среди путей, начиная с Y.    Результат:    Для нахождения кратчайшего пути в неориентированном и невзвешенном графе   лучше всего подходит алгоритм обхода в ширину (BFS) .",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5162175297737122,
              "index": 98,
              "word": "BF",
              "start": 336,
              "end": 338
            }
          ]
        },
        {
          "sentence": 37,
          "input": "Он гарантирует нахождение  кратчайшего пути, так как обходит вершины в порядке увеличения их расстояния от  начальной вершины.",
          "output": []
        },
        {
          "sentence": 38,
          "input": "4  Поиск в ширину  (Breadth-First Search, BFS)  – это алгоритм обхода графа, который  начинает с начальной вершины и исследует её соседей, затем переходит к соседям этих  соседей, и так далее, пока не посетит все достижимые вершины.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9739432334899902,
              "index": 9,
              "word": "Br",
              "start": 20,
              "end": 22
            },
            {
              "entity": "I-MISC",
              "score": 0.9759066700935364,
              "index": 10,
              "word": "##ead",
              "start": 22,
              "end": 25
            },
            {
              "entity": "I-MISC",
              "score": 0.9773179292678833,
              "index": 11,
              "word": "##th",
              "start": 25,
              "end": 27
            },
            {
              "entity": "I-MISC",
              "score": 0.9502013325691223,
              "index": 12,
              "word": "-",
              "start": 27,
              "end": 28
            },
            {
              "entity": "I-MISC",
              "score": 0.984243631362915,
              "index": 13,
              "word": "First",
              "start": 28,
              "end": 33
            },
            {
              "entity": "I-MISC",
              "score": 0.9746774435043335,
              "index": 14,
              "word": "Search",
              "start": 34,
              "end": 40
            }
          ]
        },
        {
          "sentence": 39,
          "input": "Сначала обходятся все вершины, находящиеся на расстоянии 1 (соседи начальной  вершины).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5467596054077148,
              "index": 18,
              "word": "1",
              "start": 57,
              "end": 58
            }
          ]
        },
        {
          "sentence": 40,
          "input": "Затем – все вершины на расстоянии 2, 3 и так далее.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.40152058005332947,
              "index": 2,
              "word": "–",
              "start": 6,
              "end": 7
            }
          ]
        },
        {
          "sentence": 41,
          "input": "Для отслеживания порядка посещения  используется структура данных « очередь».",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5962139964103699,
              "index": 13,
              "word": "очередь",
              "start": 68,
              "end": 75
            }
          ]
        },
        {
          "sentence": 42,
          "input": "Вершины добавляются в очередь по мере их обнаружения, а обрабатываются в порядке  добавления.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9720678329467773,
              "index": 1,
              "word": "В",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.9657121896743774,
              "index": 2,
              "word": "##ер",
              "start": 1,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.9130363464355469,
              "index": 3,
              "word": "##шины",
              "start": 3,
              "end": 7
            }
          ]
        },
        {
          "sentence": 43,
          "input": "Рассмотрим на нашем примере:  Шаги  выполнения  Очередь: queue Посещённые:  visited  Пути: paths Соседи  1 [a] 0 {a:[a]}   Обрабатываем а  2 Удаляем a из очереди:  queue=[]  Добавляем a в  посещённые:  visited={a}   Соседи a: [b,d]  3 Добавляем соседей в  очередь:   b: queue=[b],  d: queue=[b,d].",
          "output": []
        },
        {
          "sentence": 44,
          "input": "paths[b]=[a,b]  paths[d]=[a,d]    Обрабатываем b  4 Удаляем b из очереди:  queue=[d]  Добавляем b в  посещённые:  visited={a,b}   Соседи b: [a,c]  5 Добавляем соседей в  очередь:  c: queue=[d,c],  a уже посещён, не  добавляем.",
          "output": []
        },
        {
          "sentence": 45,
          "input": "paths[c]=[a,b,c]    Обрабатываем d  6 Удаляем d из очереди:  queue = [c]  Добавляем d в  посещённые:   Соседи d: [a,c,e]   5  visited={a,b,d}  7 Добавляем соседей в  очередь:  e: queue=[c,e],   a и c уже посещены, не  добавляем.",
          "output": []
        },
        {
          "sentence": 46,
          "input": "paths[e]=[a,d,e]    Обрабатываем c  8 Удаляем c из очереди:  queue=[e]  Добавляем c в  посещённые:  visited={a,b,c,d}   Соседи c: [b,d]  9 Все соседи (b и d) уже  посещены, ничего не  добавляем.",
          "output": []
        },
        {
          "sentence": 47,
          "input": "Обрабатываем e  10 Удаляем e из очереди:  queue=[]  Добавляем e в  посещённые:  visited={a,b,c,d,e}   Соседи e: [d]  11 Очередь пуста, алгоритм  завершён.",
          "output": []
        },
        {
          "sentence": 48,
          "input": "Результат: кратчайшие пути до всех вершин:   a → a: [a]   a → b: [a,b]   a → c: [a,b,c]   a → d: [a,d]   a → e: [a,d,e]    Если граф невзвешенный, BFS гарантированно находит кратчайший путь от  начальной вершины до любой другой.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9631616473197937,
              "index": 72,
              "word": "BF",
              "start": 152,
              "end": 154
            },
            {
              "entity": "I-MISC",
              "score": 0.8882995843887329,
              "index": 73,
              "word": "##S",
              "start": 154,
              "end": 155
            }
          ]
        },
        {
          "sentence": 49,
          "input": "Breadth-First Search_BFS_Example_9_1.pl – код, реализующий BFS.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8991860151290894,
              "index": 1,
              "word": "Br",
              "start": 0,
              "end": 2
            },
            {
              "entity": "I-MISC",
              "score": 0.8067299723625183,
              "index": 2,
              "word": "##ead",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.8213991522789001,
              "index": 3,
              "word": "##th",
              "start": 5,
              "end": 7
            },
            {
              "entity": "I-MISC",
              "score": 0.4996102452278137,
              "index": 4,
              "word": "-",
              "start": 7,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.8354223966598511,
              "index": 5,
              "word": "First",
              "start": 8,
              "end": 13
            },
            {
              "entity": "I-MISC",
              "score": 0.80681973695755,
              "index": 6,
              "word": "Search",
              "start": 14,
              "end": 20
            },
            {
              "entity": "I-MISC",
              "score": 0.6142703890800476,
              "index": 9,
              "word": "##S",
              "start": 23,
              "end": 24
            },
            {
              "entity": "B-MISC",
              "score": 0.6299649477005005,
              "index": 28,
              "word": "BF",
              "start": 59,
              "end": 61
            }
          ]
        },
        {
          "sentence": 50,
          "input": "9.1.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9928305745124817,
              "index": 1,
              "word": "9",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 51,
          "input": "Минимальный путь в графе с учётом весов рёбер.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9230048060417175,
              "index": 6,
              "word": "граф",
              "start": 19,
              "end": 23
            }
          ]
        },
        {
          "sentence": 52,
          "input": "Алгоритм Дейкстры  Пример 9.2.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.7578228116035461,
              "index": 3,
              "word": "Де",
              "start": 9,
              "end": 11
            },
            {
              "entity": "I-PER",
              "score": 0.5486101508140564,
              "index": 4,
              "word": "##йк",
              "start": 11,
              "end": 13
            },
            {
              "entity": "I-MISC",
              "score": 0.4247068762779236,
              "index": 5,
              "word": "##стры",
              "start": 13,
              "end": 17
            }
          ]
        },
        {
          "sentence": 53,
          "input": "Модифицируем наш граф, добавив веса к ребрам.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.95304936170578,
              "index": 7,
              "word": "наш",
              "start": 13,
              "end": 16
            },
            {
              "entity": "B-MISC",
              "score": 0.6721943616867065,
              "index": 8,
              "word": "граф",
              "start": 17,
              "end": 21
            }
          ]
        },
        {
          "sentence": 54,
          "input": "Для нахождения кратчайшего пути в графе наиболее распространенные алгоритмы:  a   b   c  d   e  2   3  1  10  4  6   Алгоритм Дейкстры.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5199052095413208,
              "index": 34,
              "word": "Ал",
              "start": 118,
              "end": 120
            },
            {
              "entity": "I-MISC",
              "score": 0.5561479926109314,
              "index": 35,
              "word": "##горитм",
              "start": 120,
              "end": 126
            },
            {
              "entity": "B-PER",
              "score": 0.6151757836341858,
              "index": 36,
              "word": "Де",
              "start": 127,
              "end": 129
            },
            {
              "entity": "I-PER",
              "score": 0.5041967034339905,
              "index": 37,
              "word": "##йк",
              "start": 129,
              "end": 131
            },
            {
              "entity": "I-MISC",
              "score": 0.46495264768600464,
              "index": 38,
              "word": "##стры",
              "start": 131,
              "end": 135
            }
          ]
        },
        {
          "sentence": 55,
          "input": "Применим для графов с неотрицательными весами ребер.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9629185199737549,
              "index": 5,
              "word": "граф",
              "start": 13,
              "end": 17
            }
          ]
        },
        {
          "sentence": 56,
          "input": " Алгоритм Беллмана-Форда.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.9822161197662354,
              "index": 3,
              "word": "Б",
              "start": 11,
              "end": 12
            },
            {
              "entity": "I-PER",
              "score": 0.8051921725273132,
              "index": 4,
              "word": "##ел",
              "start": 12,
              "end": 14
            },
            {
              "entity": "I-PER",
              "score": 0.8919392228126526,
              "index": 5,
              "word": "##л",
              "start": 14,
              "end": 15
            },
            {
              "entity": "I-PER",
              "score": 0.7916654944419861,
              "index": 6,
              "word": "##мана",
              "start": 15,
              "end": 19
            },
            {
              "entity": "B-PER",
              "score": 0.9974774718284607,
              "index": 8,
              "word": "Ф",
              "start": 20,
              "end": 21
            },
            {
              "entity": "I-PER",
              "score": 0.977384626865387,
              "index": 9,
              "word": "##орда",
              "start": 21,
              "end": 25
            }
          ]
        },
        {
          "sentence": 57,
          "input": "Подходит для графов с отрицательными весами ребер  (при условии отсутствия циклов отрицательного веса).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9334108233451843,
              "index": 4,
              "word": "граф",
              "start": 13,
              "end": 17
            }
          ]
        },
        {
          "sentence": 58,
          "input": " Алгоритм Флойда -Уоршалла.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.9845231771469116,
              "index": 3,
              "word": "Ф",
              "start": 11,
              "end": 12
            },
            {
              "entity": "I-PER",
              "score": 0.9479914903640747,
              "index": 4,
              "word": "##лой",
              "start": 12,
              "end": 15
            },
            {
              "entity": "I-PER",
              "score": 0.7222692370414734,
              "index": 5,
              "word": "##да",
              "start": 15,
              "end": 17
            },
            {
              "entity": "B-PER",
              "score": 0.9963598847389221,
              "index": 7,
              "word": "У",
              "start": 19,
              "end": 20
            },
            {
              "entity": "I-PER",
              "score": 0.9163682460784912,
              "index": 8,
              "word": "##ор",
              "start": 20,
              "end": 22
            },
            {
              "entity": "I-PER",
              "score": 0.9912540316581726,
              "index": 9,
              "word": "##шал",
              "start": 22,
              "end": 25
            },
            {
              "entity": "I-PER",
              "score": 0.833549439907074,
              "index": 10,
              "word": "##ла",
              "start": 25,
              "end": 27
            }
          ]
        },
        {
          "sentence": 59,
          "input": "Для нахождения кратчайших путей между всеми  парами вершин.",
          "output": []
        },
        {
          "sentence": 60,
          "input": "Найдем минимальный путь в графе с учетом весов его ребер.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8473052978515625,
              "index": 8,
              "word": "граф",
              "start": 26,
              "end": 30
            }
          ]
        },
        {
          "sentence": 61,
          "input": "Будем использовать  алгоритм Дейкстры.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.8379571437835693,
              "index": 6,
              "word": "Де",
              "start": 29,
              "end": 31
            },
            {
              "entity": "I-PER",
              "score": 0.6340177655220032,
              "index": 7,
              "word": "##йк",
              "start": 31,
              "end": 33
            },
            {
              "entity": "I-PER",
              "score": 0.38252195715904236,
              "index": 8,
              "word": "##стры",
              "start": 33,
              "end": 37
            }
          ]
        },
        {
          "sentence": 62,
          "input": "Алгоритм Дейкстры  – это один из самых известных алгоритмов для нахождения  кратчайших путей в графе с неотрицательными весами рёбер.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.6904450058937073,
              "index": 3,
              "word": "Де",
              "start": 9,
              "end": 11
            }
          ]
        },
        {
          "sentence": 63,
          "input": "Он работает, начиная с  начальной вершины, и на каждом шаге выбирает вершину с минимальной стоимостью пути,  обновляя расстояния для всех её соседей.",
          "output": []
        },
        {
          "sentence": 64,
          "input": "Алгоритм гарантирует, что когда вершина будет  обработана, найдено её минимальное расстояние.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9590301513671875,
              "index": 1,
              "word": "Ал",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 65,
          "input": "1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9720537662506104,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 66,
          "input": "Инициализируем расстояния до всех вершин как бесконечность, кроме начальной  вершины, для которой расстояние равно 0.",
          "output": []
        },
        {
          "sentence": 67,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 68,
          "input": "Помещаем все вершины в очередь с приоритетом (или другую структуру данных).",
          "output": []
        },
        {
          "sentence": 69,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 70,
          "input": "Пока очередь не пуста:  a. Извлекаем вершину с минимальным расстоянием.",
          "output": []
        },
        {
          "sentence": 71,
          "input": "b. Для каждого соседа этой вершины:   Если новое расстояние до соседа меньше текущего, обновляем его.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5115200281143188,
              "index": 1,
              "word": "b",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 72,
          "input": " Помещаем соседа в очередь с обновлённым расстоянием.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.719561755657196,
              "index": 5,
              "word": "со",
              "start": 11,
              "end": 13
            }
          ]
        },
        {
          "sentence": 73,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 74,
          "input": "Алгоритм завершается, когда все вершины обработаны.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9561108946800232,
              "index": 1,
              "word": "Ал",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 75,
          "input": "Рассмотрим для нашего примера.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9343193769454956,
              "index": 7,
              "word": "наш",
              "start": 15,
              "end": 18
            }
          ]
        },
        {
          "sentence": 76,
          "input": "1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9720537662506104,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 77,
          "input": "Инициализация:  o Граф: вершины a, b, c, d, e с весами рёбер.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.6548814177513123,
              "index": 7,
              "word": "Г",
              "start": 18,
              "end": 19
            },
            {
              "entity": "I-PER",
              "score": 0.5387015342712402,
              "index": 8,
              "word": "##раф",
              "start": 19,
              "end": 22
            }
          ]
        },
        {
          "sentence": 78,
          "input": "o Начальная вершина — a. Устанавливаем начальные расстояния:   a = 0 (расстояние до себя равняется 0),   остальные вершины: b = ∞, c = ∞, d = ∞, e = ∞.",
          "output": []
        },
        {
          "sentence": 79,
          "input": "o Очередь: [(a, 0), (b, ∞), (c, ∞), (d, ∞), (e, ∞)].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.628967821598053,
              "index": 2,
              "word": "О",
              "start": 2,
              "end": 3
            }
          ]
        },
        {
          "sentence": 80,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 81,
          "input": "Шаг 1: Обработка вершины a (с минимальным расстоянием 0):  o Извлекаем вершину a (стоимость 0).",
          "output": []
        },
        {
          "sentence": 82,
          "input": "o Соседи a:   b: расстояние через a = 0 + 2 = 2.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.4568589925765991,
              "index": 2,
              "word": "Со",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-LOC",
              "score": 0.413543164730072,
              "index": 3,
              "word": "##се",
              "start": 4,
              "end": 6
            }
          ]
        },
        {
          "sentence": 83,
          "input": "Обновляем b: b = 2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9450908899307251,
              "index": 5,
              "word": "b",
              "start": 10,
              "end": 11
            }
          ]
        },
        {
          "sentence": 84,
          "input": " d: расстояние через a = 0 + 10 = 10.",
          "output": []
        },
        {
          "sentence": 85,
          "input": "Обновляем d: d = 10.  o Новые расстояния: a = 0, b = 2, c = ∞, d = 10, e = ∞.",
          "output": []
        },
        {
          "sentence": 86,
          "input": "o Очередь с приоритетом: [(b, 2), (d, 10), (c, ∞), (e, ∞)].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7997277975082397,
              "index": 2,
              "word": "О",
              "start": 2,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.4780855178833008,
              "index": 4,
              "word": "##ред",
              "start": 5,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.43178245425224304,
              "index": 5,
              "word": "##ь",
              "start": 8,
              "end": 9
            }
          ]
        },
        {
          "sentence": 87,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 88,
          "input": "Шаг 2: Обработка вершины b (с минимальным расстоянием 2):  o Извлекаем вершину b (стоимость 2).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5974376797676086,
              "index": 10,
              "word": "b",
              "start": 25,
              "end": 26
            }
          ]
        },
        {
          "sentence": 89,
          "input": "o Соседи b:  7   c: расстояние через b = 2 + 3 = 5.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.6165953874588013,
              "index": 2,
              "word": "Со",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-PER",
              "score": 0.42129626870155334,
              "index": 3,
              "word": "##се",
              "start": 4,
              "end": 6
            },
            {
              "entity": "I-PER",
              "score": 0.472698450088501,
              "index": 4,
              "word": "##ди",
              "start": 6,
              "end": 8
            }
          ]
        },
        {
          "sentence": 90,
          "input": "Обновляем c: c = 5.  o Новые расстояния: a = 0, b = 2, c = 5, d = 10, e = ∞.",
          "output": []
        },
        {
          "sentence": 91,
          "input": "o Очередь с приоритетом: [(c, 5), (d, 10), (e, ∞)].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.885948896408081,
              "index": 2,
              "word": "О",
              "start": 2,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.47926172614097595,
              "index": 3,
              "word": "##че",
              "start": 3,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.7021192908287048,
              "index": 4,
              "word": "##ред",
              "start": 5,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.7039768099784851,
              "index": 5,
              "word": "##ь",
              "start": 8,
              "end": 9
            }
          ]
        },
        {
          "sentence": 92,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 93,
          "input": "Шаг 3: Обработка вершины c (с минимальным расстоянием 5):  o Извлекаем вершину c (стоимость 5).",
          "output": []
        },
        {
          "sentence": 94,
          "input": "o Соседи c:   d: расстояние через c = 5 + 1 = 6.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.5171242356300354,
              "index": 2,
              "word": "Со",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-PER",
              "score": 0.3492257595062256,
              "index": 3,
              "word": "##се",
              "start": 4,
              "end": 6
            },
            {
              "entity": "I-PER",
              "score": 0.3761996328830719,
              "index": 4,
              "word": "##ди",
              "start": 6,
              "end": 8
            }
          ]
        },
        {
          "sentence": 95,
          "input": "Обновляем d: d = 6.  o Новые расстояния: a = 0, b = 2, c = 5, d = 6, e = ∞.",
          "output": []
        },
        {
          "sentence": 96,
          "input": "o Очередь с приоритетом: [(d, 6), (e, ∞)].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9320062398910522,
              "index": 2,
              "word": "О",
              "start": 2,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.5199838280677795,
              "index": 3,
              "word": "##че",
              "start": 3,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.792549192905426,
              "index": 4,
              "word": "##ред",
              "start": 5,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.7655491828918457,
              "index": 5,
              "word": "##ь",
              "start": 8,
              "end": 9
            }
          ]
        },
        {
          "sentence": 97,
          "input": "5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9932518601417542,
              "index": 1,
              "word": "5",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 98,
          "input": "Шаг 4: Обработка вершины d (с минимальным расстоянием 6):  o Извлекаем вершину d (стоимость 6).",
          "output": []
        },
        {
          "sentence": 99,
          "input": "o Соседи d:   e: расстояние через d = 6 + 4 = 10.  o Новые расстояния: a = 0, b = 2, c = 5, d = 6, e = 10.  o Очередь с приоритетом: [(e, 10)].",
          "output": []
        },
        {
          "sentence": 100,
          "input": "6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.983711302280426,
              "index": 1,
              "word": "6",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 101,
          "input": "Шаг 5: Обработка вершины e (с минимальным расстоянием 10):  o Извлекаем вершину e (стоимость 10).",
          "output": []
        },
        {
          "sentence": 102,
          "input": "o У вершины e нет соседей для обработки, так как мы уже прошли все возможные пути.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.4742101728916168,
              "index": 6,
              "word": "e",
              "start": 12,
              "end": 13
            }
          ]
        },
        {
          "sentence": 103,
          "input": " Алгоритм завершён.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.987355649471283,
              "index": 1,
              "word": "Ал",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.8750576376914978,
              "index": 2,
              "word": "##горитм",
              "start": 4,
              "end": 10
            }
          ]
        },
        {
          "sentence": 104,
          "input": "Кратчайшие расстояния от вершины a до всех остальных:  o a → a: стоимость 0.  o a → b: стоимость 2.  o a → c: стоимость 5.  o a → d: стоимость 6.  o a → e: стоимость 10.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8355764150619507,
              "index": 13,
              "word": "a",
              "start": 33,
              "end": 34
            }
          ]
        },
        {
          "sentence": 105,
          "input": "Обновление расстояний на каждом шаге:  Вершина Расстояние Очередь с приоритетом  a 0 [(a, 0), (b, ∞), (c, ∞), (d, ∞), (e, ∞)]  b 2 [(b, 2), (d, 10), (c, ∞), (e, ∞)]  c 5 [(c, 5), (d, 10), (e, ∞)]  d 6 [(d, 6), (e, ∞)]  e 10 [(e, 10)]    Алгоритм Дейкстры гарантирует, что мы всегда получаем минимальную стоимость  пути к каждой вершине, начиная с начальной.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.9300101399421692,
              "index": 134,
              "word": "Де",
              "start": 246,
              "end": 248
            },
            {
              "entity": "I-PER",
              "score": 0.7195752859115601,
              "index": 135,
              "word": "##йк",
              "start": 248,
              "end": 250
            }
          ]
        },
        {
          "sentence": 106,
          "input": "Реализуем поиск на SWI-Prolog.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9848657846450806,
              "index": 8,
              "word": "SW",
              "start": 19,
              "end": 21
            },
            {
              "entity": "I-MISC",
              "score": 0.9194316267967224,
              "index": 9,
              "word": "##I",
              "start": 21,
              "end": 22
            },
            {
              "entity": "B-MISC",
              "score": 0.9356157183647156,
              "index": 11,
              "word": "Pro",
              "start": 23,
              "end": 26
            },
            {
              "entity": "I-MISC",
              "score": 0.981055498123169,
              "index": 12,
              "word": "##log",
              "start": 26,
              "end": 29
            }
          ]
        },
        {
          "sentence": 107,
          "input": "Как будет работать программа:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8120935559272766,
              "index": 4,
              "word": "программа",
              "start": 19,
              "end": 28
            }
          ]
        },
        {
          "sentence": 108,
          "input": "Программа начинает с начальной вершины и расстояния 0.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9337572455406189,
              "index": 1,
              "word": "Про",
              "start": 0,
              "end": 3
            },
            {
              "entity": "B-MISC",
              "score": 0.905423641204834,
              "index": 15,
              "word": "0",
              "start": 52,
              "end": 53
            }
          ]
        },
        {
          "sentence": 109,
          "input": "8  2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9913272261619568,
              "index": 1,
              "word": "8",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 110,
          "input": "Она ищет все соседние вершины и добавляет их в очередь с соответствующими  расстояниями.",
          "output": []
        },
        {
          "sentence": 111,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 112,
          "input": "Алгоритм обрабатывает вершины по очереди, начиная с вершины с минимальной  стоимостью, и обновляет расстояния для её соседей.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.980842113494873,
              "index": 1,
              "word": "Ал",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 113,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 114,
          "input": "Когда достигается конечная вершина, программа возвращает путь и стоимость.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5326133966445923,
              "index": 4,
              "word": "кон",
              "start": 18,
              "end": 21
            },
            {
              "entity": "B-MISC",
              "score": 0.69401615858078,
              "index": 11,
              "word": "программа",
              "start": 36,
              "end": 45
            }
          ]
        },
        {
          "sentence": 115,
          "input": "Эти рёбра описывают связи между вершинами, и для каждого ребра указан его вес  (стоимость).",
          "output": []
        },
        {
          "sentence": 116,
          "input": "Этот предикат является точкой входа в программу.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8371397256851196,
              "index": 2,
              "word": "преди",
              "start": 5,
              "end": 10
            },
            {
              "entity": "B-MISC",
              "score": 0.8901524543762207,
              "index": 11,
              "word": "программу",
              "start": 38,
              "end": 47
            }
          ]
        },
        {
          "sentence": 117,
          "input": "Он вызывает рекурсивный предикат  dijkstra/5, передавая ему начальную вершину Start, конечную вершину End, пустой список для  посещённых вершин, и начальную очередь с элементом, содержащим начальную вершину с  расстоянием 0 и путём, состоящим только из неё.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9144216775894165,
              "index": 24,
              "word": "Start",
              "start": 78,
              "end": 83
            },
            {
              "entity": "B-MISC",
              "score": 0.8661853075027466,
              "index": 32,
              "word": "End",
              "start": 102,
              "end": 105
            }
          ]
        },
        {
          "sentence": 118,
          "input": "После завершения рекурсивной части, путь инвертируется ( reverse/2), так как в  процессе работы мы строим путь в обратном порядке.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7800622582435608,
              "index": 16,
              "word": "reverse",
              "start": 57,
              "end": 64
            }
          ]
        },
        {
          "sentence": 119,
          "input": "[[Start, 0, [Start]]] – очередь с одним элементом, где:   Start – это начальная вершина.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7359892725944519,
              "index": 3,
              "word": "Start",
              "start": 2,
              "end": 7
            },
            {
              "entity": "B-MISC",
              "score": 0.7207244038581848,
              "index": 8,
              "word": "Start",
              "start": 13,
              "end": 18
            },
            {
              "entity": "B-MISC",
              "score": 0.8927823305130005,
              "index": 21,
              "word": "Start",
              "start": 59,
              "end": 64
            }
          ]
        },
        {
          "sentence": 120,
          "input": " 0 – стоимость пути до этой вершины (начальная вершина имеет стоимость 0).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9116479754447937,
              "index": 1,
              "word": "0",
              "start": 2,
              "end": 3
            }
          ]
        },
        {
          "sentence": 121,
          "input": " [Start] – путь, состоящий только из начальной вершины.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9537394642829895,
              "index": 2,
              "word": "Start",
              "start": 3,
              "end": 8
            }
          ]
        },
        {
          "sentence": 122,
          "input": "По мере выполнения алгоритма эта очередь будет обновляться.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8670920133590698,
              "index": 5,
              "word": "ал",
              "start": 19,
              "end": 21
            }
          ]
        },
        {
          "sentence": 123,
          "input": "Когда алгоритм находит конечную вершину End, он завершает выполнение и  возвращает найденный путь Path и его стоимость Cost.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9184450507164001,
              "index": 12,
              "word": "End",
              "start": 40,
              "end": 43
            },
            {
              "entity": "B-MISC",
              "score": 0.7959648966789246,
              "index": 29,
              "word": "Path",
              "start": 98,
              "end": 102
            },
            {
              "entity": "B-MISC",
              "score": 0.5354940891265869,
              "index": 34,
              "word": "Cost",
              "start": 119,
              "end": 123
            }
          ]
        },
        {
          "sentence": 124,
          "input": "[[End, Cost, Path] | _] – это текущий элемент очереди, где:   End – текущая вершина, которая совпадает с конечной.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5988773703575134,
              "index": 3,
              "word": "End",
              "start": 2,
              "end": 5
            },
            {
              "entity": "B-MISC",
              "score": 0.7590869069099426,
              "index": 5,
              "word": "Cost",
              "start": 7,
              "end": 11
            },
            {
              "entity": "B-MISC",
              "score": 0.7182919979095459,
              "index": 7,
              "word": "Path",
              "start": 13,
              "end": 17
            },
            {
              "entity": "B-MISC",
              "score": 0.49744677543640137,
              "index": 23,
              "word": "End",
              "start": 63,
              "end": 66
            }
          ]
        },
        {
          "sentence": 125,
          "input": " Cost – стоимость пути до этой вершины.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7471985816955566,
              "index": 1,
              "word": "Cost",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 126,
          "input": " Path – путь от начальной до конечной вершины.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8872147798538208,
              "index": 1,
              "word": "Path",
              "start": 2,
              "end": 6
            }
          ]
        },
        {
          "sentence": 127,
          "input": "Этот случай завершает рекурсию, так как мы достигли конечной вершины, и путь  найден.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9399098753929138,
              "index": 6,
              "word": "реку",
              "start": 22,
              "end": 26
            }
          ]
        },
        {
          "sentence": 128,
          "input": "9    Этот предикат реализует рекурсивный шаг алгоритма Дейкстры.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.9827715754508972,
              "index": 18,
              "word": "Де",
              "start": 55,
              "end": 57
            },
            {
              "entity": "I-PER",
              "score": 0.9155158400535583,
              "index": 19,
              "word": "##йк",
              "start": 57,
              "end": 59
            },
            {
              "entity": "I-PER",
              "score": 0.7396132946014404,
              "index": 20,
              "word": "##стры",
              "start": 59,
              "end": 63
            }
          ]
        },
        {
          "sentence": 129,
          "input": "Он выполняет  несколько важных операций:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5753839015960693,
              "index": 11,
              "word": "1",
              "start": 42,
              "end": 43
            }
          ]
        },
        {
          "sentence": 130,
          "input": "Извлечение вершины с минимальным расстоянием: [Node, D, PathSoFar] – извлекаем  вершину с минимальной стоимостью пути D и текущий путь PathSoFar.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5057181715965271,
              "index": 18,
              "word": "No",
              "start": 47,
              "end": 49
            },
            {
              "entity": "I-MISC",
              "score": 0.4039619266986847,
              "index": 19,
              "word": "##de",
              "start": 49,
              "end": 51
            },
            {
              "entity": "B-MISC",
              "score": 0.7171326279640198,
              "index": 23,
              "word": "Path",
              "start": 56,
              "end": 60
            },
            {
              "entity": "I-MISC",
              "score": 0.6475839018821716,
              "index": 24,
              "word": "##S",
              "start": 60,
              "end": 61
            },
            {
              "entity": "I-MISC",
              "score": 0.7200942039489746,
              "index": 25,
              "word": "##o",
              "start": 61,
              "end": 62
            },
            {
              "entity": "I-MISC",
              "score": 0.6408835649490356,
              "index": 26,
              "word": "##F",
              "start": 62,
              "end": 63
            },
            {
              "entity": "I-MISC",
              "score": 0.5672430396080017,
              "index": 27,
              "word": "##ar",
              "start": 63,
              "end": 65
            },
            {
              "entity": "B-MISC",
              "score": 0.7039809226989746,
              "index": 51,
              "word": "Path",
              "start": 135,
              "end": 139
            },
            {
              "entity": "I-MISC",
              "score": 0.771334707736969,
              "index": 52,
              "word": "##S",
              "start": 139,
              "end": 140
            },
            {
              "entity": "I-MISC",
              "score": 0.8298842906951904,
              "index": 53,
              "word": "##o",
              "start": 140,
              "end": 141
            },
            {
              "entity": "I-MISC",
              "score": 0.7946361303329468,
              "index": 54,
              "word": "##F",
              "start": 141,
              "end": 142
            },
            {
              "entity": "I-MISC",
              "score": 0.8019183278083801,
              "index": 55,
              "word": "##ar",
              "start": 142,
              "end": 144
            }
          ]
        },
        {
          "sentence": 131,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 132,
          "input": "Обработка соседей : находим все соседние вершины для текущей вершины Node с  помощью findall/3, добавляя вес рёбер к текущему расстоянию:    findall([Next, NewDist, [Next | PathSoFar]],           (edge(Node, Next, Weight),            \\+ member(Next, Visited),  % Проверяем, не посещена ли вершина           NewDist is D + Weight),           Neighbors).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.815909743309021,
              "index": 23,
              "word": "No",
              "start": 69,
              "end": 71
            },
            {
              "entity": "I-MISC",
              "score": 0.9256832003593445,
              "index": 24,
              "word": "##de",
              "start": 71,
              "end": 73
            },
            {
              "entity": "I-MISC",
              "score": 0.5443447232246399,
              "index": 54,
              "word": "Next",
              "start": 150,
              "end": 154
            },
            {
              "entity": "I-MISC",
              "score": 0.6800687313079834,
              "index": 56,
              "word": "New",
              "start": 156,
              "end": 159
            },
            {
              "entity": "I-MISC",
              "score": 0.9142270088195801,
              "index": 57,
              "word": "##D",
              "start": 159,
              "end": 160
            },
            {
              "entity": "I-MISC",
              "score": 0.8953754901885986,
              "index": 58,
              "word": "##ist",
              "start": 160,
              "end": 163
            },
            {
              "entity": "I-MISC",
              "score": 0.6016412377357483,
              "index": 61,
              "word": "Next",
              "start": 166,
              "end": 170
            },
            {
              "entity": "I-MISC",
              "score": 0.7387405037879944,
              "index": 63,
              "word": "Path",
              "start": 173,
              "end": 177
            },
            {
              "entity": "I-MISC",
              "score": 0.895969808101654,
              "index": 64,
              "word": "##S",
              "start": 177,
              "end": 178
            },
            {
              "entity": "I-MISC",
              "score": 0.8910679221153259,
              "index": 65,
              "word": "##o",
              "start": 178,
              "end": 179
            },
            {
              "entity": "I-MISC",
              "score": 0.8729416728019714,
              "index": 66,
              "word": "##F",
              "start": 179,
              "end": 180
            },
            {
              "entity": "I-MISC",
              "score": 0.8518126010894775,
              "index": 67,
              "word": "##ar",
              "start": 180,
              "end": 182
            },
            {
              "entity": "I-MISC",
              "score": 0.6737872362136841,
              "index": 74,
              "word": "No",
              "start": 202,
              "end": 204
            },
            {
              "entity": "I-MISC",
              "score": 0.7724308371543884,
              "index": 75,
              "word": "##de",
              "start": 204,
              "end": 206
            },
            {
              "entity": "I-MISC",
              "score": 0.6929399371147156,
              "index": 77,
              "word": "Next",
              "start": 208,
              "end": 212
            },
            {
              "entity": "I-MISC",
              "score": 0.6877328753471375,
              "index": 79,
              "word": "Wei",
              "start": 214,
              "end": 217
            },
            {
              "entity": "I-MISC",
              "score": 0.7158592343330383,
              "index": 80,
              "word": "##ght",
              "start": 217,
              "end": 220
            },
            {
              "entity": "I-MISC",
              "score": 0.6574974060058594,
              "index": 87,
              "word": "Next",
              "start": 244,
              "end": 248
            },
            {
              "entity": "I-MISC",
              "score": 0.6982754468917847,
              "index": 89,
              "word": "Vis",
              "start": 250,
              "end": 253
            },
            {
              "entity": "I-MISC",
              "score": 0.7471153736114502,
              "index": 90,
              "word": "##ited",
              "start": 253,
              "end": 257
            },
            {
              "entity": "I-MISC",
              "score": 0.588844895362854,
              "index": 107,
              "word": "New",
              "start": 307,
              "end": 310
            },
            {
              "entity": "I-MISC",
              "score": 0.8579415678977966,
              "index": 108,
              "word": "##D",
              "start": 310,
              "end": 311
            },
            {
              "entity": "I-MISC",
              "score": 0.8072682023048401,
              "index": 109,
              "word": "##ist",
              "start": 311,
              "end": 314
            },
            {
              "entity": "I-MISC",
              "score": 0.5303229689598083,
              "index": 111,
              "word": "D",
              "start": 318,
              "end": 319
            },
            {
              "entity": "I-MISC",
              "score": 0.5735988616943359,
              "index": 113,
              "word": "Wei",
              "start": 322,
              "end": 325
            },
            {
              "entity": "I-MISC",
              "score": 0.5848672986030579,
              "index": 114,
              "word": "##ght",
              "start": 325,
              "end": 328
            },
            {
              "entity": "I-MISC",
              "score": 0.7017127871513367,
              "index": 117,
              "word": "Nei",
              "start": 341,
              "end": 344
            },
            {
              "entity": "I-MISC",
              "score": 0.6949108242988586,
              "index": 118,
              "word": "##gh",
              "start": 344,
              "end": 346
            },
            {
              "entity": "I-MISC",
              "score": 0.7152295112609863,
              "index": 119,
              "word": "##bors",
              "start": 346,
              "end": 350
            }
          ]
        },
        {
          "sentence": 133,
          "input": "Здесь для каждого соседа Next мы вычисляем новый путь NewDist и добавляем  его в новый путь PathSoFar.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8320726752281189,
              "index": 7,
              "word": "Next",
              "start": 25,
              "end": 29
            },
            {
              "entity": "B-MISC",
              "score": 0.9559460282325745,
              "index": 16,
              "word": "New",
              "start": 54,
              "end": 57
            },
            {
              "entity": "I-MISC",
              "score": 0.835685133934021,
              "index": 17,
              "word": "##D",
              "start": 57,
              "end": 58
            },
            {
              "entity": "I-MISC",
              "score": 0.9206189513206482,
              "index": 18,
              "word": "##ist",
              "start": 58,
              "end": 61
            },
            {
              "entity": "B-MISC",
              "score": 0.9313828945159912,
              "index": 28,
              "word": "Path",
              "start": 92,
              "end": 96
            },
            {
              "entity": "I-MISC",
              "score": 0.8521432280540466,
              "index": 29,
              "word": "##S",
              "start": 96,
              "end": 97
            },
            {
              "entity": "I-MISC",
              "score": 0.8957727551460266,
              "index": 30,
              "word": "##o",
              "start": 97,
              "end": 98
            },
            {
              "entity": "I-MISC",
              "score": 0.9112246036529541,
              "index": 31,
              "word": "##F",
              "start": 98,
              "end": 99
            },
            {
              "entity": "I-MISC",
              "score": 0.9046820998191833,
              "index": 32,
              "word": "##ar",
              "start": 99,
              "end": 101
            }
          ]
        },
        {
          "sentence": 134,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 135,
          "input": "Добавление новых вершин в очередь: добавляем новые вершины в очередь Queue и  получаем новый список очереди NewQueue.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.987697184085846,
              "index": 21,
              "word": "Que",
              "start": 69,
              "end": 72
            },
            {
              "entity": "I-MISC",
              "score": 0.9932724237442017,
              "index": 22,
              "word": "##ue",
              "start": 72,
              "end": 74
            },
            {
              "entity": "B-MISC",
              "score": 0.984115481376648,
              "index": 32,
              "word": "New",
              "start": 108,
              "end": 111
            },
            {
              "entity": "I-MISC",
              "score": 0.931677520275116,
              "index": 33,
              "word": "##Q",
              "start": 111,
              "end": 112
            },
            {
              "entity": "I-MISC",
              "score": 0.9883960485458374,
              "index": 34,
              "word": "##ue",
              "start": 112,
              "end": 114
            },
            {
              "entity": "I-MISC",
              "score": 0.9897945523262024,
              "index": 35,
              "word": "##ue",
              "start": 114,
              "end": 116
            }
          ]
        },
        {
          "sentence": 136,
          "input": "4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943127632141113,
              "index": 1,
              "word": "4",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 137,
          "input": "Сортировка очереди : сортируем новый с писок очереди по стоимости пути D с  помощью sort/3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9693616032600403,
              "index": 25,
              "word": "D",
              "start": 71,
              "end": 72
            }
          ]
        },
        {
          "sentence": 138,
          "input": "Это позволяет гарантировать, что в следующий шаг будет выбрана  вершина с минимальной стоимостью.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6506983637809753,
              "index": 16,
              "word": "в",
              "start": 64,
              "end": 65
            }
          ]
        },
        {
          "sentence": 139,
          "input": "5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9932518601417542,
              "index": 1,
              "word": "5",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 140,
          "input": "Рекурсивный вызов : алгоритм продолжает обработку с обновлённой очередью и  списком посещённых вершин, пока не достигнет конечной вершины.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9965969920158386,
              "index": 1,
              "word": "Р",
              "start": 0,
              "end": 1
            },
            {
              "entity": "I-MISC",
              "score": 0.6166842579841614,
              "index": 2,
              "word": "##еку",
              "start": 1,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.8695545196533203,
              "index": 3,
              "word": "##рс",
              "start": 4,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.8541109561920166,
              "index": 4,
              "word": "##ивный",
              "start": 6,
              "end": 11
            },
            {
              "entity": "I-MISC",
              "score": 0.5377132296562195,
              "index": 5,
              "word": "вы",
              "start": 12,
              "end": 14
            },
            {
              "entity": "I-MISC",
              "score": 0.754565417766571,
              "index": 6,
              "word": "##зов",
              "start": 14,
              "end": 17
            }
          ]
        },
        {
          "sentence": 141,
          "input": "Найдем минимальный по стоимости путь между а и е.     Результат:   10    dijkstra_9_2.pl– код, реализующий алгоритм Дейкстры.",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.8250001668930054,
              "index": 41,
              "word": "Де",
              "start": 116,
              "end": 118
            },
            {
              "entity": "I-PER",
              "score": 0.5755937099456787,
              "index": 42,
              "word": "##йк",
              "start": 118,
              "end": 120
            },
            {
              "entity": "I-PER",
              "score": 0.3704773187637329,
              "index": 43,
              "word": "##стры",
              "start": 120,
              "end": 124
            }
          ]
        },
        {
          "sentence": 142,
          "input": "9.1.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9926636219024658,
              "index": 1,
              "word": "9",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 143,
          "input": "Определение связности графа   Определить связность графа  означает выяснить, можно ли добраться из одной  вершины графа до любой другой вершины (в рамках всей структуры графа или отдел ьных его  компонент).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6087139844894409,
              "index": 6,
              "word": "графа",
              "start": 22,
              "end": 27
            },
            {
              "entity": "B-MISC",
              "score": 0.6234351992607117,
              "index": 14,
              "word": "графа",
              "start": 51,
              "end": 56
            }
          ]
        },
        {
          "sentence": 144,
          "input": "Связность – это ключевая характеристика,  которая показывает, насколько  «цельно» соединены вершины графа.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5390439629554749,
              "index": 1,
              "word": "Св",
              "start": 0,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.7693756222724915,
              "index": 29,
              "word": "графа",
              "start": 100,
              "end": 105
            }
          ]
        },
        {
          "sentence": 145,
          "input": "Граф называется связным, если для любой пары вершин существует путь,  соединяющий их.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6014045476913452,
              "index": 1,
              "word": "Г",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 146,
          "input": "Существуют разные методы для определения связности графа, которые зависят от типа  графа (ориентированный или неориентированный) и конкретной задачи.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9585263133049011,
              "index": 11,
              "word": "графа",
              "start": 51,
              "end": 56
            },
            {
              "entity": "B-MISC",
              "score": 0.7592157125473022,
              "index": 19,
              "word": "графа",
              "start": 83,
              "end": 88
            }
          ]
        },
        {
          "sentence": 147,
          "input": "Алгоритмы обхода  графа   Ориентированный граф называется сильно связным, если для любой пары вершин u  и v существует путь от u к v и от v к u. Ориентированный граф называется слабо связным,  если, игнорируя направления рёбер, граф становится связным  Как определить связность графа?",
          "output": []
        },
        {
          "sentence": 148,
          "input": "1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9720537662506104,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 149,
          "input": "Для неориентированного графа:   Выполнить обход графа  из одной вершины.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5098486542701721,
              "index": 7,
              "word": "графа",
              "start": 23,
              "end": 28
            },
            {
              "entity": "B-MISC",
              "score": 0.7496998906135559,
              "index": 14,
              "word": "графа",
              "start": 49,
              "end": 54
            }
          ]
        },
        {
          "sentence": 150,
          "input": " Если после обхода все вершины достигнуты, граф связный; иначе – несвязный.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.47304248809814453,
              "index": 14,
              "word": "граф",
              "start": 44,
              "end": 48
            }
          ]
        },
        {
          "sentence": 151,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 152,
          "input": "Для ориентированного графа:   Для проверки слабой связности: игнорируем направления рёбер и проверяем  связность, как в неориентированном графе.",
          "output": []
        },
        {
          "sentence": 153,
          "input": " Для проверки сильной связности: убедиться, что каждая вершина достижима из  любой другой.",
          "output": []
        },
        {
          "sentence": 154,
          "input": "   9.1.5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9918587803840637,
              "index": 1,
              "word": "9",
              "start": 4,
              "end": 5
            }
          ]
        },
        {
          "sentence": 155,
          "input": "Решение задач маршрутизации   Пример задачи маршрутизации может быть следующим: поиск кратчайшего  маршрута в сети дорог с учётом ограни чений по времени и стоимости.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5396855473518372,
              "index": 3,
              "word": "маршрут",
              "start": 14,
              "end": 21
            }
          ]
        },
        {
          "sentence": 156,
          "input": "В этой задаче  необходимо найти маршрут от начальной точки до конечной с учетом весов рёбер (стоимости)  и ограничений (например, времени или пропускной способности дороги).",
          "output": []
        },
        {
          "sentence": 157,
          "input": "11  Пример 9.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9422633647918701,
              "index": 1,
              "word": "11",
              "start": 0,
              "end": 2
            },
            {
              "entity": "B-MISC",
              "score": 0.8435312509536743,
              "index": 2,
              "word": "При",
              "start": 4,
              "end": 7
            }
          ]
        },
        {
          "sentence": 158,
          "input": "У нас есть сеть дорог между несколькими городами, где:   Каждое из  рёбер представляет дорогу между двумя городами с определённой  стоимостью и временем поездки.",
          "output": []
        },
        {
          "sentence": 159,
          "input": " Необходимо найти маршрут с минимальной стоимостью между двумя городами, но с  ограничением по времени, которое можно потратить на поездку.",
          "output": []
        },
        {
          "sentence": 160,
          "input": "Данные:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8910706639289856,
              "index": 1,
              "word": "Да",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 161,
          "input": "Города: Москва, Санкт-Петербург, Казань, Нижний Новгород, Екатеринбург.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9998892545700073,
              "index": 4,
              "word": "Москва",
              "start": 8,
              "end": 14
            },
            {
              "entity": "B-LOC",
              "score": 0.9998873472213745,
              "index": 6,
              "word": "Санкт",
              "start": 16,
              "end": 21
            },
            {
              "entity": "I-LOC",
              "score": 0.9997081160545349,
              "index": 7,
              "word": "-",
              "start": 21,
              "end": 22
            },
            {
              "entity": "I-LOC",
              "score": 0.9995866417884827,
              "index": 8,
              "word": "Петербург",
              "start": 22,
              "end": 31
            },
            {
              "entity": "B-LOC",
              "score": 0.9998854398727417,
              "index": 10,
              "word": "Казань",
              "start": 33,
              "end": 39
            },
            {
              "entity": "B-LOC",
              "score": 0.9998797178268433,
              "index": 12,
              "word": "Нижни",
              "start": 41,
              "end": 46
            },
            {
              "entity": "I-LOC",
              "score": 0.9997438788414001,
              "index": 13,
              "word": "##й",
              "start": 46,
              "end": 47
            },
            {
              "entity": "I-LOC",
              "score": 0.9997057318687439,
              "index": 14,
              "word": "Новгород",
              "start": 48,
              "end": 56
            },
            {
              "entity": "B-LOC",
              "score": 0.9998887777328491,
              "index": 16,
              "word": "Екатеринбург",
              "start": 58,
              "end": 70
            }
          ]
        },
        {
          "sentence": 162,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 163,
          "input": "Дороги:   Москва → Казань: стоимость 2000 рублей, время 8 часов.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9998568296432495,
              "index": 5,
              "word": "Москва",
              "start": 11,
              "end": 17
            },
            {
              "entity": "B-LOC",
              "score": 0.9998409748077393,
              "index": 7,
              "word": "Казань",
              "start": 20,
              "end": 26
            }
          ]
        },
        {
          "sentence": 164,
          "input": " Москва → Екатеринбург: стоимость 2500 рублей, время 16 часов (не будет  выбран, так как превышает ограничение).",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9739675521850586,
              "index": 1,
              "word": "Москва",
              "start": 2,
              "end": 8
            },
            {
              "entity": "B-LOC",
              "score": 0.9991976618766785,
              "index": 3,
              "word": "Екатеринбург",
              "start": 11,
              "end": 23
            }
          ]
        },
        {
          "sentence": 165,
          "input": " Казань → Нижний Новгород: стоимость 1000 рублей, время 4 часа.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9913758635520935,
              "index": 1,
              "word": "Казань",
              "start": 2,
              "end": 8
            },
            {
              "entity": "B-LOC",
              "score": 0.9998608827590942,
              "index": 3,
              "word": "Нижни",
              "start": 11,
              "end": 16
            },
            {
              "entity": "I-LOC",
              "score": 0.9993510842323303,
              "index": 4,
              "word": "##й",
              "start": 16,
              "end": 17
            },
            {
              "entity": "I-LOC",
              "score": 0.9995823502540588,
              "index": 5,
              "word": "Новгород",
              "start": 18,
              "end": 26
            }
          ]
        },
        {
          "sentence": 166,
          "input": " Казань → Екатеринбург: стоимость 1500 рублей, время 9 часов.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9957276582717896,
              "index": 1,
              "word": "Казань",
              "start": 2,
              "end": 8
            },
            {
              "entity": "B-LOC",
              "score": 0.9993491768836975,
              "index": 3,
              "word": "Екатеринбург",
              "start": 11,
              "end": 23
            }
          ]
        },
        {
          "sentence": 167,
          "input": " Нижний Новгород → Санкт-Петербург: стоимость 3000 рублей, время 7 часов.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.999230146408081,
              "index": 1,
              "word": "Нижни",
              "start": 2,
              "end": 7
            },
            {
              "entity": "I-LOC",
              "score": 0.9985516667366028,
              "index": 2,
              "word": "##й",
              "start": 7,
              "end": 8
            },
            {
              "entity": "I-LOC",
              "score": 0.9992806315422058,
              "index": 3,
              "word": "Новгород",
              "start": 9,
              "end": 17
            },
            {
              "entity": "B-LOC",
              "score": 0.9998331069946289,
              "index": 5,
              "word": "Санкт",
              "start": 20,
              "end": 25
            },
            {
              "entity": "I-LOC",
              "score": 0.9990822076797485,
              "index": 6,
              "word": "-",
              "start": 25,
              "end": 26
            },
            {
              "entity": "I-LOC",
              "score": 0.9990326166152954,
              "index": 7,
              "word": "Петербург",
              "start": 26,
              "end": 35
            }
          ]
        },
        {
          "sentence": 168,
          "input": " Екатеринбург → Санкт-Петербург: стоимость 4000 рублей, время 20 часов (не  будет выбран).",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.991564154624939,
              "index": 1,
              "word": "Екатеринбург",
              "start": 2,
              "end": 14
            },
            {
              "entity": "B-LOC",
              "score": 0.9998047947883606,
              "index": 3,
              "word": "Санкт",
              "start": 17,
              "end": 22
            },
            {
              "entity": "I-LOC",
              "score": 0.999018669128418,
              "index": 4,
              "word": "-",
              "start": 22,
              "end": 23
            },
            {
              "entity": "I-LOC",
              "score": 0.9974197149276733,
              "index": 5,
              "word": "Петербург",
              "start": 23,
              "end": 32
            }
          ]
        },
        {
          "sentence": 169,
          "input": " Москва → Санкт-Петербург: стоимость 15000 рублей, время 20 часов.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9848719239234924,
              "index": 1,
              "word": "Москва",
              "start": 2,
              "end": 8
            },
            {
              "entity": "B-LOC",
              "score": 0.9998282194137573,
              "index": 3,
              "word": "Санкт",
              "start": 11,
              "end": 16
            },
            {
              "entity": "I-LOC",
              "score": 0.9990857839584351,
              "index": 4,
              "word": "-",
              "start": 16,
              "end": 17
            },
            {
              "entity": "I-LOC",
              "score": 0.9984379410743713,
              "index": 5,
              "word": "Петербург",
              "start": 17,
              "end": 26
            }
          ]
        },
        {
          "sentence": 170,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 171,
          "input": "Ограничение: Максимальное время на поездку – 15 часов.",
          "output": []
        },
        {
          "sentence": 172,
          "input": "Цель: Необходимо найти маршрут от Москвы до Челябинска с минимальной стоимостью, но  с ограничением по времени в 20 часов.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.999828577041626,
              "index": 11,
              "word": "Москвы",
              "start": 34,
              "end": 40
            },
            {
              "entity": "B-LOC",
              "score": 0.9998441934585571,
              "index": 13,
              "word": "Ч",
              "start": 44,
              "end": 45
            },
            {
              "entity": "I-LOC",
              "score": 0.9933074116706848,
              "index": 14,
              "word": "##еля",
              "start": 45,
              "end": 48
            },
            {
              "entity": "I-LOC",
              "score": 0.9931041598320007,
              "index": 15,
              "word": "##бинск",
              "start": 48,
              "end": 53
            },
            {
              "entity": "I-LOC",
              "score": 0.9985231757164001,
              "index": 16,
              "word": "##а",
              "start": 53,
              "end": 54
            }
          ]
        },
        {
          "sentence": 173,
          "input": "Москва   Казань  Нижний  Новгород  Челябинск  Екатеринбург  2000 руб., 8 часов  1000 руб., 4 часа  2500 руб., 16 часов   1500 руб., 9 часов  3000 руб., 7 часов  4000 руб., 20 часов  15000 руб., 20 часов  12  Основной предикат: route_with_time_limit/4      Этот предикат инициирует поиск маршрута с заданного города Start в город End с  ограничением по времени MaxTime.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9117959141731262,
              "index": 1,
              "word": "Москва",
              "start": 0,
              "end": 6
            },
            {
              "entity": "B-LOC",
              "score": 0.953031063079834,
              "index": 2,
              "word": "Казань",
              "start": 9,
              "end": 15
            },
            {
              "entity": "B-LOC",
              "score": 0.9940444827079773,
              "index": 3,
              "word": "Нижни",
              "start": 17,
              "end": 22
            },
            {
              "entity": "I-LOC",
              "score": 0.9978905320167542,
              "index": 4,
              "word": "##й",
              "start": 22,
              "end": 23
            },
            {
              "entity": "I-LOC",
              "score": 0.9983172416687012,
              "index": 5,
              "word": "Новгород",
              "start": 25,
              "end": 33
            },
            {
              "entity": "B-LOC",
              "score": 0.9862499237060547,
              "index": 6,
              "word": "Ч",
              "start": 35,
              "end": 36
            },
            {
              "entity": "I-LOC",
              "score": 0.7927330732345581,
              "index": 7,
              "word": "##еля",
              "start": 36,
              "end": 39
            },
            {
              "entity": "I-LOC",
              "score": 0.9903759360313416,
              "index": 8,
              "word": "##бинск",
              "start": 39,
              "end": 44
            },
            {
              "entity": "B-LOC",
              "score": 0.9516692757606506,
              "index": 9,
              "word": "Екатеринбург",
              "start": 46,
              "end": 58
            },
            {
              "entity": "B-LOC",
              "score": 0.5544942021369934,
              "index": 91,
              "word": "Start",
              "start": 315,
              "end": 320
            },
            {
              "entity": "B-LOC",
              "score": 0.6468564867973328,
              "index": 94,
              "word": "End",
              "start": 329,
              "end": 332
            },
            {
              "entity": "I-MISC",
              "score": 0.5948532223701477,
              "index": 102,
              "word": "Max",
              "start": 360,
              "end": 363
            },
            {
              "entity": "I-MISC",
              "score": 0.9322358965873718,
              "index": 103,
              "word": "##T",
              "start": 363,
              "end": 364
            },
            {
              "entity": "I-MISC",
              "score": 0.9299941658973694,
              "index": 104,
              "word": "##ime",
              "start": 364,
              "end": 367
            }
          ]
        },
        {
          "sentence": 174,
          "input": "Он запускает вспомогательный предикат  route_with_time_limit/6, который работает с очередью путей и уже посещёнными городами.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9877185821533203,
              "index": 12,
              "word": "route",
              "start": 39,
              "end": 44
            },
            {
              "entity": "I-MISC",
              "score": 0.5465683937072754,
              "index": 14,
              "word": "with",
              "start": 45,
              "end": 49
            }
          ]
        },
        {
          "sentence": 175,
          "input": " Начальная очередь содержит только город Start, его стоимость и время равны 0, а путь  начинается с города Start.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5005037784576416,
              "index": 8,
              "word": "Start",
              "start": 42,
              "end": 47
            },
            {
              "entity": "B-LOC",
              "score": 0.5547496676445007,
              "index": 25,
              "word": "Start",
              "start": 108,
              "end": 113
            }
          ]
        },
        {
          "sentence": 176,
          "input": " После выполнения поиска, результат (путь и общая стоимость) будет возвращён в  обратном порядке, поэтому применяется reverse/2 для переворота пути.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9787558317184448,
              "index": 29,
              "word": "reverse",
              "start": 119,
              "end": 126
            }
          ]
        },
        {
          "sentence": 177,
          "input": "Базовый случай поиска (достигли конечного города)      Когда в очереди появляется путь, заканчивающийся в городе End, это означает, что  найден путь от Start до End.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9245012402534485,
              "index": 30,
              "word": "End",
              "start": 113,
              "end": 116
            },
            {
              "entity": "B-LOC",
              "score": 0.6797729730606079,
              "index": 40,
              "word": "Start",
              "start": 152,
              "end": 157
            },
            {
              "entity": "B-LOC",
              "score": 0.7734386920928955,
              "index": 42,
              "word": "End",
              "start": 161,
              "end": 164
            }
          ]
        },
        {
          "sentence": 178,
          "input": "В этом случае:   Если время пути ( Time) меньше или равно максимальному ограничению (MaxTime), то  путь является допустимым.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8706024289131165,
              "index": 9,
              "word": "Time",
              "start": 36,
              "end": 40
            },
            {
              "entity": "B-MISC",
              "score": 0.9912749528884888,
              "index": 23,
              "word": "Max",
              "start": 86,
              "end": 89
            },
            {
              "entity": "I-MISC",
              "score": 0.9662978053092957,
              "index": 24,
              "word": "##T",
              "start": 89,
              "end": 90
            },
            {
              "entity": "I-MISC",
              "score": 0.9865597486495972,
              "index": 25,
              "word": "##ime",
              "start": 90,
              "end": 93
            }
          ]
        },
        {
          "sentence": 179,
          "input": " Программа возвращает путь и его общую стоимость.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9943442344665527,
              "index": 1,
              "word": "Про",
              "start": 2,
              "end": 5
            },
            {
              "entity": "B-MISC",
              "score": 0.8975875973701477,
              "index": 2,
              "word": "##грамма",
              "start": 5,
              "end": 11
            },
            {
              "entity": "B-MISC",
              "score": 0.6070641279220581,
              "index": 7,
              "word": "путь",
              "start": 23,
              "end": 27
            }
          ]
        },
        {
          "sentence": 180,
          "input": "Рекурсивный случай (расширение очереди)      Этот случай выполняется, если текущий путь не заканчивается в End.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9894574284553528,
              "index": 31,
              "word": "End",
              "start": 107,
              "end": 110
            }
          ]
        },
        {
          "sentence": 181,
          "input": "Программа  продолжает искать все возможные соседние города для текущего города Node:   findall/3 находит все возможные соседние города ( Next), которые ещё не были  посещены (чтобы избежать циклов).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7658532857894897,
              "index": 23,
              "word": "No",
              "start": 79,
              "end": 81
            },
            {
              "entity": "I-MISC",
              "score": 0.8700556755065918,
              "index": 24,
              "word": "##de",
              "start": 81,
              "end": 83
            },
            {
              "entity": "B-MISC",
              "score": 0.6491402983665466,
              "index": 41,
              "word": "Next",
              "start": 138,
              "end": 142
            }
          ]
        },
        {
          "sentence": 182,
          "input": " Для каждого соседа Next вычисляется новая стоимость NewCost и новое время  NewTime (накопительные значения).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9214563965797424,
              "index": 6,
              "word": "Next",
              "start": 21,
              "end": 25
            },
            {
              "entity": "B-MISC",
              "score": 0.9705025553703308,
              "index": 14,
              "word": "New",
              "start": 54,
              "end": 57
            },
            {
              "entity": "I-MISC",
              "score": 0.8638902306556702,
              "index": 15,
              "word": "##C",
              "start": 57,
              "end": 58
            },
            {
              "entity": "I-MISC",
              "score": 0.9483033418655396,
              "index": 16,
              "word": "##ost",
              "start": 58,
              "end": 61
            },
            {
              "entity": "B-MISC",
              "score": 0.9707960486412048,
              "index": 20,
              "word": "New",
              "start": 77,
              "end": 80
            },
            {
              "entity": "I-MISC",
              "score": 0.9023982882499695,
              "index": 21,
              "word": "##T",
              "start": 80,
              "end": 81
            },
            {
              "entity": "I-MISC",
              "score": 0.9625872373580933,
              "index": 22,
              "word": "##ime",
              "start": 81,
              "end": 84
            }
          ]
        },
        {
          "sentence": 183,
          "input": " Проверяется, что новое время пути NewTime не превышает максимального  ограничения (MaxTime).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9928117394447327,
              "index": 9,
              "word": "New",
              "start": 36,
              "end": 39
            },
            {
              "entity": "I-MISC",
              "score": 0.9262318015098572,
              "index": 10,
              "word": "##T",
              "start": 39,
              "end": 40
            },
            {
              "entity": "I-MISC",
              "score": 0.9810219407081604,
              "index": 11,
              "word": "##ime",
              "start": 40,
              "end": 43
            },
            {
              "entity": "B-MISC",
              "score": 0.988681435585022,
              "index": 25,
              "word": "Max",
              "start": 85,
              "end": 88
            },
            {
              "entity": "I-MISC",
              "score": 0.889525294303894,
              "index": 26,
              "word": "##T",
              "start": 88,
              "end": 89
            },
            {
              "entity": "I-MISC",
              "score": 0.9795536994934082,
              "index": 27,
              "word": "##ime",
              "start": 89,
              "end": 92
            }
          ]
        },
        {
          "sentence": 184,
          "input": "13   Все возможные соседи добавляются в очередь как новые пути, где каждый путь  содержит новый город Next, обновлённую с тоимость и время, а также путь с  добавленным городом Next.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8458057045936584,
              "index": 24,
              "word": "Next",
              "start": 103,
              "end": 107
            },
            {
              "entity": "B-MISC",
              "score": 0.8351991176605225,
              "index": 44,
              "word": "Next",
              "start": 177,
              "end": 181
            }
          ]
        },
        {
          "sentence": 185,
          "input": "После этого очередь Queue обновляется:   Все новые возможные маршруты добавляются в конец очереди.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9978467226028442,
              "index": 4,
              "word": "Que",
              "start": 20,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.9968308806419373,
              "index": 5,
              "word": "##ue",
              "start": 23,
              "end": 25
            }
          ]
        },
        {
          "sentence": 186,
          "input": " Очередь сортируется по стоимости ( sort(2, @=<, NewQueue, SortedQueue)), чтобы  всегда обрабатывать путь с наименьшей стоимостью следующим.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9905343055725098,
              "index": 21,
              "word": "New",
              "start": 50,
              "end": 53
            },
            {
              "entity": "I-MISC",
              "score": 0.7468945980072021,
              "index": 22,
              "word": "##Q",
              "start": 53,
              "end": 54
            },
            {
              "entity": "I-MISC",
              "score": 0.9887762665748596,
              "index": 23,
              "word": "##ue",
              "start": 54,
              "end": 56
            },
            {
              "entity": "I-MISC",
              "score": 0.9904721975326538,
              "index": 24,
              "word": "##ue",
              "start": 56,
              "end": 58
            },
            {
              "entity": "B-MISC",
              "score": 0.9922643899917603,
              "index": 26,
              "word": "So",
              "start": 60,
              "end": 62
            },
            {
              "entity": "I-MISC",
              "score": 0.9629008173942566,
              "index": 27,
              "word": "##rte",
              "start": 62,
              "end": 65
            },
            {
              "entity": "I-MISC",
              "score": 0.9625099301338196,
              "index": 28,
              "word": "##d",
              "start": 65,
              "end": 66
            },
            {
              "entity": "I-MISC",
              "score": 0.8821317553520203,
              "index": 29,
              "word": "##Q",
              "start": 66,
              "end": 67
            },
            {
              "entity": "I-MISC",
              "score": 0.9881298542022705,
              "index": 30,
              "word": "##ue",
              "start": 67,
              "end": 69
            },
            {
              "entity": "I-MISC",
              "score": 0.9901505708694458,
              "index": 31,
              "word": "##ue",
              "start": 69,
              "end": 71
            }
          ]
        },
        {
          "sentence": 187,
          "input": "Затем выполняется рекурсивный вызов с обновлённой очередью путей и списком  посещённых городов.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8392464518547058,
              "index": 6,
              "word": "реку",
              "start": 18,
              "end": 22
            }
          ]
        },
        {
          "sentence": 188,
          "input": "Найдем маршрут от Москвы до Челябинска с минимальной стоимостью, но с  ограничением по времени в 20 часов:    Результат:      Шаги работы программы по поиску маршрута:  1.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.999736487865448,
              "index": 5,
              "word": "Москвы",
              "start": 18,
              "end": 24
            },
            {
              "entity": "B-LOC",
              "score": 0.999755322933197,
              "index": 7,
              "word": "Ч",
              "start": 28,
              "end": 29
            },
            {
              "entity": "I-LOC",
              "score": 0.9925922155380249,
              "index": 8,
              "word": "##еля",
              "start": 29,
              "end": 32
            },
            {
              "entity": "I-LOC",
              "score": 0.997936487197876,
              "index": 9,
              "word": "##бинск",
              "start": 32,
              "end": 37
            },
            {
              "entity": "I-LOC",
              "score": 0.99692302942276,
              "index": 10,
              "word": "##а",
              "start": 37,
              "end": 38
            }
          ]
        },
        {
          "sentence": 189,
          "input": "Инициализация: Программа начинает с города moscow.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8171289563179016,
              "index": 11,
              "word": "mos",
              "start": 43,
              "end": 46
            },
            {
              "entity": "I-MISC",
              "score": 0.35119056701660156,
              "index": 12,
              "word": "##co",
              "start": 46,
              "end": 48
            },
            {
              "entity": "I-MISC",
              "score": 0.33604365587234497,
              "index": 13,
              "word": "##w",
              "start": 48,
              "end": 49
            }
          ]
        },
        {
          "sentence": 190,
          "input": "В очереди появляется начальный путь:  [[moscow, 0, 0, [moscow]]].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5512447357177734,
              "index": 12,
              "word": "mos",
              "start": 40,
              "end": 43
            },
            {
              "entity": "I-MISC",
              "score": 0.3842073082923889,
              "index": 14,
              "word": "##w",
              "start": 45,
              "end": 46
            }
          ]
        },
        {
          "sentence": 191,
          "input": "2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9890444278717041,
              "index": 1,
              "word": "2",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 192,
          "input": "Первая итерация:   Программа извлекает путь с очереди: [moscow, 0, 0, [moscow]].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9857432246208191,
              "index": 6,
              "word": "Про",
              "start": 20,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.6268578767776489,
              "index": 7,
              "word": "##грамма",
              "start": 23,
              "end": 29
            }
          ]
        },
        {
          "sentence": 193,
          "input": " Программа ищет все соседние города из Москвы:   Казань: Стоимость = 2000, Время = 8, Путь = [moscow, kazan].",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9997250437736511,
              "index": 12,
              "word": "Москвы",
              "start": 40,
              "end": 46
            },
            {
              "entity": "B-LOC",
              "score": 0.9997209906578064,
              "index": 14,
              "word": "Казань",
              "start": 51,
              "end": 57
            }
          ]
        },
        {
          "sentence": 194,
          "input": " Екатеринбург: Стоимость = 2500, Время = 16, Путь = [moscow, ekaterinburg].",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.998028576374054,
              "index": 1,
              "word": "Екатеринбург",
              "start": 2,
              "end": 14
            }
          ]
        },
        {
          "sentence": 195,
          "input": " Челябинск: Стоимость = 15000, Время = 20, Путь = [moscow, chelyabinsk].",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.998503565788269,
              "index": 1,
              "word": "Ч",
              "start": 2,
              "end": 3
            },
            {
              "entity": "I-LOC",
              "score": 0.8606378436088562,
              "index": 2,
              "word": "##еля",
              "start": 3,
              "end": 6
            },
            {
              "entity": "I-LOC",
              "score": 0.9978682994842529,
              "index": 3,
              "word": "##бинск",
              "start": 6,
              "end": 11
            }
          ]
        },
        {
          "sentence": 196,
          "input": " Все пути добавляются в очередь.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8825331926345825,
              "index": 2,
              "word": "пути",
              "start": 6,
              "end": 10
            },
            {
              "entity": "B-MISC",
              "score": 0.7703606486320496,
              "index": 7,
              "word": "очередь",
              "start": 25,
              "end": 32
            }
          ]
        },
        {
          "sentence": 197,
          "input": "3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9937649965286255,
              "index": 1,
              "word": "3",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 198,
          "input": "Вторая итерация:   Программа извлекает путь с наименьшей стоимостью: [moscow, kazan, 2000, 8,  [moscow, kazan]].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9912949204444885,
              "index": 6,
              "word": "Про",
              "start": 20,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.7186062335968018,
              "index": 7,
              "word": "##грамма",
              "start": 23,
              "end": 29
            }
          ]
        },
        {
          "sentence": 199,
          "input": " Проверяется, не превышает ли новое время ограничения.",
          "output": []
        },
        {
          "sentence": 200,
          "input": "Так как оно не превышает,  продолжается поиск.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9752593040466309,
              "index": 13,
              "word": "по",
              "start": 40,
              "end": 42
            },
            {
              "entity": "B-MISC",
              "score": 0.9881765246391296,
              "index": 14,
              "word": "##иск",
              "start": 42,
              "end": 45
            }
          ]
        },
        {
          "sentence": 201,
          "input": "14  4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9927983283996582,
              "index": 1,
              "word": "14",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 202,
          "input": "Процесс продолжается до тех пор , пока не будет найден путь, который достигнет Челябинска  или других городов с минимальной стоимостью и временем, удовлетворяющим  ограничениям.",
          "output": [
            {
              "entity": "B-LOC",
              "score": 0.9998503923416138,
              "index": 23,
              "word": "Ч",
              "start": 79,
              "end": 80
            },
            {
              "entity": "I-LOC",
              "score": 0.9832592010498047,
              "index": 24,
              "word": "##еля",
              "start": 80,
              "end": 83
            },
            {
              "entity": "I-LOC",
              "score": 0.9971398115158081,
              "index": 25,
              "word": "##бинск",
              "start": 83,
              "end": 88
            },
            {
              "entity": "I-LOC",
              "score": 0.9992561936378479,
              "index": 26,
              "word": "##а",
              "start": 88,
              "end": 89
            }
          ]
        },
        {
          "sentence": 203,
          "input": "Route_Example_9_3.pl– код, реализующий поиск маршрута.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9980301260948181,
              "index": 1,
              "word": "Route",
              "start": 0,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.6579325199127197,
              "index": 2,
              "word": "_",
              "start": 5,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.9778043627738953,
              "index": 3,
              "word": "Ex",
              "start": 6,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.9804352521896362,
              "index": 4,
              "word": "##amp",
              "start": 8,
              "end": 11
            },
            {
              "entity": "I-MISC",
              "score": 0.9679620862007141,
              "index": 5,
              "word": "##le",
              "start": 11,
              "end": 13
            }
          ]
        }
      ]
    },
    {
      "file_id": 4,
      "type": "PDF",
      "samples": [
        {
          "sentence": 0,
          "input": "1  Лекция 8  8.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6240740418434143,
              "index": 1,
              "word": "1",
              "start": 0,
              "end": 1
            },
            {
              "entity": "B-MISC",
              "score": 0.9786738753318787,
              "index": 2,
              "word": "Ле",
              "start": 3,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.638603925704956,
              "index": 3,
              "word": "##кция",
              "start": 5,
              "end": 9
            }
          ]
        },
        {
          "sentence": 1,
          "input": "ИСПОЛЬЗОВАНИЕ СОСТАВНЫХ ТЕРМОВ В PROLOG ....................................................................................... 1  8.1.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7380402684211731,
              "index": 27,
              "word": "PR",
              "start": 33,
              "end": 35
            },
            {
              "entity": "I-MISC",
              "score": 0.7533352375030518,
              "index": 28,
              "word": "##OL",
              "start": 35,
              "end": 37
            },
            {
              "entity": "I-MISC",
              "score": 0.6686325669288635,
              "index": 29,
              "word": "##O",
              "start": 37,
              "end": 38
            },
            {
              "entity": "I-MISC",
              "score": 0.5165736675262451,
              "index": 30,
              "word": "##G",
              "start": 38,
              "end": 39
            }
          ]
        },
        {
          "sentence": 2,
          "input": "СОЗДАНИЕ СОСТАВНЫХ ТЕРМОВ ............................................................................................................................. 1  8.1.2.",
          "output": []
        },
        {
          "sentence": 3,
          "input": "РАБОТА С СОСТАВНЫМИ ТЕРМАМИ ......................................................................................................................... 2  8.1.3.",
          "output": []
        },
        {
          "sentence": 4,
          "input": "РЕАЛИЗАЦИЯ БАЗЫ ДАННЫХ С ИСПОЛЬЗОВАНИЕМ СОСТАВНЫХ ТЕРМОВ ....................................................................... 3  8.1.3.1.",
          "output": []
        },
        {
          "sentence": 5,
          "input": "Описание структуры базы данных ......................................................................................................... 3  8.1.3.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9719433784484863,
              "index": 6,
              "word": ".",
              "start": 31,
              "end": 32
            },
            {
              "entity": "I-MISC",
              "score": 0.6061428785324097,
              "index": 7,
              "word": ".",
              "start": 32,
              "end": 33
            }
          ]
        },
        {
          "sentence": 6,
          "input": "Добавление записей в базу данных ......................................................................................................... 4  8.1.3.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9781493544578552,
              "index": 10,
              "word": ".",
              "start": 33,
              "end": 34
            }
          ]
        },
        {
          "sentence": 7,
          "input": "Вывод коллекции книг пользователя ..................................................................................................... 5  8.1.3.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8144705891609192,
              "index": 11,
              "word": ".",
              "start": 34,
              "end": 35
            }
          ]
        },
        {
          "sentence": 8,
          "input": "Вывод всех книг всех пользователей ...................................................................................................... 6  8.1.3.5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7575533390045166,
              "index": 10,
              "word": ".",
              "start": 35,
              "end": 36
            }
          ]
        },
        {
          "sentence": 9,
          "input": "Удаление из коллекции книг пользователя ........................................................................................... 7  8.1.3.6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9517166018486023,
              "index": 13,
              "word": ".",
              "start": 40,
              "end": 41
            },
            {
              "entity": "I-MISC",
              "score": 0.6504117846488953,
              "index": 14,
              "word": ".",
              "start": 41,
              "end": 42
            },
            {
              "entity": "I-MISC",
              "score": 0.5548852682113647,
              "index": 15,
              "word": ".",
              "start": 42,
              "end": 43
            }
          ]
        },
        {
          "sentence": 10,
          "input": "Поиск книг в коллекции ............................................................................................................................. 9  8.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7634404301643372,
              "index": 8,
              "word": ".",
              "start": 23,
              "end": 24
            }
          ]
        },
        {
          "sentence": 11,
          "input": "РАЗРАБОТКА ГРАФИЧЕСКИХ ИНТЕРФЕЙСОВ В SWI-PROLOG ........................................................................ 10    8.1.",
          "output": []
        },
        {
          "sentence": 12,
          "input": "Использование составных термов в Prolog  8.1.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9977658987045288,
              "index": 12,
              "word": "Pro",
              "start": 33,
              "end": 36
            },
            {
              "entity": "I-MISC",
              "score": 0.9907191395759583,
              "index": 13,
              "word": "##log",
              "start": 36,
              "end": 39
            }
          ]
        },
        {
          "sentence": 13,
          "input": "Создание составных термов  В Прологе функциональный терм или предикат можно рассматривать как структуру  данных.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9910022616386414,
              "index": 10,
              "word": "Про",
              "start": 29,
              "end": 32
            },
            {
              "entity": "I-MISC",
              "score": 0.6971560120582581,
              "index": 11,
              "word": "##лог",
              "start": 32,
              "end": 35
            }
          ]
        },
        {
          "sentence": 14,
          "input": "Терм, представляющий совокупность термов, называется составным термом.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8184193968772888,
              "index": 1,
              "word": "Те",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 15,
          "input": "В Прологе составные термы являются основой для представления сложных структур  данных.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9868541955947876,
              "index": 2,
              "word": "Про",
              "start": 2,
              "end": 5
            },
            {
              "entity": "B-MISC",
              "score": 0.5713798403739929,
              "index": 3,
              "word": "##лог",
              "start": 5,
              "end": 8
            }
          ]
        },
        {
          "sentence": 16,
          "input": "Они позволяют моделировать объекты и отношения в виде иерархической структуры.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5266129374504089,
              "index": 14,
              "word": "ие",
              "start": 54,
              "end": 56
            }
          ]
        },
        {
          "sentence": 17,
          "input": "Составной терм состоит из функционального символа  (функтор) и одного или  нескольких аргументов.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6506474614143372,
              "index": 4,
              "word": "те",
              "start": 10,
              "end": 12
            }
          ]
        },
        {
          "sentence": 18,
          "input": "Общий вид:  Функтор(Аргумент1, Аргумент2, ..., АргументN)    Терм можно создавать как статически, так и динамически:  % Пример статического терма  person(john, 25, male).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7154085040092468,
              "index": 9,
              "word": "А",
              "start": 20,
              "end": 21
            },
            {
              "entity": "I-MISC",
              "score": 0.5228822231292725,
              "index": 10,
              "word": "##рг",
              "start": 21,
              "end": 23
            },
            {
              "entity": "I-MISC",
              "score": 0.6550100445747375,
              "index": 11,
              "word": "##уме",
              "start": 23,
              "end": 26
            },
            {
              "entity": "I-MISC",
              "score": 0.6584989428520203,
              "index": 12,
              "word": "##нт",
              "start": 26,
              "end": 28
            },
            {
              "entity": "B-MISC",
              "score": 0.8072523474693298,
              "index": 15,
              "word": "А",
              "start": 31,
              "end": 32
            },
            {
              "entity": "I-MISC",
              "score": 0.5693911910057068,
              "index": 16,
              "word": "##рг",
              "start": 32,
              "end": 34
            },
            {
              "entity": "I-MISC",
              "score": 0.6874333024024963,
              "index": 17,
              "word": "##уме",
              "start": 34,
              "end": 37
            },
            {
              "entity": "I-MISC",
              "score": 0.6967084407806396,
              "index": 18,
              "word": "##нт",
              "start": 37,
              "end": 39
            },
            {
              "entity": "B-MISC",
              "score": 0.8060644268989563,
              "index": 25,
              "word": "А",
              "start": 47,
              "end": 48
            },
            {
              "entity": "I-MISC",
              "score": 0.5907834768295288,
              "index": 26,
              "word": "##рг",
              "start": 48,
              "end": 50
            },
            {
              "entity": "I-MISC",
              "score": 0.6834862232208252,
              "index": 27,
              "word": "##уме",
              "start": 50,
              "end": 53
            },
            {
              "entity": "I-MISC",
              "score": 0.7037919759750366,
              "index": 28,
              "word": "##нт",
              "start": 53,
              "end": 55
            }
          ]
        },
        {
          "sentence": 19,
          "input": "% Человек с именем, возрастом и полом  % Создание терма в переменной  Term = person(john, 25, male).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9785738587379456,
              "index": 21,
              "word": "Ter",
              "start": 70,
              "end": 73
            },
            {
              "entity": "I-MISC",
              "score": 0.9799866080284119,
              "index": 22,
              "word": "##m",
              "start": 73,
              "end": 74
            }
          ]
        },
        {
          "sentence": 20,
          "input": "% Переменная Term содержит терм  Для извлечения значений из терма используется декомпозиция (унификация):  2      Построение терма из имени функтора и списка аргументов  Используется предикат =.. (разворачивание терма):        8.1.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9818931818008423,
              "index": 5,
              "word": "Ter",
              "start": 13,
              "end": 16
            },
            {
              "entity": "I-MISC",
              "score": 0.9772891402244568,
              "index": 6,
              "word": "##m",
              "start": 16,
              "end": 17
            }
          ]
        },
        {
          "sentence": 21,
          "input": "Работа с составными термами  Проверка, является ли объект термом:        Извлечение элементов терма.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7866116762161255,
              "index": 10,
              "word": "Про",
              "start": 29,
              "end": 32
            }
          ]
        },
        {
          "sentence": 22,
          "input": "Для получения имени функторов и аргументов используются  следующие предикаты:   3    Извлечение аргумента по индексу.",
          "output": []
        },
        {
          "sentence": 23,
          "input": "Предикат arg/3 используется для доступа к  определенному аргументу:      8.1.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9979462027549744,
              "index": 4,
              "word": "ar",
              "start": 9,
              "end": 11
            },
            {
              "entity": "I-MISC",
              "score": 0.8483676314353943,
              "index": 5,
              "word": "##g",
              "start": 11,
              "end": 12
            }
          ]
        },
        {
          "sentence": 24,
          "input": "Реализация базы данных с использованием составных термов  Пример 8.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9821110367774963,
              "index": 12,
              "word": "При",
              "start": 58,
              "end": 61
            },
            {
              "entity": "I-MISC",
              "score": 0.8486694097518921,
              "index": 13,
              "word": "##мер",
              "start": 61,
              "end": 64
            }
          ]
        },
        {
          "sentence": 25,
          "input": "Необходимо создать БД, содержащую сведения о книгах из личной библиотеки.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9880887866020203,
              "index": 6,
              "word": "Б",
              "start": 19,
              "end": 20
            },
            {
              "entity": "I-MISC",
              "score": 0.7176415324211121,
              "index": 7,
              "word": "##Д",
              "start": 20,
              "end": 21
            }
          ]
        },
        {
          "sentence": 26,
          "input": "8.1.3.1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9923829436302185,
              "index": 1,
              "word": "8",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 27,
          "input": "Описание структуры базы данных    В языке Prolog, директива :- dynamic используется для объявления динамических  фактов и правил , которые могут быть добавлены или удалены во время выполнения  программы.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9977805018424988,
              "index": 8,
              "word": "Pro",
              "start": 42,
              "end": 45
            },
            {
              "entity": "I-MISC",
              "score": 0.9797871112823486,
              "index": 9,
              "word": "##log",
              "start": 45,
              "end": 48
            }
          ]
        },
        {
          "sentence": 28,
          "input": "Она указывает системе Prolog, что факт или правило, определенное в программе,  должно быть изменяемым во время работы программы (в отличие от статичных фактов и  правил, которые не могут быть изменены).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9965258240699768,
              "index": 5,
              "word": "Pro",
              "start": 22,
              "end": 25
            },
            {
              "entity": "I-MISC",
              "score": 0.9767548441886902,
              "index": 6,
              "word": "##log",
              "start": 25,
              "end": 28
            }
          ]
        },
        {
          "sentence": 29,
          "input": ":- dynamic collection/2 – этот код объявляет предикат collection/2 как динамический, то  есть он может быть изменен (добавлен или удален) в проц ессе выполнения программы, он  принимает два аргумента:   Первый аргумент будет идентификатором коллекционера (например, имя  пользователя, который собирает книги).",
          "output": []
        },
        {
          "sentence": 30,
          "input": " Второй аргумент будет коллекцией (например, список книг, принадлежащих  этому пользователю).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7781270742416382,
              "index": 6,
              "word": "кол",
              "start": 24,
              "end": 27
            },
            {
              "entity": "B-MISC",
              "score": 0.7133808732032776,
              "index": 7,
              "word": "##лек",
              "start": 27,
              "end": 30
            }
          ]
        },
        {
          "sentence": 31,
          "input": "collection('John', [book('The Hobbit', 'J.R.R.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5697146058082581,
              "index": 4,
              "word": "John",
              "start": 12,
              "end": 16
            },
            {
              "entity": "B-MISC",
              "score": 0.895118772983551,
              "index": 11,
              "word": "The",
              "start": 26,
              "end": 29
            },
            {
              "entity": "I-MISC",
              "score": 0.9268446564674377,
              "index": 12,
              "word": "Ho",
              "start": 30,
              "end": 32
            },
            {
              "entity": "I-MISC",
              "score": 0.9874204993247986,
              "index": 13,
              "word": "##bbit",
              "start": 32,
              "end": 36
            },
            {
              "entity": "B-MISC",
              "score": 0.409405380487442,
              "index": 17,
              "word": "J",
              "start": 40,
              "end": 41
            },
            {
              "entity": "I-MISC",
              "score": 0.49369338154792786,
              "index": 19,
              "word": "R",
              "start": 42,
              "end": 43
            }
          ]
        },
        {
          "sentence": 32,
          "input": "Tolkien', 'HarperCollins', 1937)]).",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.8704943656921387,
              "index": 1,
              "word": "Tolkien",
              "start": 0,
              "end": 7
            },
            {
              "entity": "B-ORG",
              "score": 0.8325899243354797,
              "index": 5,
              "word": "HarperCollins",
              "start": 11,
              "end": 24
            }
          ]
        },
        {
          "sentence": 33,
          "input": "4  Этот факт означает, что у пользователя 'John' есть коллекция книг, состоящая из одной  книги.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9033845067024231,
              "index": 13,
              "word": "John",
              "start": 43,
              "end": 47
            }
          ]
        },
        {
          "sentence": 34,
          "input": "Что делает директива :- dynamic?",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9791072607040405,
              "index": 9,
              "word": "dynamic",
              "start": 24,
              "end": 31
            }
          ]
        },
        {
          "sentence": 35,
          "input": "Эта директива говорит Prolog, что предикат  collection/2 может быть изменен в процессе работы программы, то есть вы можете добавлять,  изменять или удалять факты и правила для этого предиката.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9911043643951416,
              "index": 7,
              "word": "Pro",
              "start": 22,
              "end": 25
            },
            {
              "entity": "I-MISC",
              "score": 0.9760596752166748,
              "index": 8,
              "word": "##log",
              "start": 25,
              "end": 28
            }
          ]
        },
        {
          "sentence": 36,
          "input": "8.1.3.2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.992673933506012,
              "index": 1,
              "word": "8",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 37,
          "input": "Добавление записей в базу данных    Проверка наличия коллекции   collection(Collector, Library)  – это факт, который описывает коллекцию книг для  пользователя (Collector), где Library – это список книг в коллекции.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8084732294082642,
              "index": 20,
              "word": "Colle",
              "start": 77,
              "end": 82
            },
            {
              "entity": "I-MISC",
              "score": 0.9074617028236389,
              "index": 21,
              "word": "##ctor",
              "start": 82,
              "end": 86
            },
            {
              "entity": "B-MISC",
              "score": 0.8472840785980225,
              "index": 23,
              "word": "Library",
              "start": 88,
              "end": 95
            },
            {
              "entity": "B-MISC",
              "score": 0.7092026472091675,
              "index": 42,
              "word": "Colle",
              "start": 162,
              "end": 167
            },
            {
              "entity": "I-MISC",
              "score": 0.8786442279815674,
              "index": 43,
              "word": "##ctor",
              "start": 167,
              "end": 171
            },
            {
              "entity": "B-MISC",
              "score": 0.757392942905426,
              "index": 47,
              "word": "Library",
              "start": 178,
              "end": 185
            }
          ]
        },
        {
          "sentence": 38,
          "input": " Этот предикат проверяет, существует ли уже коллекция для указанного пользователя.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7827633619308472,
              "index": 2,
              "word": "преди",
              "start": 7,
              "end": 12
            }
          ]
        },
        {
          "sentence": 39,
          "input": "Если факт существует (то есть коллекция для Collector уже есть), выполняется левая часть  выражения (внутри ->).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9931949377059937,
              "index": 11,
              "word": "Colle",
              "start": 44,
              "end": 49
            },
            {
              "entity": "I-MISC",
              "score": 0.9876357913017273,
              "index": 12,
              "word": "##ctor",
              "start": 49,
              "end": 53
            }
          ]
        },
        {
          "sentence": 40,
          "input": "Если коллекции нет, выполняется правая часть выражения (после  ;).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8672701120376587,
              "index": 2,
              "word": "кол",
              "start": 5,
              "end": 8
            }
          ]
        },
        {
          "sentence": 41,
          "input": "Добавление книги в коллекцию   append(Library, [book(Title, Author, Publisher, Year)], NewLibrary)  – это операция добавления  новой книги в список существующих книг.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7631224393844604,
              "index": 12,
              "word": "Library",
              "start": 39,
              "end": 46
            },
            {
              "entity": "B-MISC",
              "score": 0.9539167284965515,
              "index": 27,
              "word": "New",
              "start": 88,
              "end": 91
            },
            {
              "entity": "I-MISC",
              "score": 0.910567045211792,
              "index": 28,
              "word": "##L",
              "start": 91,
              "end": 92
            },
            {
              "entity": "I-MISC",
              "score": 0.9881835579872131,
              "index": 29,
              "word": "##ib",
              "start": 92,
              "end": 94
            },
            {
              "entity": "I-MISC",
              "score": 0.9877042770385742,
              "index": 30,
              "word": "##rary",
              "start": 94,
              "end": 98
            }
          ]
        },
        {
          "sentence": 42,
          "input": " Library –  это текущая коллекция книг (список).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9969801306724548,
              "index": 1,
              "word": "Library",
              "start": 2,
              "end": 9
            }
          ]
        },
        {
          "sentence": 43,
          "input": " [book(Title, Author, Publisher, Year)]  – это новый терм (книга), который добавляется в  коллекцию.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.3651338517665863,
              "index": 6,
              "word": "Author",
              "start": 15,
              "end": 21
            },
            {
              "entity": "I-MISC",
              "score": 0.5913418531417847,
              "index": 8,
              "word": "Publisher",
              "start": 23,
              "end": 32
            },
            {
              "entity": "I-MISC",
              "score": 0.51045823097229,
              "index": 10,
              "word": "Year",
              "start": 34,
              "end": 38
            }
          ]
        },
        {
          "sentence": 44,
          "input": "Книга состоит из четырех компонентов: Title (название), Author (автор),  Publisher (издатель), и Year (год издания).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8280072808265686,
              "index": 10,
              "word": "Title",
              "start": 38,
              "end": 43
            },
            {
              "entity": "B-MISC",
              "score": 0.8183949589729309,
              "index": 15,
              "word": "Author",
              "start": 56,
              "end": 62
            },
            {
              "entity": "B-MISC",
              "score": 0.7763007283210754,
              "index": 20,
              "word": "Publisher",
              "start": 73,
              "end": 82
            },
            {
              "entity": "B-MISC",
              "score": 0.8494957089424133,
              "index": 27,
              "word": "Year",
              "start": 97,
              "end": 101
            }
          ]
        },
        {
          "sentence": 45,
          "input": " NewLibrary – это новый список, в который добавлена книга.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.998757004737854,
              "index": 1,
              "word": "New",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.9784933924674988,
              "index": 2,
              "word": "##L",
              "start": 5,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.9929613471031189,
              "index": 3,
              "word": "##ib",
              "start": 6,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.9960505366325378,
              "index": 4,
              "word": "##rary",
              "start": 8,
              "end": 12
            }
          ]
        },
        {
          "sentence": 46,
          "input": "Удаление старой коллекции   retract(collection(Collector, Library)) – этот предикат удаляет факт о старой коллекции для  пользователя Collector.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7929750084877014,
              "index": 16,
              "word": "Colle",
              "start": 48,
              "end": 53
            },
            {
              "entity": "I-MISC",
              "score": 0.8343908786773682,
              "index": 17,
              "word": "##ctor",
              "start": 53,
              "end": 57
            },
            {
              "entity": "B-MISC",
              "score": 0.6837930679321289,
              "index": 19,
              "word": "Library",
              "start": 59,
              "end": 66
            },
            {
              "entity": "B-MISC",
              "score": 0.9681982398033142,
              "index": 42,
              "word": "Colle",
              "start": 135,
              "end": 140
            },
            {
              "entity": "I-MISC",
              "score": 0.9844036102294922,
              "index": 43,
              "word": "##ctor",
              "start": 140,
              "end": 144
            }
          ]
        },
        {
          "sentence": 47,
          "input": "После того как мы обновим коллекцию, старая версия будет  удалена.",
          "output": []
        },
        {
          "sentence": 48,
          "input": "Если в базе данных есть несколько фактов, которые совпадают с тем, что вы  хотите  удалить, retract/1 удалит только первый совпавший факт.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9949623346328735,
              "index": 25,
              "word": "ret",
              "start": 92,
              "end": 95
            },
            {
              "entity": "I-MISC",
              "score": 0.9648732542991638,
              "index": 26,
              "word": "##rac",
              "start": 95,
              "end": 98
            },
            {
              "entity": "I-MISC",
              "score": 0.9439824819564819,
              "index": 27,
              "word": "##t",
              "start": 98,
              "end": 99
            }
          ]
        },
        {
          "sentence": 49,
          "input": "Для удаления всех  совпадений можно использовать retractall/1, который удаляет все совпадающие  факты.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9969738721847534,
              "index": 11,
              "word": "ret",
              "start": 49,
              "end": 52
            },
            {
              "entity": "I-MISC",
              "score": 0.9524310827255249,
              "index": 12,
              "word": "##rac",
              "start": 52,
              "end": 55
            },
            {
              "entity": "I-MISC",
              "score": 0.9003363251686096,
              "index": 13,
              "word": "##tal",
              "start": 55,
              "end": 58
            },
            {
              "entity": "I-MISC",
              "score": 0.8560717105865479,
              "index": 14,
              "word": "##l",
              "start": 58,
              "end": 59
            }
          ]
        },
        {
          "sentence": 50,
          "input": "5   предикат retract/1 является встроенным в Prolog и используется для удаления фактов  или прав ил из базы данных во время выполнения программы.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9983213543891907,
              "index": 15,
              "word": "Pro",
              "start": 46,
              "end": 49
            },
            {
              "entity": "I-MISC",
              "score": 0.9910434484481812,
              "index": 16,
              "word": "##log",
              "start": 49,
              "end": 52
            }
          ]
        },
        {
          "sentence": 51,
          "input": "Использование retract/1  позволяет заменить старое значение коллекции новым.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9980891346931458,
              "index": 6,
              "word": "ret",
              "start": 14,
              "end": 17
            },
            {
              "entity": "I-MISC",
              "score": 0.9867323040962219,
              "index": 7,
              "word": "##rac",
              "start": 17,
              "end": 20
            },
            {
              "entity": "I-MISC",
              "score": 0.9827663898468018,
              "index": 8,
              "word": "##t",
              "start": 20,
              "end": 21
            }
          ]
        },
        {
          "sentence": 52,
          "input": "Добавление обновленной коллекции   assertz(collection(Collector, NewLibrary)) – этот предикат добавляет новую коллекцию  (NewLibrary) в базу данных.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8405774235725403,
              "index": 16,
              "word": "Colle",
              "start": 55,
              "end": 60
            },
            {
              "entity": "I-MISC",
              "score": 0.7201406955718994,
              "index": 17,
              "word": "##ctor",
              "start": 60,
              "end": 64
            },
            {
              "entity": "B-MISC",
              "score": 0.9625726342201233,
              "index": 19,
              "word": "New",
              "start": 66,
              "end": 69
            },
            {
              "entity": "I-MISC",
              "score": 0.5935354232788086,
              "index": 20,
              "word": "##L",
              "start": 69,
              "end": 70
            },
            {
              "entity": "I-MISC",
              "score": 0.9605665802955627,
              "index": 21,
              "word": "##ib",
              "start": 70,
              "end": 72
            },
            {
              "entity": "I-MISC",
              "score": 0.9550700187683105,
              "index": 22,
              "word": "##rary",
              "start": 72,
              "end": 76
            },
            {
              "entity": "B-MISC",
              "score": 0.9447547793388367,
              "index": 36,
              "word": "New",
              "start": 123,
              "end": 126
            },
            {
              "entity": "I-MISC",
              "score": 0.7262624502182007,
              "index": 37,
              "word": "##L",
              "start": 126,
              "end": 127
            },
            {
              "entity": "I-MISC",
              "score": 0.9594375491142273,
              "index": 38,
              "word": "##ib",
              "start": 127,
              "end": 129
            },
            {
              "entity": "I-MISC",
              "score": 0.9546204805374146,
              "index": 39,
              "word": "##rary",
              "start": 129,
              "end": 133
            }
          ]
        },
        {
          "sentence": 53,
          "input": " предикат assertz/1 является встроенным в Prolog и используется для добавления новых  фактов или правил в базу данных во время выполнения программы.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9984058737754822,
              "index": 14,
              "word": "Pro",
              "start": 43,
              "end": 46
            },
            {
              "entity": "I-MISC",
              "score": 0.9921262264251709,
              "index": 15,
              "word": "##log",
              "start": 46,
              "end": 49
            }
          ]
        },
        {
          "sentence": 54,
          "input": "Используется для  записи обновленной коллекции после добавления новой книги.",
          "output": []
        },
        {
          "sentence": 55,
          "input": "Prolog также предо ставляет предикат assert/1, который работает аналогично assertz/1,  но с некоторыми отличиями:   assertz/1 добавляет факт или правило в конец базы данных.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.987542986869812,
              "index": 1,
              "word": "Pro",
              "start": 0,
              "end": 3
            },
            {
              "entity": "I-MISC",
              "score": 0.9627657532691956,
              "index": 2,
              "word": "##log",
              "start": 3,
              "end": 6
            }
          ]
        },
        {
          "sentence": 56,
          "input": " assert/1 добавляет факт или правило в начало базы данных (что может повлиять на  порядок выполнения некоторых предикатов, если база данных используется для  поиска).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.996026873588562,
              "index": 1,
              "word": "ass",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.9786689281463623,
              "index": 2,
              "word": "##ert",
              "start": 5,
              "end": 8
            }
          ]
        },
        {
          "sentence": 57,
          "input": "Создание новой коллекции, если ее нет   Если коллекция для пользователя Collector еще не существует, создается новая коллекция  с одной книгой.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9938610792160034,
              "index": 21,
              "word": "Colle",
              "start": 73,
              "end": 78
            },
            {
              "entity": "I-MISC",
              "score": 0.9953752756118774,
              "index": 22,
              "word": "##ctor",
              "start": 78,
              "end": 82
            }
          ]
        },
        {
          "sentence": 58,
          "input": " В этом случае для пользователя создается новый факт, где коллекция содержит одну  книгу (переданный терм book(Title, Author, Publisher, Year)).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6200680732727051,
              "index": 30,
              "word": "Title",
              "start": 112,
              "end": 117
            },
            {
              "entity": "B-MISC",
              "score": 0.559811532497406,
              "index": 32,
              "word": "Author",
              "start": 119,
              "end": 125
            },
            {
              "entity": "B-MISC",
              "score": 0.449663370847702,
              "index": 34,
              "word": "Publisher",
              "start": 127,
              "end": 136
            },
            {
              "entity": "B-MISC",
              "score": 0.43936625123023987,
              "index": 36,
              "word": "Year",
              "start": 138,
              "end": 142
            }
          ]
        },
        {
          "sentence": 59,
          "input": "8.1.3.3.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9921722412109375,
              "index": 1,
              "word": "8",
              "start": 0,
              "end": 1
            }
          ]
        },
        {
          "sentence": 60,
          "input": "Вывод коллекции книг пользователя    show_collection('Alice').",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9739845991134644,
              "index": 16,
              "word": "Alice",
              "start": 54,
              "end": 59
            }
          ]
        },
        {
          "sentence": 61,
          "input": "Пролог ищет факт collection('Alice', Books)  в динамической  базе данных.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9370392560958862,
              "index": 10,
              "word": "Alice",
              "start": 29,
              "end": 34
            },
            {
              "entity": "B-MISC",
              "score": 0.6597981452941895,
              "index": 13,
              "word": "Books",
              "start": 37,
              "end": 42
            }
          ]
        },
        {
          "sentence": 62,
          "input": "Если факт найден, переменная Books получает список книг, если факт не найден,  предикат возвращает false.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9714183211326599,
              "index": 9,
              "word": "Books",
              "start": 29,
              "end": 34
            }
          ]
        },
        {
          "sentence": 63,
          "input": "Для каждой книги из Books: Пролог вызывает writeln/1, чтобы напечатать информацию  о книге.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9969362020492554,
              "index": 5,
              "word": "Books",
              "start": 20,
              "end": 25
            },
            {
              "entity": "I-MISC",
              "score": 0.9889432191848755,
              "index": 6,
              "word": ":",
              "start": 25,
              "end": 26
            },
            {
              "entity": "I-MISC",
              "score": 0.9812718033790588,
              "index": 7,
              "word": "Про",
              "start": 27,
              "end": 30
            },
            {
              "entity": "I-MISC",
              "score": 0.9874216318130493,
              "index": 8,
              "word": "##лог",
              "start": 30,
              "end": 33
            }
          ]
        },
        {
          "sentence": 64,
          "input": "После того как все книги напечатаны, предикат завершает выполнение с результатом  true.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9894575476646423,
              "index": 20,
              "word": "true",
              "start": 82,
              "end": 86
            }
          ]
        },
        {
          "sentence": 65,
          "input": "Создадим для пользователя Alice коллекцию из трех книг  и выведем коллекцию книг  этого пользователя:     6  Результат:      8.1.3.4.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9974520802497864,
              "index": 10,
              "word": "Alice",
              "start": 26,
              "end": 31
            }
          ]
        },
        {
          "sentence": 66,
          "input": "Вывод всех книг всех пользователей    Результат работы:       7  8.1.3.5.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6231529712677002,
              "index": 16,
              "word": "7",
              "start": 62,
              "end": 63
            }
          ]
        },
        {
          "sentence": 67,
          "input": "Удаление из коллекции книг пользователя    1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9718812108039856,
              "index": 13,
              "word": "1",
              "start": 43,
              "end": 44
            }
          ]
        },
        {
          "sentence": 68,
          "input": "Предикат collection/2 пытается найти факт в базе данных, соответствующий форме:  collection(Collector, Library)  где:   Collector – имя коллекционера.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8235596418380737,
              "index": 23,
              "word": "Colle",
              "start": 92,
              "end": 97
            },
            {
              "entity": "I-MISC",
              "score": 0.8351054787635803,
              "index": 24,
              "word": "##ctor",
              "start": 97,
              "end": 101
            },
            {
              "entity": "B-MISC",
              "score": 0.8151483535766602,
              "index": 26,
              "word": "Library",
              "start": 103,
              "end": 110
            },
            {
              "entity": "B-MISC",
              "score": 0.40601757168769836,
              "index": 30,
              "word": "Colle",
              "start": 121,
              "end": 126
            }
          ]
        },
        {
          "sentence": 69,
          "input": " Library – список книг, связанных с этим коллекционером.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9965075850486755,
              "index": 1,
              "word": "Library",
              "start": 2,
              "end": 9
            }
          ]
        },
        {
          "sentence": 70,
          "input": "Если факт найден, переменная Library получает значение списка книг коллекционера.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9928581714630127,
              "index": 9,
              "word": "Library",
              "start": 29,
              "end": 36
            }
          ]
        },
        {
          "sentence": 71,
          "input": "Если факт не найден, предикат завершается с результатом false, и дальнейшая часть  кода не выполняется.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.997277557849884,
              "index": 14,
              "word": "false",
              "start": 56,
              "end": 61
            }
          ]
        },
        {
          "sentence": 72,
          "input": "Пример: Если в базе данных есть:  collection('Alice', [book('The Hobbit', 'J.R.R.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8781020641326904,
              "index": 13,
              "word": "Alice",
              "start": 46,
              "end": 51
            },
            {
              "entity": "B-MISC",
              "score": 0.8818913698196411,
              "index": 20,
              "word": "The",
              "start": 61,
              "end": 64
            },
            {
              "entity": "I-MISC",
              "score": 0.944628894329071,
              "index": 21,
              "word": "Ho",
              "start": 65,
              "end": 67
            },
            {
              "entity": "I-MISC",
              "score": 0.991534948348999,
              "index": 22,
              "word": "##bbit",
              "start": 67,
              "end": 71
            }
          ]
        },
        {
          "sentence": 73,
          "input": "Tolkien', 'HarperCollins', 1937),    book('1984', 'George Orwell', 'Penguin Books', 1949)]).",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.89021235704422,
              "index": 1,
              "word": "Tolkien",
              "start": 0,
              "end": 7
            },
            {
              "entity": "B-ORG",
              "score": 0.9631875157356262,
              "index": 5,
              "word": "HarperCollins",
              "start": 11,
              "end": 24
            },
            {
              "entity": "B-PER",
              "score": 0.9954919815063477,
              "index": 18,
              "word": "George",
              "start": 51,
              "end": 57
            },
            {
              "entity": "I-PER",
              "score": 0.9964866638183594,
              "index": 19,
              "word": "Or",
              "start": 58,
              "end": 60
            },
            {
              "entity": "I-PER",
              "score": 0.9947082996368408,
              "index": 20,
              "word": "##well",
              "start": 60,
              "end": 64
            },
            {
              "entity": "B-ORG",
              "score": 0.9834696054458618,
              "index": 24,
              "word": "Penguin",
              "start": 68,
              "end": 75
            },
            {
              "entity": "I-ORG",
              "score": 0.9858938455581665,
              "index": 25,
              "word": "Books",
              "start": 76,
              "end": 81
            }
          ]
        },
        {
          "sentence": 74,
          "input": "и вызван remove_book('Alice', 'The Hobbit'), то:  Collector унифицируется с 'Alice'.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8746079802513123,
              "index": 10,
              "word": "Alice",
              "start": 22,
              "end": 27
            },
            {
              "entity": "B-MISC",
              "score": 0.9355471730232239,
              "index": 14,
              "word": "The",
              "start": 31,
              "end": 34
            },
            {
              "entity": "I-MISC",
              "score": 0.9407783150672913,
              "index": 15,
              "word": "Ho",
              "start": 35,
              "end": 37
            },
            {
              "entity": "I-MISC",
              "score": 0.9863317012786865,
              "index": 16,
              "word": "##bbit",
              "start": 37,
              "end": 41
            },
            {
              "entity": "B-MISC",
              "score": 0.7810094952583313,
              "index": 22,
              "word": "Colle",
              "start": 50,
              "end": 55
            },
            {
              "entity": "I-MISC",
              "score": 0.7278935313224792,
              "index": 23,
              "word": "##ctor",
              "start": 55,
              "end": 59
            },
            {
              "entity": "B-MISC",
              "score": 0.8096871972084045,
              "index": 31,
              "word": "Alice",
              "start": 77,
              "end": 82
            }
          ]
        },
        {
          "sentence": 75,
          "input": "Library унифицируется со списком:    [book('The Hobbit', 'J.R.R.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9348359107971191,
              "index": 16,
              "word": "The",
              "start": 44,
              "end": 47
            },
            {
              "entity": "I-MISC",
              "score": 0.9459519386291504,
              "index": 17,
              "word": "Ho",
              "start": 48,
              "end": 50
            },
            {
              "entity": "I-MISC",
              "score": 0.9919965863227844,
              "index": 18,
              "word": "##bbit",
              "start": 50,
              "end": 54
            }
          ]
        },
        {
          "sentence": 76,
          "input": "Tolkien', 'HarperCollins', 1937),     book('1984', 'George Orwell', 'Penguin Books', 1949)].",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.9023446440696716,
              "index": 1,
              "word": "Tolkien",
              "start": 0,
              "end": 7
            },
            {
              "entity": "B-ORG",
              "score": 0.9658383131027222,
              "index": 5,
              "word": "HarperCollins",
              "start": 11,
              "end": 24
            },
            {
              "entity": "B-PER",
              "score": 0.9959927797317505,
              "index": 18,
              "word": "George",
              "start": 52,
              "end": 58
            },
            {
              "entity": "I-PER",
              "score": 0.996469259262085,
              "index": 19,
              "word": "Or",
              "start": 59,
              "end": 61
            },
            {
              "entity": "I-PER",
              "score": 0.9947254061698914,
              "index": 20,
              "word": "##well",
              "start": 61,
              "end": 65
            },
            {
              "entity": "B-ORG",
              "score": 0.9836756587028503,
              "index": 24,
              "word": "Penguin",
              "start": 69,
              "end": 76
            },
            {
              "entity": "I-ORG",
              "score": 0.9857529997825623,
              "index": 25,
              "word": "Books",
              "start": 77,
              "end": 82
            }
          ]
        },
        {
          "sentence": 77,
          "input": "2. select(book(Title, _, _, _), Library, NewLibrary):   select/3 – это встроенный предикат Prolog, который удаляет первый элемент из  списка, совпадающий с заданным шаблоном, и возвращает оставшуюся часть списка.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.903121829032898,
              "index": 16,
              "word": "Library",
              "start": 32,
              "end": 39
            },
            {
              "entity": "B-MISC",
              "score": 0.9396200180053711,
              "index": 18,
              "word": "New",
              "start": 41,
              "end": 44
            },
            {
              "entity": "I-MISC",
              "score": 0.759441077709198,
              "index": 19,
              "word": "##L",
              "start": 44,
              "end": 45
            },
            {
              "entity": "I-MISC",
              "score": 0.9312707781791687,
              "index": 20,
              "word": "##ib",
              "start": 45,
              "end": 47
            },
            {
              "entity": "I-MISC",
              "score": 0.9188432693481445,
              "index": 21,
              "word": "##rary",
              "start": 47,
              "end": 51
            },
            {
              "entity": "B-MISC",
              "score": 0.9763976335525513,
              "index": 35,
              "word": "Pro",
              "start": 92,
              "end": 95
            },
            {
              "entity": "I-MISC",
              "score": 0.9793633818626404,
              "index": 36,
              "word": "##log",
              "start": 95,
              "end": 98
            }
          ]
        },
        {
          "sentence": 78,
          "input": " В данном случае:   book(Title, _, _, _)  – это шаблон, который ищет книгу с указанным заголовком  (Title) и игнорирует остальные параметры (автор, издатель, год).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9244376420974731,
              "index": 8,
              "word": "Title",
              "start": 27,
              "end": 32
            },
            {
              "entity": "B-MISC",
              "score": 0.8915566205978394,
              "index": 36,
              "word": "Title",
              "start": 102,
              "end": 107
            }
          ]
        },
        {
          "sentence": 79,
          "input": " Library – текущий список книг.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9978862404823303,
              "index": 1,
              "word": "Library",
              "start": 2,
              "end": 9
            }
          ]
        },
        {
          "sentence": 80,
          "input": " NewLibrary – список книг после удаления указанной книги.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9986546039581299,
              "index": 1,
              "word": "New",
              "start": 2,
              "end": 5
            },
            {
              "entity": "I-MISC",
              "score": 0.9818653464317322,
              "index": 2,
              "word": "##L",
              "start": 5,
              "end": 6
            },
            {
              "entity": "I-MISC",
              "score": 0.9957289099693298,
              "index": 3,
              "word": "##ib",
              "start": 6,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.997201681137085,
              "index": 4,
              "word": "##rary",
              "start": 8,
              "end": 12
            }
          ]
        },
        {
          "sentence": 81,
          "input": "Пример:  Если Title = 'The Hobbit', а Library:    [book('The Hobbit', 'J.R.R.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.7516072988510132,
              "index": 8,
              "word": "The",
              "start": 23,
              "end": 26
            },
            {
              "entity": "I-MISC",
              "score": 0.9164454340934753,
              "index": 9,
              "word": "Ho",
              "start": 27,
              "end": 29
            },
            {
              "entity": "I-MISC",
              "score": 0.9833811521530151,
              "index": 10,
              "word": "##bbit",
              "start": 29,
              "end": 33
            },
            {
              "entity": "B-MISC",
              "score": 0.5935078263282776,
              "index": 20,
              "word": "The",
              "start": 57,
              "end": 60
            },
            {
              "entity": "I-MISC",
              "score": 0.899333119392395,
              "index": 21,
              "word": "Ho",
              "start": 61,
              "end": 63
            },
            {
              "entity": "I-MISC",
              "score": 0.9788984656333923,
              "index": 22,
              "word": "##bbit",
              "start": 63,
              "end": 67
            }
          ]
        },
        {
          "sentence": 82,
          "input": "Tolkien', 'HarperCollins', 1937),     book('1984', 'George Orwell', 'Penguin Books', 1949)].",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.9023446440696716,
              "index": 1,
              "word": "Tolkien",
              "start": 0,
              "end": 7
            },
            {
              "entity": "B-ORG",
              "score": 0.9658383131027222,
              "index": 5,
              "word": "HarperCollins",
              "start": 11,
              "end": 24
            },
            {
              "entity": "B-PER",
              "score": 0.9959927797317505,
              "index": 18,
              "word": "George",
              "start": 52,
              "end": 58
            },
            {
              "entity": "I-PER",
              "score": 0.996469259262085,
              "index": 19,
              "word": "Or",
              "start": 59,
              "end": 61
            },
            {
              "entity": "I-PER",
              "score": 0.9947254061698914,
              "index": 20,
              "word": "##well",
              "start": 61,
              "end": 65
            },
            {
              "entity": "B-ORG",
              "score": 0.9836756587028503,
              "index": 24,
              "word": "Penguin",
              "start": 69,
              "end": 76
            },
            {
              "entity": "I-ORG",
              "score": 0.9857529997825623,
              "index": 25,
              "word": "Books",
              "start": 77,
              "end": 82
            }
          ]
        },
        {
          "sentence": 83,
          "input": "То предикат select/3 удалит book('The Hobbit', ...) из списка, и NewLibrary станет:    [book('1984', 'George Orwell', 'Penguin Books', 1949)].",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6658889055252075,
              "index": 13,
              "word": "The",
              "start": 34,
              "end": 37
            },
            {
              "entity": "I-MISC",
              "score": 0.9661978483200073,
              "index": 14,
              "word": "Ho",
              "start": 38,
              "end": 40
            },
            {
              "entity": "I-MISC",
              "score": 0.9884607791900635,
              "index": 15,
              "word": "##bbit",
              "start": 40,
              "end": 44
            },
            {
              "entity": "B-MISC",
              "score": 0.774458646774292,
              "index": 28,
              "word": "New",
              "start": 65,
              "end": 68
            },
            {
              "entity": "I-MISC",
              "score": 0.8518826961517334,
              "index": 29,
              "word": "##L",
              "start": 68,
              "end": 69
            },
            {
              "entity": "I-MISC",
              "score": 0.8446335196495056,
              "index": 30,
              "word": "##ib",
              "start": 69,
              "end": 71
            },
            {
              "entity": "I-MISC",
              "score": 0.8513311147689819,
              "index": 31,
              "word": "##rary",
              "start": 71,
              "end": 75
            },
            {
              "entity": "B-PER",
              "score": 0.9497047066688538,
              "index": 43,
              "word": "George",
              "start": 102,
              "end": 108
            },
            {
              "entity": "I-PER",
              "score": 0.9474968314170837,
              "index": 44,
              "word": "Or",
              "start": 109,
              "end": 111
            },
            {
              "entity": "I-PER",
              "score": 0.9109950065612793,
              "index": 45,
              "word": "##well",
              "start": 111,
              "end": 115
            },
            {
              "entity": "B-ORG",
              "score": 0.9411730766296387,
              "index": 49,
              "word": "Penguin",
              "start": 119,
              "end": 126
            },
            {
              "entity": "I-ORG",
              "score": 0.9447591304779053,
              "index": 50,
              "word": "Books",
              "start": 127,
              "end": 132
            }
          ]
        },
        {
          "sentence": 84,
          "input": "Если в списке нет книги с указанным заголовком, предикат select/3 завершится с  результатом false, и дальнейшая часть кода не будет выполнена.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.878989040851593,
              "index": 17,
              "word": "select",
              "start": 57,
              "end": 63
            },
            {
              "entity": "B-MISC",
              "score": 0.7133611440658569,
              "index": 26,
              "word": "false",
              "start": 92,
              "end": 97
            }
          ]
        },
        {
          "sentence": 85,
          "input": "3. retract(collection(Collector, Library)):   retract/1 удаляет факт из базы данных, если он существует и унифицируется с  аргументом.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9016733765602112,
              "index": 9,
              "word": "Colle",
              "start": 22,
              "end": 27
            },
            {
              "entity": "I-MISC",
              "score": 0.8343179225921631,
              "index": 10,
              "word": "##ctor",
              "start": 27,
              "end": 31
            },
            {
              "entity": "B-MISC",
              "score": 0.8770109415054321,
              "index": 12,
              "word": "Library",
              "start": 33,
              "end": 40
            }
          ]
        },
        {
          "sentence": 86,
          "input": "В данном случае удаляется факт вида:   8  collection(Collector, Library)   После удаления из базы данных больше не будет записи для данного коллекционера с  его старой библиотекой.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9599274396896362,
              "index": 14,
              "word": "Colle",
              "start": 53,
              "end": 58
            },
            {
              "entity": "I-MISC",
              "score": 0.9597297310829163,
              "index": 15,
              "word": "##ctor",
              "start": 58,
              "end": 62
            },
            {
              "entity": "B-MISC",
              "score": 0.776789128780365,
              "index": 17,
              "word": "Library",
              "start": 64,
              "end": 71
            }
          ]
        },
        {
          "sentence": 87,
          "input": "Пример: Если до выполнения retract/1 в базе есть:  collection('Alice', [book('The Hobbit', 'J.R.R.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8856663107872009,
              "index": 20,
              "word": "Alice",
              "start": 63,
              "end": 68
            },
            {
              "entity": "B-MISC",
              "score": 0.8609269857406616,
              "index": 27,
              "word": "The",
              "start": 78,
              "end": 81
            },
            {
              "entity": "I-MISC",
              "score": 0.9642360806465149,
              "index": 28,
              "word": "Ho",
              "start": 82,
              "end": 84
            },
            {
              "entity": "I-MISC",
              "score": 0.9915186762809753,
              "index": 29,
              "word": "##bbit",
              "start": 84,
              "end": 88
            }
          ]
        },
        {
          "sentence": 88,
          "input": "Tolkien', 'HarperCollins', 1937),                       book('1984', 'George Orwell', 'Penguin Books', 1949)]).",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.89021235704422,
              "index": 1,
              "word": "Tolkien",
              "start": 0,
              "end": 7
            },
            {
              "entity": "B-ORG",
              "score": 0.9631875157356262,
              "index": 5,
              "word": "HarperCollins",
              "start": 11,
              "end": 24
            },
            {
              "entity": "B-PER",
              "score": 0.9954919815063477,
              "index": 18,
              "word": "George",
              "start": 70,
              "end": 76
            },
            {
              "entity": "I-PER",
              "score": 0.9964866638183594,
              "index": 19,
              "word": "Or",
              "start": 77,
              "end": 79
            },
            {
              "entity": "I-PER",
              "score": 0.9947082996368408,
              "index": 20,
              "word": "##well",
              "start": 79,
              "end": 83
            },
            {
              "entity": "B-ORG",
              "score": 0.9834696054458618,
              "index": 24,
              "word": "Penguin",
              "start": 87,
              "end": 94
            },
            {
              "entity": "I-ORG",
              "score": 0.9858938455581665,
              "index": 25,
              "word": "Books",
              "start": 95,
              "end": 100
            }
          ]
        },
        {
          "sentence": 89,
          "input": "то после выполнения предиката этот факт будет удалён.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9765799641609192,
              "index": 5,
              "word": "преди",
              "start": 20,
              "end": 25
            }
          ]
        },
        {
          "sentence": 90,
          "input": "4. assertz(collection(Collector, NewLibrary)):   assertz/1 добавляет новый факт в базу данных, размещая его в конце списка фактов.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9294803738594055,
              "index": 9,
              "word": "Colle",
              "start": 22,
              "end": 27
            },
            {
              "entity": "I-MISC",
              "score": 0.8499777317047119,
              "index": 10,
              "word": "##ctor",
              "start": 27,
              "end": 31
            },
            {
              "entity": "B-MISC",
              "score": 0.9917586445808411,
              "index": 12,
              "word": "New",
              "start": 33,
              "end": 36
            },
            {
              "entity": "I-MISC",
              "score": 0.5060596466064453,
              "index": 13,
              "word": "##L",
              "start": 36,
              "end": 37
            },
            {
              "entity": "I-MISC",
              "score": 0.9684047698974609,
              "index": 14,
              "word": "##ib",
              "start": 37,
              "end": 39
            },
            {
              "entity": "I-MISC",
              "score": 0.9757629632949829,
              "index": 15,
              "word": "##rary",
              "start": 39,
              "end": 43
            }
          ]
        },
        {
          "sentence": 91,
          "input": "В  данном случае добавляется обновлённая коллекция:  collection(Collector, NewLibrary)   Теперь новая библиотека с удалённой книгой записана в базу данных.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9290462136268616,
              "index": 18,
              "word": "Colle",
              "start": 64,
              "end": 69
            },
            {
              "entity": "I-MISC",
              "score": 0.8532091975212097,
              "index": 19,
              "word": "##ctor",
              "start": 69,
              "end": 73
            },
            {
              "entity": "B-MISC",
              "score": 0.9889262914657593,
              "index": 21,
              "word": "New",
              "start": 75,
              "end": 78
            },
            {
              "entity": "I-MISC",
              "score": 0.7414190769195557,
              "index": 22,
              "word": "##L",
              "start": 78,
              "end": 79
            },
            {
              "entity": "I-MISC",
              "score": 0.9764774441719055,
              "index": 23,
              "word": "##ib",
              "start": 79,
              "end": 81
            },
            {
              "entity": "I-MISC",
              "score": 0.9772588014602661,
              "index": 24,
              "word": "##rary",
              "start": 81,
              "end": 85
            }
          ]
        },
        {
          "sentence": 92,
          "input": "Пример: После выполнения:  assertz(collection('Alice', [book('1984', 'George Orwell', 'Penguin Books', 1949)])).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.5572346448898315,
              "index": 15,
              "word": "Alice",
              "start": 47,
              "end": 52
            },
            {
              "entity": "B-PER",
              "score": 0.9921126365661621,
              "index": 26,
              "word": "George",
              "start": 70,
              "end": 76
            },
            {
              "entity": "I-PER",
              "score": 0.9913384914398193,
              "index": 27,
              "word": "Or",
              "start": 77,
              "end": 79
            },
            {
              "entity": "I-PER",
              "score": 0.9817242622375488,
              "index": 28,
              "word": "##well",
              "start": 79,
              "end": 83
            },
            {
              "entity": "B-ORG",
              "score": 0.9807119369506836,
              "index": 32,
              "word": "Penguin",
              "start": 87,
              "end": 94
            },
            {
              "entity": "I-ORG",
              "score": 0.9816043376922607,
              "index": 33,
              "word": "Books",
              "start": 95,
              "end": 100
            }
          ]
        },
        {
          "sentence": 93,
          "input": "база данных будет содержать:  collection('Alice', [book('1984', 'George Orwell', 'Penguin Books', 1949)]).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.785284698009491,
              "index": 10,
              "word": "Alice",
              "start": 42,
              "end": 47
            },
            {
              "entity": "B-PER",
              "score": 0.9856911301612854,
              "index": 21,
              "word": "George",
              "start": 65,
              "end": 71
            },
            {
              "entity": "I-PER",
              "score": 0.9855066537857056,
              "index": 22,
              "word": "Or",
              "start": 72,
              "end": 74
            },
            {
              "entity": "I-PER",
              "score": 0.9751225709915161,
              "index": 23,
              "word": "##well",
              "start": 74,
              "end": 78
            },
            {
              "entity": "B-ORG",
              "score": 0.9738200902938843,
              "index": 27,
              "word": "Penguin",
              "start": 82,
              "end": 89
            },
            {
              "entity": "I-ORG",
              "score": 0.9758656024932861,
              "index": 28,
              "word": "Books",
              "start": 90,
              "end": 95
            }
          ]
        },
        {
          "sentence": 94,
          "input": "Результат:       9  8.1.3.6.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9863952398300171,
              "index": 6,
              "word": "9",
              "start": 17,
              "end": 18
            }
          ]
        },
        {
          "sentence": 95,
          "input": "Поиск книг в коллекции       Факт collection(Collector, Library):   Предикат collection/2 извлекает библиотеку (список книг) для коллекционера с именем  Collector.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6669670939445496,
              "index": 13,
              "word": "Colle",
              "start": 45,
              "end": 50
            },
            {
              "entity": "I-MISC",
              "score": 0.8918678164482117,
              "index": 14,
              "word": "##ctor",
              "start": 50,
              "end": 54
            },
            {
              "entity": "B-MISC",
              "score": 0.39183861017227173,
              "index": 16,
              "word": "Library",
              "start": 56,
              "end": 63
            },
            {
              "entity": "B-MISC",
              "score": 0.6092830300331116,
              "index": 44,
              "word": "Colle",
              "start": 154,
              "end": 159
            },
            {
              "entity": "I-MISC",
              "score": 0.9095945954322815,
              "index": 45,
              "word": "##ctor",
              "start": 159,
              "end": 163
            }
          ]
        },
        {
          "sentence": 96,
          "input": " Например, для коллекционера 'Alice' библиотека может выглядеть так:  Library = [book('1984', 'George Orwell', 'Penguin Books', 1949),    book('The Catcher in the Rye', 'J.D.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6484443545341492,
              "index": 9,
              "word": "Alice",
              "start": 31,
              "end": 36
            },
            {
              "entity": "B-PER",
              "score": 0.9361166954040527,
              "index": 28,
              "word": "George",
              "start": 96,
              "end": 102
            },
            {
              "entity": "I-PER",
              "score": 0.9618653059005737,
              "index": 29,
              "word": "Or",
              "start": 103,
              "end": 105
            },
            {
              "entity": "I-PER",
              "score": 0.927764356136322,
              "index": 30,
              "word": "##well",
              "start": 105,
              "end": 109
            },
            {
              "entity": "B-ORG",
              "score": 0.9620767831802368,
              "index": 34,
              "word": "Penguin",
              "start": 113,
              "end": 120
            },
            {
              "entity": "I-ORG",
              "score": 0.9613611102104187,
              "index": 35,
              "word": "Books",
              "start": 121,
              "end": 126
            },
            {
              "entity": "I-MISC",
              "score": 0.5629140138626099,
              "index": 44,
              "word": "The",
              "start": 145,
              "end": 148
            },
            {
              "entity": "I-MISC",
              "score": 0.9967261552810669,
              "index": 45,
              "word": "Catch",
              "start": 149,
              "end": 154
            },
            {
              "entity": "I-MISC",
              "score": 0.9990766048431396,
              "index": 46,
              "word": "##er",
              "start": 154,
              "end": 156
            },
            {
              "entity": "I-MISC",
              "score": 0.9987201690673828,
              "index": 47,
              "word": "in",
              "start": 157,
              "end": 159
            },
            {
              "entity": "I-MISC",
              "score": 0.9987549781799316,
              "index": 48,
              "word": "the",
              "start": 160,
              "end": 163
            },
            {
              "entity": "I-MISC",
              "score": 0.9988987445831299,
              "index": 49,
              "word": "R",
              "start": 164,
              "end": 165
            },
            {
              "entity": "I-MISC",
              "score": 0.9985358715057373,
              "index": 50,
              "word": "##ye",
              "start": 165,
              "end": 167
            },
            {
              "entity": "I-MISC",
              "score": 0.634265124797821,
              "index": 54,
              "word": "J",
              "start": 171,
              "end": 172
            },
            {
              "entity": "I-MISC",
              "score": 0.5973928570747375,
              "index": 55,
              "word": ".",
              "start": 172,
              "end": 173
            },
            {
              "entity": "I-MISC",
              "score": 0.5643711686134338,
              "index": 56,
              "word": "D",
              "start": 173,
              "end": 174
            }
          ]
        },
        {
          "sentence": 97,
          "input": "Salinger', 'Little, Brown', 1951),    book('The Hobbit', 'J.R.R.",
          "output": [
            {
              "entity": "B-ORG",
              "score": 0.8951183557510376,
              "index": 6,
              "word": "Little",
              "start": 12,
              "end": 18
            },
            {
              "entity": "I-ORG",
              "score": 0.6372516751289368,
              "index": 7,
              "word": ",",
              "start": 18,
              "end": 19
            },
            {
              "entity": "I-ORG",
              "score": 0.7069743871688843,
              "index": 8,
              "word": "Brown",
              "start": 20,
              "end": 25
            },
            {
              "entity": "B-MISC",
              "score": 0.7685075998306274,
              "index": 17,
              "word": "The",
              "start": 44,
              "end": 47
            },
            {
              "entity": "I-MISC",
              "score": 0.9693880081176758,
              "index": 18,
              "word": "Ho",
              "start": 48,
              "end": 50
            },
            {
              "entity": "I-MISC",
              "score": 0.9942160248756409,
              "index": 19,
              "word": "##bbit",
              "start": 50,
              "end": 54
            },
            {
              "entity": "B-MISC",
              "score": 0.29205140471458435,
              "index": 23,
              "word": "J",
              "start": 58,
              "end": 59
            },
            {
              "entity": "I-MISC",
              "score": 0.5378356575965881,
              "index": 25,
              "word": "R",
              "start": 60,
              "end": 61
            }
          ]
        },
        {
          "sentence": 98,
          "input": "Tolkien', 'HarperCollins', 1937)].",
          "output": [
            {
              "entity": "B-PER",
              "score": 0.8801669478416443,
              "index": 1,
              "word": "Tolkien",
              "start": 0,
              "end": 7
            },
            {
              "entity": "B-ORG",
              "score": 0.8471536636352539,
              "index": 5,
              "word": "HarperCollins",
              "start": 11,
              "end": 24
            }
          ]
        },
        {
          "sentence": 99,
          "input": "Фильтрация с помощью include/3:  Предикат include/3 создаёт новый список, отбирая элементы из Library, которые  удовлетворяют заданному условию.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9942187070846558,
              "index": 28,
              "word": "Library",
              "start": 94,
              "end": 101
            }
          ]
        },
        {
          "sentence": 100,
          "input": "Синтаксис:  include(Condition, List, FilteredList)   Condition – это цель (например, сравнение  или предикат), которая проверяется  для каждого элемента из List.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9617627263069153,
              "index": 10,
              "word": "List",
              "start": 31,
              "end": 35
            },
            {
              "entity": "B-MISC",
              "score": 0.963154673576355,
              "index": 12,
              "word": "Fi",
              "start": 37,
              "end": 39
            },
            {
              "entity": "I-MISC",
              "score": 0.9555233120918274,
              "index": 13,
              "word": "##lter",
              "start": 39,
              "end": 43
            },
            {
              "entity": "I-MISC",
              "score": 0.920825183391571,
              "index": 14,
              "word": "##ed",
              "start": 43,
              "end": 45
            },
            {
              "entity": "I-MISC",
              "score": 0.8251010775566101,
              "index": 15,
              "word": "##L",
              "start": 45,
              "end": 46
            },
            {
              "entity": "I-MISC",
              "score": 0.9059939384460449,
              "index": 16,
              "word": "##ist",
              "start": 46,
              "end": 49
            },
            {
              "entity": "B-MISC",
              "score": 0.9765985012054443,
              "index": 44,
              "word": "List",
              "start": 157,
              "end": 161
            }
          ]
        },
        {
          "sentence": 101,
          "input": " FilteredList содержит только те элементы из List, которые удовлетворяют  Condition.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9415788650512695,
              "index": 1,
              "word": "Fi",
              "start": 2,
              "end": 4
            },
            {
              "entity": "I-MISC",
              "score": 0.8497893214225769,
              "index": 2,
              "word": "##lter",
              "start": 4,
              "end": 8
            },
            {
              "entity": "I-MISC",
              "score": 0.7743025422096252,
              "index": 3,
              "word": "##ed",
              "start": 8,
              "end": 10
            },
            {
              "entity": "I-MISC",
              "score": 0.7602077722549438,
              "index": 4,
              "word": "##L",
              "start": 10,
              "end": 11
            },
            {
              "entity": "I-MISC",
              "score": 0.8623992800712585,
              "index": 5,
              "word": "##ist",
              "start": 11,
              "end": 14
            },
            {
              "entity": "B-MISC",
              "score": 0.9573318362236023,
              "index": 11,
              "word": "List",
              "start": 46,
              "end": 50
            },
            {
              "entity": "B-MISC",
              "score": 0.8545076847076416,
              "index": 19,
              "word": "Con",
              "start": 75,
              "end": 78
            },
            {
              "entity": "I-MISC",
              "score": 0.781287431716919,
              "index": 20,
              "word": "##dition",
              "start": 78,
              "end": 84
            }
          ]
        },
        {
          "sentence": 102,
          "input": "Замыкание {Author}/[book(_, A, _, _)]>>(A = Author):  Это конструкция, которая определяет лямбда-функцию (анонимный предикат) для  фильтрации книг:   {Author} – связывает переменную Author из внешнего контекста.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.46614721417427063,
              "index": 6,
              "word": "Author",
              "start": 11,
              "end": 17
            },
            {
              "entity": "B-MISC",
              "score": 0.7995402812957764,
              "index": 26,
              "word": "Author",
              "start": 44,
              "end": 50
            },
            {
              "entity": "B-MISC",
              "score": 0.7618811726570129,
              "index": 72,
              "word": "Author",
              "start": 183,
              "end": 189
            }
          ]
        },
        {
          "sentence": 103,
          "input": " [book(_, A, _, _)]  – образец (паттерн), который соответствует каждому элементу  из Library.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9954015016555786,
              "index": 29,
              "word": "Library",
              "start": 86,
              "end": 93
            }
          ]
        },
        {
          "sentence": 104,
          "input": " >>(A = Author)  – цель, которая проверяет, совпадает ли автор книги (A) с  искомым автором (Author).",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6767210960388184,
              "index": 6,
              "word": "Author",
              "start": 9,
              "end": 15
            },
            {
              "entity": "B-MISC",
              "score": 0.5361281037330627,
              "index": 23,
              "word": "A",
              "start": 71,
              "end": 72
            },
            {
              "entity": "B-MISC",
              "score": 0.6195120215415955,
              "index": 31,
              "word": "Author",
              "start": 94,
              "end": 100
            }
          ]
        },
        {
          "sentence": 105,
          "input": "Аналогично:      Пример работы:   10    Результат:      8.2.",
          "output": []
        },
        {
          "sentence": 106,
          "input": "Разработка графических интерфейсов в SWI-Prolog  SWISH Prolog  – это веб-версия SWI-Prolog, которая позволяет работать с Прологом  через браузер.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6171451807022095,
              "index": 11,
              "word": "SW",
              "start": 37,
              "end": 39
            },
            {
              "entity": "I-MISC",
              "score": 0.8345351815223694,
              "index": 12,
              "word": "##I",
              "start": 39,
              "end": 40
            },
            {
              "entity": "I-MISC",
              "score": 0.6740232706069946,
              "index": 14,
              "word": "Pro",
              "start": 41,
              "end": 44
            },
            {
              "entity": "I-MISC",
              "score": 0.9013004899024963,
              "index": 15,
              "word": "##log",
              "start": 44,
              "end": 47
            },
            {
              "entity": "I-MISC",
              "score": 0.5146300792694092,
              "index": 16,
              "word": "SW",
              "start": 49,
              "end": 51
            },
            {
              "entity": "I-MISC",
              "score": 0.8055210709571838,
              "index": 17,
              "word": "##IS",
              "start": 51,
              "end": 53
            },
            {
              "entity": "I-MISC",
              "score": 0.8094411492347717,
              "index": 18,
              "word": "##H",
              "start": 53,
              "end": 54
            },
            {
              "entity": "I-MISC",
              "score": 0.7324894070625305,
              "index": 19,
              "word": "Pro",
              "start": 55,
              "end": 58
            },
            {
              "entity": "I-MISC",
              "score": 0.9107657670974731,
              "index": 20,
              "word": "##log",
              "start": 58,
              "end": 61
            },
            {
              "entity": "B-MISC",
              "score": 0.599403440952301,
              "index": 26,
              "word": "SW",
              "start": 80,
              "end": 82
            },
            {
              "entity": "I-MISC",
              "score": 0.9092618823051453,
              "index": 27,
              "word": "##I",
              "start": 82,
              "end": 83
            },
            {
              "entity": "I-MISC",
              "score": 0.5206572413444519,
              "index": 28,
              "word": "-",
              "start": 83,
              "end": 84
            },
            {
              "entity": "I-MISC",
              "score": 0.7096725702285767,
              "index": 29,
              "word": "Pro",
              "start": 84,
              "end": 87
            },
            {
              "entity": "I-MISC",
              "score": 0.9562814235687256,
              "index": 30,
              "word": "##log",
              "start": 87,
              "end": 90
            },
            {
              "entity": "I-MISC",
              "score": 0.4588160812854767,
              "index": 36,
              "word": "Про",
              "start": 121,
              "end": 124
            },
            {
              "entity": "I-MISC",
              "score": 0.7982215881347656,
              "index": 37,
              "word": "##лого",
              "start": 124,
              "end": 128
            },
            {
              "entity": "I-MISC",
              "score": 0.5444422960281372,
              "index": 38,
              "word": "##м",
              "start": 128,
              "end": 129
            }
          ]
        },
        {
          "sentence": 107,
          "input": "Однако, поскольку это веб -основная среда, возможности для работы с  графическими интерфейсами ограничены.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9981899857521057,
              "index": 5,
              "word": "веб",
              "start": 22,
              "end": 25
            }
          ]
        },
        {
          "sentence": 108,
          "input": "В отличие от обычной установки SWI -Prolog, где  можно использовать библиотеки, та кие как XPCE для создания графических интерфейсов, в  SWISH эти возможности в значительной степени отсутствуют.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9181973934173584,
              "index": 7,
              "word": "SW",
              "start": 31,
              "end": 33
            },
            {
              "entity": "I-MISC",
              "score": 0.7337956428527832,
              "index": 8,
              "word": "##I",
              "start": 33,
              "end": 34
            },
            {
              "entity": "B-MISC",
              "score": 0.795849084854126,
              "index": 10,
              "word": "Pro",
              "start": 36,
              "end": 39
            },
            {
              "entity": "I-MISC",
              "score": 0.9219731688499451,
              "index": 11,
              "word": "##log",
              "start": 39,
              "end": 42
            },
            {
              "entity": "B-MISC",
              "score": 0.8196180462837219,
              "index": 22,
              "word": "XP",
              "start": 91,
              "end": 93
            },
            {
              "entity": "I-MISC",
              "score": 0.713823676109314,
              "index": 23,
              "word": "##CE",
              "start": 93,
              "end": 95
            },
            {
              "entity": "B-MISC",
              "score": 0.5982767343521118,
              "index": 34,
              "word": "SW",
              "start": 137,
              "end": 139
            },
            {
              "entity": "I-MISC",
              "score": 0.5123027563095093,
              "index": 35,
              "word": "##IS",
              "start": 139,
              "end": 141
            }
          ]
        },
        {
          "sentence": 109,
          "input": "Тем не менее, в SWISH можно создать простой графический интерфейс с помощью  HTML, CSS и JavaScript, так как это веб -среда, которая поддерживает в заимодействие с веб - страницей.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9833707809448242,
              "index": 21,
              "word": "HTML",
              "start": 77,
              "end": 81
            },
            {
              "entity": "B-MISC",
              "score": 0.9821938276290894,
              "index": 23,
              "word": "CSS",
              "start": 83,
              "end": 86
            },
            {
              "entity": "B-MISC",
              "score": 0.9802485108375549,
              "index": 25,
              "word": "JavaScript",
              "start": 89,
              "end": 99
            }
          ]
        },
        {
          "sentence": 110,
          "input": "Способы разработки интерфейсов в SWISH Prolog:  1.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9881309270858765,
              "index": 10,
              "word": "SW",
              "start": 33,
              "end": 35
            },
            {
              "entity": "I-MISC",
              "score": 0.9781324863433838,
              "index": 11,
              "word": "##IS",
              "start": 35,
              "end": 37
            },
            {
              "entity": "I-MISC",
              "score": 0.9833685755729675,
              "index": 12,
              "word": "##H",
              "start": 37,
              "end": 38
            },
            {
              "entity": "I-MISC",
              "score": 0.7715820074081421,
              "index": 13,
              "word": "Pro",
              "start": 39,
              "end": 42
            },
            {
              "entity": "I-MISC",
              "score": 0.9888774752616882,
              "index": 14,
              "word": "##log",
              "start": 42,
              "end": 45
            }
          ]
        },
        {
          "sentence": 111,
          "input": "Интерактивный интерфейс с использованием HTML и JavaScript : В SWISH можно  использовать HTML и JavaScript для создания веб-страниц, которые взаимодействуют с  Прологом.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.956423819065094,
              "index": 11,
              "word": "HTML",
              "start": 41,
              "end": 45
            },
            {
              "entity": "B-MISC",
              "score": 0.954860508441925,
              "index": 13,
              "word": "JavaScript",
              "start": 48,
              "end": 58
            },
            {
              "entity": "B-MISC",
              "score": 0.9268956780433655,
              "index": 21,
              "word": "HTML",
              "start": 89,
              "end": 93
            },
            {
              "entity": "B-MISC",
              "score": 0.9104925394058228,
              "index": 23,
              "word": "JavaScript",
              "start": 96,
              "end": 106
            },
            {
              "entity": "B-MISC",
              "score": 0.46540552377700806,
              "index": 38,
              "word": "Про",
              "start": 160,
              "end": 163
            },
            {
              "entity": "I-MISC",
              "score": 0.7983105182647705,
              "index": 39,
              "word": "##лого",
              "start": 163,
              "end": 167
            },
            {
              "entity": "I-MISC",
              "score": 0.7096109986305237,
              "index": 40,
              "word": "##м",
              "start": 167,
              "end": 168
            }
          ]
        },
        {
          "sentence": 112,
          "input": "Например, можно использовать JavaScript для отправки запросов к Прологу  и отображения результатов на веб-странице.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.9948920011520386,
              "index": 5,
              "word": "JavaScript",
              "start": 29,
              "end": 39
            },
            {
              "entity": "B-MISC",
              "score": 0.9604240655899048,
              "index": 14,
              "word": "Про",
              "start": 64,
              "end": 67
            },
            {
              "entity": "I-MISC",
              "score": 0.6848962306976318,
              "index": 15,
              "word": "##лог",
              "start": 67,
              "end": 70
            },
            {
              "entity": "I-MISC",
              "score": 0.626449704170227,
              "index": 16,
              "word": "##у",
              "start": 70,
              "end": 71
            }
          ]
        },
        {
          "sentence": 113,
          "input": "11  2.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.989859402179718,
              "index": 1,
              "word": "11",
              "start": 0,
              "end": 2
            }
          ]
        },
        {
          "sentence": 114,
          "input": "Использование библиотеки swish.js: SWISH предоставляет библиотеку swish.js,  которая позволяет взаимодействовать с Прологом через JavaScript.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.6501567363739014,
              "index": 40,
              "word": "Про",
              "start": 115,
              "end": 118
            },
            {
              "entity": "I-MISC",
              "score": 0.6851296424865723,
              "index": 41,
              "word": "##лого",
              "start": 118,
              "end": 122
            },
            {
              "entity": "I-MISC",
              "score": 0.5487893223762512,
              "index": 42,
              "word": "##м",
              "start": 122,
              "end": 123
            },
            {
              "entity": "B-MISC",
              "score": 0.8396022319793701,
              "index": 44,
              "word": "JavaScript",
              "start": 130,
              "end": 140
            }
          ]
        },
        {
          "sentence": 115,
          "input": "Это предоставляет  возможность создавать интерфейсы, а также взаимодействовать с системой в реальном  времени.",
          "output": [
            {
              "entity": "B-MISC",
              "score": 0.8933724164962769,
              "index": 10,
              "word": "ин",
              "start": 41,
              "end": 43
            },
            {
              "entity": "B-MISC",
              "score": 0.6686530113220215,
              "index": 11,
              "word": "##тер",
              "start": 43,
              "end": 46
            },
            {
              "entity": "I-MISC",
              "score": 0.5327173471450806,
              "index": 12,
              "word": "##фей",
              "start": 46,
              "end": 49
            }
          ]
        }
      ]
    }
  ]
}